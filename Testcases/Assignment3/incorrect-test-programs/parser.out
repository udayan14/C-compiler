Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     program -> function program
Rule 3     function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE
Rule 4     fbody -> allstatement
Rule 5     fbody -> allstatement fbody
Rule 6     allstatement -> statement
Rule 7     allstatement -> unmatchedstatement
Rule 8     statement -> assignment
Rule 9     statement -> declaration
Rule 10    statement -> whileblock
Rule 11    statement -> ifblock
Rule 12    unmatchedstatement -> IF LPAREN conditional RPAREN allstatement
Rule 13    unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
Rule 14    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 15    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
Rule 16    ifblock -> IF LPAREN conditional RPAREN statement ELSE statement
Rule 17    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
Rule 18    ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
Rule 19    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
Rule 20    whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 21    conditional -> CS
Rule 22    conditional -> conditional LESSTHANEQ conditional
Rule 23    conditional -> conditional GREATERTHANEQ conditional
Rule 24    conditional -> conditional UNEQUAL conditional
Rule 25    conditional -> conditional EQUALCHECK conditional
Rule 26    conditional -> conditional LESSTHAN conditional
Rule 27    conditional -> conditional GREATERTHAN conditional
Rule 28    CS -> expression
Rule 29    CS -> NOT LPAREN expression RPAREN
Rule 30    declaration -> TYPE dlist1 SEMICOLON
Rule 31    dlist1 -> NAME
Rule 32    dlist1 -> NAME COMMA dlist1
Rule 33    dlist1 -> specialvar
Rule 34    dlist1 -> specialvar COMMA dlist1
Rule 35    specialvar -> TIMES specialvar
Rule 36    specialvar -> TIMES NAME
Rule 37    assignment -> assignment_base SEMICOLON
Rule 38    assignment_base -> TIMES pointervar EQUALS expression
Rule 39    assignment_base -> NAME EQUALS expression
Rule 40    expression -> expression PLUS expression
Rule 41    expression -> expression MINUS expression
Rule 42    expression -> expression DIVIDE expression
Rule 43    expression -> expression TIMES expression
Rule 44    expression -> MINUS expression
Rule 45    expression -> LPAREN expression RPAREN
Rule 46    expression -> NUMBER
Rule 47    expression -> pointervar
Rule 48    pointervar -> TIMES pointervar
Rule 49    pointervar -> ADDROF pointervar
Rule 50    pointervar -> NAME

Terminals, with rules where they appear

ADDROF               : 49
COMMA                : 32 34
DIVIDE               : 42
ELSE                 : 13 15 16 17 18 19
EQUALCHECK           : 25
EQUALS               : 38 39
GREATERTHAN          : 27
GREATERTHANEQ        : 23
IF                   : 12 13 14 15 16 17 18 19
LBRACE               : 3 14 15 17 18 19 19 20
LESSTHAN             : 26
LESSTHANEQ           : 22
LPAREN               : 3 12 13 14 15 16 17 18 19 20 29 45
MINUS                : 41 44
NAME                 : 3 31 32 36 39 50
NOT                  : 29
NUMBER               : 46
PLUS                 : 40
RBRACE               : 3 14 15 17 18 19 19 20
RPAREN               : 3 12 13 14 15 16 17 18 19 20 29 45
SEMICOLON            : 30 37
TIMES                : 35 36 38 43 48
TYPE                 : 3 30
UNEQUAL              : 24
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

CS                   : 21
allstatement         : 4 5 12
assignment           : 8
assignment_base      : 37
conditional          : 12 13 14 15 16 17 18 19 20 22 22 23 23 24 24 25 25 26 26 27 27
declaration          : 9
dlist1               : 30 32 34
expression           : 28 29 38 39 40 40 41 41 42 42 43 43 44 45
fbody                : 3 5 14 15 17 18 19 19 20
function             : 1 2
ifblock              : 11
pointervar           : 38 47 48 49
program              : 2 0
specialvar           : 33 34 35
statement            : 6 13 16 16 17 18
unmatchedstatement   : 7 13 15
whileblock           : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    TYPE            shift and go to state 1

    function                       shift and go to state 2
    program                        shift and go to state 3

state 1

    (3) function -> TYPE . NAME LPAREN RPAREN LBRACE fbody RBRACE

    NAME            shift and go to state 4


state 2

    (1) program -> function .
    (2) program -> function . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    $end            reduce using rule 1 (program -> function .)
    TYPE            shift and go to state 1

    function                       shift and go to state 2
    program                        shift and go to state 5

state 3

    (0) S' -> program .



state 4

    (3) function -> TYPE NAME . LPAREN RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 6


state 5

    (2) program -> function program .

    $end            reduce using rule 2 (program -> function program .)


state 6

    (3) function -> TYPE NAME LPAREN . RPAREN LBRACE fbody RBRACE

    RPAREN          shift and go to state 7


state 7

    (3) function -> TYPE NAME LPAREN RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 8


state 8

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (37) assignment -> . assignment_base SEMICOLON
    (30) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (38) assignment_base -> . TIMES pointervar EQUALS expression
    (39) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 14
    TYPE            shift and go to state 20
    WHILE           shift and go to state 17
    TIMES           shift and go to state 11
    NAME            shift and go to state 21

    statement                      shift and go to state 15
    assignment                     shift and go to state 16
    fbody                          shift and go to state 10
    unmatchedstatement             shift and go to state 12
    whileblock                     shift and go to state 13
    allstatement                   shift and go to state 9
    assignment_base                shift and go to state 18
    declaration                    shift and go to state 19
    ifblock                        shift and go to state 22

state 9

    (4) fbody -> allstatement .
    (5) fbody -> allstatement . fbody
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (37) assignment -> . assignment_base SEMICOLON
    (30) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (38) assignment_base -> . TIMES pointervar EQUALS expression
    (39) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 4 (fbody -> allstatement .)
    IF              shift and go to state 14
    TYPE            shift and go to state 20
    WHILE           shift and go to state 17
    TIMES           shift and go to state 11
    NAME            shift and go to state 21

    statement                      shift and go to state 15
    assignment                     shift and go to state 16
    fbody                          shift and go to state 23
    unmatchedstatement             shift and go to state 12
    whileblock                     shift and go to state 13
    allstatement                   shift and go to state 9
    assignment_base                shift and go to state 18
    declaration                    shift and go to state 19
    ifblock                        shift and go to state 22

state 10

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 24


state 11

    (38) assignment_base -> TIMES . pointervar EQUALS expression
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    pointervar                     shift and go to state 26

state 12

    (7) allstatement -> unmatchedstatement .

    IF              reduce using rule 7 (allstatement -> unmatchedstatement .)
    TYPE            reduce using rule 7 (allstatement -> unmatchedstatement .)
    WHILE           reduce using rule 7 (allstatement -> unmatchedstatement .)
    TIMES           reduce using rule 7 (allstatement -> unmatchedstatement .)
    NAME            reduce using rule 7 (allstatement -> unmatchedstatement .)
    RBRACE          reduce using rule 7 (allstatement -> unmatchedstatement .)


state 13

    (10) statement -> whileblock .

    IF              reduce using rule 10 (statement -> whileblock .)
    TYPE            reduce using rule 10 (statement -> whileblock .)
    WHILE           reduce using rule 10 (statement -> whileblock .)
    TIMES           reduce using rule 10 (statement -> whileblock .)
    NAME            reduce using rule 10 (statement -> whileblock .)
    RBRACE          reduce using rule 10 (statement -> whileblock .)
    ELSE            reduce using rule 10 (statement -> whileblock .)


state 14

    (12) unmatchedstatement -> IF . LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> IF . LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) ifblock -> IF . LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> IF . LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE

    LPAREN          shift and go to state 29


state 15

    (6) allstatement -> statement .

    IF              reduce using rule 6 (allstatement -> statement .)
    TYPE            reduce using rule 6 (allstatement -> statement .)
    WHILE           reduce using rule 6 (allstatement -> statement .)
    TIMES           reduce using rule 6 (allstatement -> statement .)
    NAME            reduce using rule 6 (allstatement -> statement .)
    RBRACE          reduce using rule 6 (allstatement -> statement .)


state 16

    (8) statement -> assignment .

    IF              reduce using rule 8 (statement -> assignment .)
    TYPE            reduce using rule 8 (statement -> assignment .)
    WHILE           reduce using rule 8 (statement -> assignment .)
    TIMES           reduce using rule 8 (statement -> assignment .)
    NAME            reduce using rule 8 (statement -> assignment .)
    RBRACE          reduce using rule 8 (statement -> assignment .)
    ELSE            reduce using rule 8 (statement -> assignment .)


state 17

    (20) whileblock -> WHILE . LPAREN conditional RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 30


state 18

    (37) assignment -> assignment_base . SEMICOLON

    SEMICOLON       shift and go to state 31


state 19

    (9) statement -> declaration .

    IF              reduce using rule 9 (statement -> declaration .)
    TYPE            reduce using rule 9 (statement -> declaration .)
    WHILE           reduce using rule 9 (statement -> declaration .)
    TIMES           reduce using rule 9 (statement -> declaration .)
    NAME            reduce using rule 9 (statement -> declaration .)
    RBRACE          reduce using rule 9 (statement -> declaration .)
    ELSE            reduce using rule 9 (statement -> declaration .)


state 20

    (30) declaration -> TYPE . dlist1 SEMICOLON
    (31) dlist1 -> . NAME
    (32) dlist1 -> . NAME COMMA dlist1
    (33) dlist1 -> . specialvar
    (34) dlist1 -> . specialvar COMMA dlist1
    (35) specialvar -> . TIMES specialvar
    (36) specialvar -> . TIMES NAME

    NAME            shift and go to state 35
    TIMES           shift and go to state 33

    dlist1                         shift and go to state 32
    specialvar                     shift and go to state 34

state 21

    (39) assignment_base -> NAME . EQUALS expression

    EQUALS          shift and go to state 36


state 22

    (11) statement -> ifblock .

    IF              reduce using rule 11 (statement -> ifblock .)
    TYPE            reduce using rule 11 (statement -> ifblock .)
    WHILE           reduce using rule 11 (statement -> ifblock .)
    TIMES           reduce using rule 11 (statement -> ifblock .)
    NAME            reduce using rule 11 (statement -> ifblock .)
    RBRACE          reduce using rule 11 (statement -> ifblock .)
    ELSE            reduce using rule 11 (statement -> ifblock .)


state 23

    (5) fbody -> allstatement fbody .

    RBRACE          reduce using rule 5 (fbody -> allstatement fbody .)


state 24

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .

    TYPE            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)
    $end            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)


state 25

    (48) pointervar -> TIMES . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    pointervar                     shift and go to state 37

state 26

    (38) assignment_base -> TIMES pointervar . EQUALS expression

    EQUALS          shift and go to state 38


state 27

    (49) pointervar -> ADDROF . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    pointervar                     shift and go to state 39

state 28

    (50) pointervar -> NAME .

    PLUS            reduce using rule 50 (pointervar -> NAME .)
    MINUS           reduce using rule 50 (pointervar -> NAME .)
    DIVIDE          reduce using rule 50 (pointervar -> NAME .)
    TIMES           reduce using rule 50 (pointervar -> NAME .)
    RPAREN          reduce using rule 50 (pointervar -> NAME .)
    LESSTHANEQ      reduce using rule 50 (pointervar -> NAME .)
    GREATERTHANEQ   reduce using rule 50 (pointervar -> NAME .)
    UNEQUAL         reduce using rule 50 (pointervar -> NAME .)
    EQUALCHECK      reduce using rule 50 (pointervar -> NAME .)
    LESSTHAN        reduce using rule 50 (pointervar -> NAME .)
    GREATERTHAN     reduce using rule 50 (pointervar -> NAME .)
    SEMICOLON       reduce using rule 50 (pointervar -> NAME .)
    EQUALS          reduce using rule 50 (pointervar -> NAME .)


state 29

    (12) unmatchedstatement -> IF LPAREN . conditional RPAREN allstatement
    (13) unmatchedstatement -> IF LPAREN . conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) ifblock -> IF LPAREN . conditional RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> IF LPAREN . conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) CS -> . expression
    (29) CS -> . NOT LPAREN expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    NOT             shift and go to state 40
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 42
    conditional                    shift and go to state 41
    pointervar                     shift and go to state 45
    CS                             shift and go to state 47

state 30

    (20) whileblock -> WHILE LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) CS -> . expression
    (29) CS -> . NOT LPAREN expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    NOT             shift and go to state 40
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    conditional                    shift and go to state 48
    pointervar                     shift and go to state 45
    expression                     shift and go to state 42
    CS                             shift and go to state 47

state 31

    (37) assignment -> assignment_base SEMICOLON .

    IF              reduce using rule 37 (assignment -> assignment_base SEMICOLON .)
    TYPE            reduce using rule 37 (assignment -> assignment_base SEMICOLON .)
    WHILE           reduce using rule 37 (assignment -> assignment_base SEMICOLON .)
    TIMES           reduce using rule 37 (assignment -> assignment_base SEMICOLON .)
    NAME            reduce using rule 37 (assignment -> assignment_base SEMICOLON .)
    RBRACE          reduce using rule 37 (assignment -> assignment_base SEMICOLON .)
    ELSE            reduce using rule 37 (assignment -> assignment_base SEMICOLON .)


state 32

    (30) declaration -> TYPE dlist1 . SEMICOLON

    SEMICOLON       shift and go to state 49


state 33

    (35) specialvar -> TIMES . specialvar
    (36) specialvar -> TIMES . NAME
    (35) specialvar -> . TIMES specialvar
    (36) specialvar -> . TIMES NAME

    NAME            shift and go to state 50
    TIMES           shift and go to state 33

    specialvar                     shift and go to state 51

state 34

    (33) dlist1 -> specialvar .
    (34) dlist1 -> specialvar . COMMA dlist1

    SEMICOLON       reduce using rule 33 (dlist1 -> specialvar .)
    COMMA           shift and go to state 52


state 35

    (31) dlist1 -> NAME .
    (32) dlist1 -> NAME . COMMA dlist1

    SEMICOLON       reduce using rule 31 (dlist1 -> NAME .)
    COMMA           shift and go to state 53


state 36

    (39) assignment_base -> NAME EQUALS . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 54
    pointervar                     shift and go to state 45

state 37

    (48) pointervar -> TIMES pointervar .

    PLUS            reduce using rule 48 (pointervar -> TIMES pointervar .)
    MINUS           reduce using rule 48 (pointervar -> TIMES pointervar .)
    DIVIDE          reduce using rule 48 (pointervar -> TIMES pointervar .)
    TIMES           reduce using rule 48 (pointervar -> TIMES pointervar .)
    RPAREN          reduce using rule 48 (pointervar -> TIMES pointervar .)
    LESSTHANEQ      reduce using rule 48 (pointervar -> TIMES pointervar .)
    GREATERTHANEQ   reduce using rule 48 (pointervar -> TIMES pointervar .)
    UNEQUAL         reduce using rule 48 (pointervar -> TIMES pointervar .)
    EQUALCHECK      reduce using rule 48 (pointervar -> TIMES pointervar .)
    LESSTHAN        reduce using rule 48 (pointervar -> TIMES pointervar .)
    GREATERTHAN     reduce using rule 48 (pointervar -> TIMES pointervar .)
    SEMICOLON       reduce using rule 48 (pointervar -> TIMES pointervar .)
    EQUALS          reduce using rule 48 (pointervar -> TIMES pointervar .)


state 38

    (38) assignment_base -> TIMES pointervar EQUALS . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 55
    pointervar                     shift and go to state 45

state 39

    (49) pointervar -> ADDROF pointervar .

    PLUS            reduce using rule 49 (pointervar -> ADDROF pointervar .)
    MINUS           reduce using rule 49 (pointervar -> ADDROF pointervar .)
    DIVIDE          reduce using rule 49 (pointervar -> ADDROF pointervar .)
    TIMES           reduce using rule 49 (pointervar -> ADDROF pointervar .)
    RPAREN          reduce using rule 49 (pointervar -> ADDROF pointervar .)
    LESSTHANEQ      reduce using rule 49 (pointervar -> ADDROF pointervar .)
    GREATERTHANEQ   reduce using rule 49 (pointervar -> ADDROF pointervar .)
    UNEQUAL         reduce using rule 49 (pointervar -> ADDROF pointervar .)
    EQUALCHECK      reduce using rule 49 (pointervar -> ADDROF pointervar .)
    LESSTHAN        reduce using rule 49 (pointervar -> ADDROF pointervar .)
    GREATERTHAN     reduce using rule 49 (pointervar -> ADDROF pointervar .)
    SEMICOLON       reduce using rule 49 (pointervar -> ADDROF pointervar .)
    EQUALS          reduce using rule 49 (pointervar -> ADDROF pointervar .)


state 40

    (29) CS -> NOT . LPAREN expression RPAREN

    LPAREN          shift and go to state 56


state 41

    (12) unmatchedstatement -> IF LPAREN conditional . RPAREN allstatement
    (13) unmatchedstatement -> IF LPAREN conditional . RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) ifblock -> IF LPAREN conditional . RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> IF LPAREN conditional . RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional

    RPAREN          shift and go to state 63
    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 57
    UNEQUAL         shift and go to state 60
    EQUALCHECK      shift and go to state 62
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 58


state 42

    (28) CS -> expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . TIMES expression

    LESSTHANEQ      reduce using rule 28 (CS -> expression .)
    GREATERTHANEQ   reduce using rule 28 (CS -> expression .)
    UNEQUAL         reduce using rule 28 (CS -> expression .)
    EQUALCHECK      reduce using rule 28 (CS -> expression .)
    LESSTHAN        reduce using rule 28 (CS -> expression .)
    GREATERTHAN     reduce using rule 28 (CS -> expression .)
    RPAREN          reduce using rule 28 (CS -> expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 65
    TIMES           shift and go to state 67


state 43

    (44) expression -> MINUS . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 68
    pointervar                     shift and go to state 45

state 44

    (45) expression -> LPAREN . expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 69
    pointervar                     shift and go to state 45

state 45

    (47) expression -> pointervar .

    PLUS            reduce using rule 47 (expression -> pointervar .)
    MINUS           reduce using rule 47 (expression -> pointervar .)
    DIVIDE          reduce using rule 47 (expression -> pointervar .)
    TIMES           reduce using rule 47 (expression -> pointervar .)
    RPAREN          reduce using rule 47 (expression -> pointervar .)
    LESSTHANEQ      reduce using rule 47 (expression -> pointervar .)
    GREATERTHANEQ   reduce using rule 47 (expression -> pointervar .)
    UNEQUAL         reduce using rule 47 (expression -> pointervar .)
    EQUALCHECK      reduce using rule 47 (expression -> pointervar .)
    LESSTHAN        reduce using rule 47 (expression -> pointervar .)
    GREATERTHAN     reduce using rule 47 (expression -> pointervar .)
    SEMICOLON       reduce using rule 47 (expression -> pointervar .)


state 46

    (46) expression -> NUMBER .

    PLUS            reduce using rule 46 (expression -> NUMBER .)
    MINUS           reduce using rule 46 (expression -> NUMBER .)
    DIVIDE          reduce using rule 46 (expression -> NUMBER .)
    TIMES           reduce using rule 46 (expression -> NUMBER .)
    RPAREN          reduce using rule 46 (expression -> NUMBER .)
    LESSTHANEQ      reduce using rule 46 (expression -> NUMBER .)
    GREATERTHANEQ   reduce using rule 46 (expression -> NUMBER .)
    UNEQUAL         reduce using rule 46 (expression -> NUMBER .)
    EQUALCHECK      reduce using rule 46 (expression -> NUMBER .)
    LESSTHAN        reduce using rule 46 (expression -> NUMBER .)
    GREATERTHAN     reduce using rule 46 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 46 (expression -> NUMBER .)


state 47

    (21) conditional -> CS .

    LESSTHANEQ      reduce using rule 21 (conditional -> CS .)
    GREATERTHANEQ   reduce using rule 21 (conditional -> CS .)
    UNEQUAL         reduce using rule 21 (conditional -> CS .)
    EQUALCHECK      reduce using rule 21 (conditional -> CS .)
    LESSTHAN        reduce using rule 21 (conditional -> CS .)
    GREATERTHAN     reduce using rule 21 (conditional -> CS .)
    RPAREN          reduce using rule 21 (conditional -> CS .)


state 48

    (20) whileblock -> WHILE LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional

    RPAREN          shift and go to state 70
    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 57
    UNEQUAL         shift and go to state 60
    EQUALCHECK      shift and go to state 62
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 58


state 49

    (30) declaration -> TYPE dlist1 SEMICOLON .

    IF              reduce using rule 30 (declaration -> TYPE dlist1 SEMICOLON .)
    TYPE            reduce using rule 30 (declaration -> TYPE dlist1 SEMICOLON .)
    WHILE           reduce using rule 30 (declaration -> TYPE dlist1 SEMICOLON .)
    TIMES           reduce using rule 30 (declaration -> TYPE dlist1 SEMICOLON .)
    NAME            reduce using rule 30 (declaration -> TYPE dlist1 SEMICOLON .)
    RBRACE          reduce using rule 30 (declaration -> TYPE dlist1 SEMICOLON .)
    ELSE            reduce using rule 30 (declaration -> TYPE dlist1 SEMICOLON .)


state 50

    (36) specialvar -> TIMES NAME .

    COMMA           reduce using rule 36 (specialvar -> TIMES NAME .)
    SEMICOLON       reduce using rule 36 (specialvar -> TIMES NAME .)


state 51

    (35) specialvar -> TIMES specialvar .

    COMMA           reduce using rule 35 (specialvar -> TIMES specialvar .)
    SEMICOLON       reduce using rule 35 (specialvar -> TIMES specialvar .)


state 52

    (34) dlist1 -> specialvar COMMA . dlist1
    (31) dlist1 -> . NAME
    (32) dlist1 -> . NAME COMMA dlist1
    (33) dlist1 -> . specialvar
    (34) dlist1 -> . specialvar COMMA dlist1
    (35) specialvar -> . TIMES specialvar
    (36) specialvar -> . TIMES NAME

    NAME            shift and go to state 35
    TIMES           shift and go to state 33

    dlist1                         shift and go to state 71
    specialvar                     shift and go to state 34

state 53

    (32) dlist1 -> NAME COMMA . dlist1
    (31) dlist1 -> . NAME
    (32) dlist1 -> . NAME COMMA dlist1
    (33) dlist1 -> . specialvar
    (34) dlist1 -> . specialvar COMMA dlist1
    (35) specialvar -> . TIMES specialvar
    (36) specialvar -> . TIMES NAME

    NAME            shift and go to state 35
    TIMES           shift and go to state 33

    dlist1                         shift and go to state 72
    specialvar                     shift and go to state 34

state 54

    (39) assignment_base -> NAME EQUALS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 39 (assignment_base -> NAME EQUALS expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 65
    TIMES           shift and go to state 67


state 55

    (38) assignment_base -> TIMES pointervar EQUALS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 38 (assignment_base -> TIMES pointervar EQUALS expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 65
    TIMES           shift and go to state 67


state 56

    (29) CS -> NOT LPAREN . expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 73
    pointervar                     shift and go to state 45

state 57

    (23) conditional -> conditional GREATERTHANEQ . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) CS -> . expression
    (29) CS -> . NOT LPAREN expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    NOT             shift and go to state 40
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    conditional                    shift and go to state 74
    pointervar                     shift and go to state 45
    expression                     shift and go to state 42
    CS                             shift and go to state 47

state 58

    (27) conditional -> conditional GREATERTHAN . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) CS -> . expression
    (29) CS -> . NOT LPAREN expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    NOT             shift and go to state 40
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    conditional                    shift and go to state 75
    pointervar                     shift and go to state 45
    expression                     shift and go to state 42
    CS                             shift and go to state 47

state 59

    (26) conditional -> conditional LESSTHAN . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) CS -> . expression
    (29) CS -> . NOT LPAREN expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    NOT             shift and go to state 40
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    conditional                    shift and go to state 76
    pointervar                     shift and go to state 45
    expression                     shift and go to state 42
    CS                             shift and go to state 47

state 60

    (24) conditional -> conditional UNEQUAL . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) CS -> . expression
    (29) CS -> . NOT LPAREN expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    NOT             shift and go to state 40
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    conditional                    shift and go to state 77
    pointervar                     shift and go to state 45
    expression                     shift and go to state 42
    CS                             shift and go to state 47

state 61

    (22) conditional -> conditional LESSTHANEQ . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) CS -> . expression
    (29) CS -> . NOT LPAREN expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    NOT             shift and go to state 40
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    conditional                    shift and go to state 78
    pointervar                     shift and go to state 45
    expression                     shift and go to state 42
    CS                             shift and go to state 47

state 62

    (25) conditional -> conditional EQUALCHECK . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) CS -> . expression
    (29) CS -> . NOT LPAREN expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    NOT             shift and go to state 40
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    conditional                    shift and go to state 79
    pointervar                     shift and go to state 45
    expression                     shift and go to state 42
    CS                             shift and go to state 47

state 63

    (12) unmatchedstatement -> IF LPAREN conditional RPAREN . allstatement
    (13) unmatchedstatement -> IF LPAREN conditional RPAREN . statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) ifblock -> IF LPAREN conditional RPAREN . statement ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> IF LPAREN conditional RPAREN . statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (37) assignment -> . assignment_base SEMICOLON
    (30) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (38) assignment_base -> . TIMES pointervar EQUALS expression
    (39) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 80
    IF              shift and go to state 14
    TYPE            shift and go to state 20
    WHILE           shift and go to state 17
    TIMES           shift and go to state 11
    NAME            shift and go to state 21

    statement                      shift and go to state 82
    assignment                     shift and go to state 16
    unmatchedstatement             shift and go to state 12
    whileblock                     shift and go to state 13
    allstatement                   shift and go to state 81
    assignment_base                shift and go to state 18
    declaration                    shift and go to state 19
    ifblock                        shift and go to state 22

state 64

    (40) expression -> expression PLUS . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 83
    pointervar                     shift and go to state 45

state 65

    (42) expression -> expression DIVIDE . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 84
    pointervar                     shift and go to state 45

state 66

    (41) expression -> expression MINUS . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 85
    pointervar                     shift and go to state 45

state 67

    (43) expression -> expression TIMES . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . MINUS expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . pointervar
    (48) pointervar -> . TIMES pointervar
    (49) pointervar -> . ADDROF pointervar
    (50) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 46
    TIMES           shift and go to state 25
    ADDROF          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 86
    pointervar                     shift and go to state 45

state 68

    (44) expression -> MINUS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . TIMES expression

    PLUS            reduce using rule 44 (expression -> MINUS expression .)
    MINUS           reduce using rule 44 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 44 (expression -> MINUS expression .)
    TIMES           reduce using rule 44 (expression -> MINUS expression .)
    RPAREN          reduce using rule 44 (expression -> MINUS expression .)
    LESSTHANEQ      reduce using rule 44 (expression -> MINUS expression .)
    GREATERTHANEQ   reduce using rule 44 (expression -> MINUS expression .)
    UNEQUAL         reduce using rule 44 (expression -> MINUS expression .)
    EQUALCHECK      reduce using rule 44 (expression -> MINUS expression .)
    LESSTHAN        reduce using rule 44 (expression -> MINUS expression .)
    GREATERTHAN     reduce using rule 44 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 44 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 67 ]


state 69

    (45) expression -> LPAREN expression . RPAREN
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . TIMES expression

    RPAREN          shift and go to state 87
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 65
    TIMES           shift and go to state 67


state 70

    (20) whileblock -> WHILE LPAREN conditional RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 88


state 71

    (34) dlist1 -> specialvar COMMA dlist1 .

    SEMICOLON       reduce using rule 34 (dlist1 -> specialvar COMMA dlist1 .)


state 72

    (32) dlist1 -> NAME COMMA dlist1 .

    SEMICOLON       reduce using rule 32 (dlist1 -> NAME COMMA dlist1 .)


state 73

    (29) CS -> NOT LPAREN expression . RPAREN
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . TIMES expression

    RPAREN          shift and go to state 89
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 65
    TIMES           shift and go to state 67


state 74

    (23) conditional -> conditional GREATERTHANEQ conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional

    LESSTHANEQ      reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    UNEQUAL         reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    EQUALCHECK      reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    LESSTHAN        reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHAN     reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    RPAREN          reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 61 ]
  ! GREATERTHANEQ   [ shift and go to state 57 ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! EQUALCHECK      [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 58 ]


state 75

    (27) conditional -> conditional GREATERTHAN conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional

    LESSTHANEQ      reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHANEQ   reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    UNEQUAL         reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    EQUALCHECK      reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    LESSTHAN        reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHAN     reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    RPAREN          reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 61 ]
  ! GREATERTHANEQ   [ shift and go to state 57 ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! EQUALCHECK      [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 58 ]


state 76

    (26) conditional -> conditional LESSTHAN conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional

    LESSTHANEQ      reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHANEQ   reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    UNEQUAL         reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    EQUALCHECK      reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    LESSTHAN        reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHAN     reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    RPAREN          reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 61 ]
  ! GREATERTHANEQ   [ shift and go to state 57 ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! EQUALCHECK      [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 58 ]


state 77

    (24) conditional -> conditional UNEQUAL conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional

    UNEQUAL         reduce using rule 24 (conditional -> conditional UNEQUAL conditional .)
    EQUALCHECK      reduce using rule 24 (conditional -> conditional UNEQUAL conditional .)
    RPAREN          reduce using rule 24 (conditional -> conditional UNEQUAL conditional .)
    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 57
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 58

  ! LESSTHANEQ      [ reduce using rule 24 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 24 (conditional -> conditional UNEQUAL conditional .) ]
  ! LESSTHAN        [ reduce using rule 24 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHAN     [ reduce using rule 24 (conditional -> conditional UNEQUAL conditional .) ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! EQUALCHECK      [ shift and go to state 62 ]


state 78

    (22) conditional -> conditional LESSTHANEQ conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional

    LESSTHANEQ      reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    UNEQUAL         reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    EQUALCHECK      reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    LESSTHAN        reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHAN     reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    RPAREN          reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 61 ]
  ! GREATERTHANEQ   [ shift and go to state 57 ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! EQUALCHECK      [ shift and go to state 62 ]
  ! LESSTHAN        [ shift and go to state 59 ]
  ! GREATERTHAN     [ shift and go to state 58 ]


state 79

    (25) conditional -> conditional EQUALCHECK conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional

    UNEQUAL         reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .)
    EQUALCHECK      reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .)
    RPAREN          reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .)
    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 57
    LESSTHAN        shift and go to state 59
    GREATERTHAN     shift and go to state 58

  ! LESSTHANEQ      [ reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .) ]
  ! LESSTHAN        [ reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHAN     [ reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .) ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! EQUALCHECK      [ shift and go to state 62 ]


state 80

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE unmatchedstatement
    (17) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE statement
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE LBRACE fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (37) assignment -> . assignment_base SEMICOLON
    (30) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (38) assignment_base -> . TIMES pointervar EQUALS expression
    (39) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 14
    TYPE            shift and go to state 20
    WHILE           shift and go to state 17
    TIMES           shift and go to state 11
    NAME            shift and go to state 21

    statement                      shift and go to state 15
    assignment                     shift and go to state 16
    fbody                          shift and go to state 90
    unmatchedstatement             shift and go to state 12
    whileblock                     shift and go to state 13
    allstatement                   shift and go to state 9
    assignment_base                shift and go to state 18
    declaration                    shift and go to state 19
    ifblock                        shift and go to state 22

state 81

    (12) unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .

    IF              reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TYPE            reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    WHILE           reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TIMES           reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    NAME            reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    RBRACE          reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)


state 82

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement . ELSE unmatchedstatement
    (16) ifblock -> IF LPAREN conditional RPAREN statement . ELSE statement
    (18) ifblock -> IF LPAREN conditional RPAREN statement . ELSE LBRACE fbody RBRACE
    (6) allstatement -> statement .

    ELSE            shift and go to state 91
    IF              reduce using rule 6 (allstatement -> statement .)
    TYPE            reduce using rule 6 (allstatement -> statement .)
    WHILE           reduce using rule 6 (allstatement -> statement .)
    TIMES           reduce using rule 6 (allstatement -> statement .)
    NAME            reduce using rule 6 (allstatement -> statement .)
    RBRACE          reduce using rule 6 (allstatement -> statement .)


state 83

    (40) expression -> expression PLUS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . TIMES expression

    PLUS            reduce using rule 40 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 40 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression PLUS expression .)
    LESSTHANEQ      reduce using rule 40 (expression -> expression PLUS expression .)
    GREATERTHANEQ   reduce using rule 40 (expression -> expression PLUS expression .)
    UNEQUAL         reduce using rule 40 (expression -> expression PLUS expression .)
    EQUALCHECK      reduce using rule 40 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 40 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 40 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 65
    TIMES           shift and go to state 67

  ! DIVIDE          [ reduce using rule 40 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 66 ]


state 84

    (42) expression -> expression DIVIDE expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . TIMES expression

    PLUS            reduce using rule 42 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 42 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 42 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 42 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 42 (expression -> expression DIVIDE expression .)
    LESSTHANEQ      reduce using rule 42 (expression -> expression DIVIDE expression .)
    GREATERTHANEQ   reduce using rule 42 (expression -> expression DIVIDE expression .)
    UNEQUAL         reduce using rule 42 (expression -> expression DIVIDE expression .)
    EQUALCHECK      reduce using rule 42 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 42 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 42 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 67 ]


state 85

    (41) expression -> expression MINUS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . TIMES expression

    PLUS            reduce using rule 41 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 41 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 41 (expression -> expression MINUS expression .)
    LESSTHANEQ      reduce using rule 41 (expression -> expression MINUS expression .)
    GREATERTHANEQ   reduce using rule 41 (expression -> expression MINUS expression .)
    UNEQUAL         reduce using rule 41 (expression -> expression MINUS expression .)
    EQUALCHECK      reduce using rule 41 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 41 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 41 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 65
    TIMES           shift and go to state 67

  ! DIVIDE          [ reduce using rule 41 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 66 ]


state 86

    (43) expression -> expression TIMES expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . TIMES expression

    PLUS            reduce using rule 43 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 43 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 43 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 43 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 43 (expression -> expression TIMES expression .)
    LESSTHANEQ      reduce using rule 43 (expression -> expression TIMES expression .)
    GREATERTHANEQ   reduce using rule 43 (expression -> expression TIMES expression .)
    UNEQUAL         reduce using rule 43 (expression -> expression TIMES expression .)
    EQUALCHECK      reduce using rule 43 (expression -> expression TIMES expression .)
    LESSTHAN        reduce using rule 43 (expression -> expression TIMES expression .)
    GREATERTHAN     reduce using rule 43 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 67 ]


state 87

    (45) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LESSTHANEQ      reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 45 (expression -> LPAREN expression RPAREN .)


state 88

    (20) whileblock -> WHILE LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (37) assignment -> . assignment_base SEMICOLON
    (30) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (38) assignment_base -> . TIMES pointervar EQUALS expression
    (39) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 14
    TYPE            shift and go to state 20
    WHILE           shift and go to state 17
    TIMES           shift and go to state 11
    NAME            shift and go to state 21

    statement                      shift and go to state 15
    assignment                     shift and go to state 16
    fbody                          shift and go to state 92
    unmatchedstatement             shift and go to state 12
    whileblock                     shift and go to state 13
    allstatement                   shift and go to state 9
    assignment_base                shift and go to state 18
    declaration                    shift and go to state 19
    ifblock                        shift and go to state 22

state 89

    (29) CS -> NOT LPAREN expression RPAREN .

    LESSTHANEQ      reduce using rule 29 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 29 (CS -> NOT LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 29 (CS -> NOT LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 29 (CS -> NOT LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 29 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 29 (CS -> NOT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 29 (CS -> NOT LPAREN expression RPAREN .)


state 90

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE unmatchedstatement
    (17) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE statement
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE LBRACE fbody RBRACE

    RBRACE          shift and go to state 93


state 91

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE . unmatchedstatement
    (16) ifblock -> IF LPAREN conditional RPAREN statement ELSE . statement
    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE . LBRACE fbody RBRACE
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (37) assignment -> . assignment_base SEMICOLON
    (30) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (38) assignment_base -> . TIMES pointervar EQUALS expression
    (39) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 94
    IF              shift and go to state 14
    TYPE            shift and go to state 20
    WHILE           shift and go to state 17
    TIMES           shift and go to state 11
    NAME            shift and go to state 21

    statement                      shift and go to state 96
    assignment                     shift and go to state 16
    unmatchedstatement             shift and go to state 95
    whileblock                     shift and go to state 13
    assignment_base                shift and go to state 18
    declaration                    shift and go to state 19
    ifblock                        shift and go to state 22

state 92

    (20) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 97


state 93

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE unmatchedstatement
    (17) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE statement
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE LBRACE fbody RBRACE

    IF              reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    ELSE            shift and go to state 98


state 94

    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (37) assignment -> . assignment_base SEMICOLON
    (30) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (38) assignment_base -> . TIMES pointervar EQUALS expression
    (39) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 14
    TYPE            shift and go to state 20
    WHILE           shift and go to state 17
    TIMES           shift and go to state 11
    NAME            shift and go to state 21

    statement                      shift and go to state 15
    assignment                     shift and go to state 16
    fbody                          shift and go to state 99
    unmatchedstatement             shift and go to state 12
    whileblock                     shift and go to state 13
    allstatement                   shift and go to state 9
    assignment_base                shift and go to state 18
    declaration                    shift and go to state 19
    ifblock                        shift and go to state 22

state 95

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .

    IF              reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TYPE            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    WHILE           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TIMES           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    NAME            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    RBRACE          reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)


state 96

    (16) ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .

    IF              reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TYPE            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    WHILE           reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TIMES           reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    NAME            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    ELSE            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)


state 97

    (20) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .

    IF              reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    ELSE            reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 98

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . unmatchedstatement
    (17) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . statement
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . LBRACE fbody RBRACE
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (37) assignment -> . assignment_base SEMICOLON
    (30) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (38) assignment_base -> . TIMES pointervar EQUALS expression
    (39) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 100
    IF              shift and go to state 14
    TYPE            shift and go to state 20
    WHILE           shift and go to state 17
    TIMES           shift and go to state 11
    NAME            shift and go to state 21

    statement                      shift and go to state 102
    assignment                     shift and go to state 16
    unmatchedstatement             shift and go to state 101
    whileblock                     shift and go to state 13
    assignment_base                shift and go to state 18
    declaration                    shift and go to state 19
    ifblock                        shift and go to state 22

state 99

    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 103


state 100

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (37) assignment -> . assignment_base SEMICOLON
    (30) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (38) assignment_base -> . TIMES pointervar EQUALS expression
    (39) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 14
    TYPE            shift and go to state 20
    WHILE           shift and go to state 17
    TIMES           shift and go to state 11
    NAME            shift and go to state 21

    statement                      shift and go to state 15
    assignment                     shift and go to state 16
    fbody                          shift and go to state 104
    unmatchedstatement             shift and go to state 12
    whileblock                     shift and go to state 13
    allstatement                   shift and go to state 9
    assignment_base                shift and go to state 18
    declaration                    shift and go to state 19
    ifblock                        shift and go to state 22

state 101

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .

    IF              reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TYPE            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    WHILE           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TIMES           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    NAME            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    RBRACE          reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)


state 102

    (17) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .

    IF              reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TYPE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    WHILE           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TIMES           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    NAME            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    RBRACE          reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    ELSE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)


state 103

    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .

    IF              reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    ELSE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)


state 104

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 105


state 105

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .

    IF              reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    ELSE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)

