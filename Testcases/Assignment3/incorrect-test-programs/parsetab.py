
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFrightNOTrightUMINUSNUMBER TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT \n\tprogram : function \n\t\t\t\t| function program\n\t\n\tfunction : TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE\n\t\n\tfbody : allstatement\n\t\t\t| allstatement fbody\n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : CS\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\t\t\t| TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar\n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'RBRACE':([9,10,12,13,15,16,19,22,23,31,49,81,82,90,92,93,95,96,97,99,101,102,103,104,105,],[-4,24,-7,-10,-6,-8,-9,-11,-5,-37,-30,-12,-6,93,97,-14,-13,-16,-20,103,-15,-17,-18,105,-19,]),'GREATERTHAN':([28,37,39,41,42,45,46,47,48,68,74,75,76,77,78,79,83,84,85,86,87,89,],[-50,-48,-49,58,-28,-47,-46,-21,58,-44,-23,-27,-26,58,-22,58,-40,-42,-41,-43,-45,-29,]),'WHILE':([8,9,12,13,15,16,19,22,31,49,63,80,81,82,88,91,93,94,95,96,97,98,100,101,102,103,105,],[17,17,-7,-10,-6,-8,-9,-11,-37,-30,17,17,-12,-6,17,17,-14,17,-13,-16,-20,17,17,-15,-17,-18,-19,]),'GREATERTHANEQ':([28,37,39,41,42,45,46,47,48,68,74,75,76,77,78,79,83,84,85,86,87,89,],[-50,-48,-49,57,-28,-47,-46,-21,57,-44,-23,-27,-26,57,-22,57,-40,-42,-41,-43,-45,-29,]),'TIMES':([8,9,11,12,13,15,16,19,20,22,25,27,28,29,30,31,33,36,37,38,39,42,43,44,45,46,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,80,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,100,101,102,103,105,],[11,11,25,-7,-10,-6,-8,-9,33,-11,25,25,-50,25,25,-37,33,25,-48,25,-49,67,25,25,-47,-46,-30,33,33,67,67,25,25,25,25,25,25,25,11,25,25,25,25,-44,67,67,11,-12,-6,67,-42,67,-43,-45,11,11,-14,11,-13,-16,-20,11,11,-15,-17,-18,-19,]),'PLUS':([28,37,39,42,45,46,54,55,68,69,73,83,84,85,86,87,],[-50,-48,-49,64,-47,-46,64,64,-44,64,64,-40,-42,-41,-43,-45,]),'UNEQUAL':([28,37,39,41,42,45,46,47,48,68,74,75,76,77,78,79,83,84,85,86,87,89,],[-50,-48,-49,60,-28,-47,-46,-21,60,-44,-23,-27,-26,-24,-22,-25,-40,-42,-41,-43,-45,-29,]),'IF':([8,9,12,13,15,16,19,22,31,49,63,80,81,82,88,91,93,94,95,96,97,98,100,101,102,103,105,],[14,14,-7,-10,-6,-8,-9,-11,-37,-30,14,14,-12,-6,14,14,-14,14,-13,-16,-20,14,14,-15,-17,-18,-19,]),'LESSTHANEQ':([28,37,39,41,42,45,46,47,48,68,74,75,76,77,78,79,83,84,85,86,87,89,],[-50,-48,-49,61,-28,-47,-46,-21,61,-44,-23,-27,-26,61,-22,61,-40,-42,-41,-43,-45,-29,]),'RPAREN':([6,28,37,39,41,42,45,46,47,48,68,69,73,74,75,76,77,78,79,83,84,85,86,87,89,],[7,-50,-48,-49,63,-28,-47,-46,-21,70,-44,87,89,-23,-27,-26,-24,-22,-25,-40,-42,-41,-43,-45,-29,]),'NOT':([29,30,57,58,59,60,61,62,],[40,40,40,40,40,40,40,40,]),'ELSE':([13,16,19,22,31,49,82,93,96,97,102,103,105,],[-10,-8,-9,-11,-37,-30,91,98,-16,-20,-17,-18,-19,]),'$end':([2,3,5,24,],[-1,0,-2,-3,]),'DIVIDE':([28,37,39,42,45,46,54,55,68,69,73,83,84,85,86,87,],[-50,-48,-49,65,-47,-46,65,65,-44,65,65,65,-42,65,-43,-45,]),'LESSTHAN':([28,37,39,41,42,45,46,47,48,68,74,75,76,77,78,79,83,84,85,86,87,89,],[-50,-48,-49,59,-28,-47,-46,-21,59,-44,-23,-27,-26,59,-22,59,-40,-42,-41,-43,-45,-29,]),'LPAREN':([4,14,17,29,30,36,38,40,43,44,56,57,58,59,60,61,62,64,65,66,67,],[6,29,30,44,44,44,44,56,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'LBRACE':([7,63,70,91,98,],[8,80,88,94,100,]),'ADDROF':([11,25,27,29,30,36,38,43,44,56,57,58,59,60,61,62,64,65,66,67,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'EQUALS':([21,26,28,37,39,],[36,38,-50,-48,-49,]),'EQUALCHECK':([28,37,39,41,42,45,46,47,48,68,74,75,76,77,78,79,83,84,85,86,87,89,],[-50,-48,-49,62,-28,-47,-46,-21,62,-44,-23,-27,-26,-24,-22,-25,-40,-42,-41,-43,-45,-29,]),'MINUS':([28,29,30,36,37,38,39,42,43,44,45,46,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,73,83,84,85,86,87,],[-50,43,43,43,-48,43,-49,66,43,43,-47,-46,66,66,43,43,43,43,43,43,43,43,43,43,43,-44,66,66,-40,-42,-41,-43,-45,]),'SEMICOLON':([18,28,32,34,35,37,39,45,46,50,51,54,55,68,71,72,83,84,85,86,87,],[31,-50,49,-33,-31,-48,-49,-47,-46,-36,-35,-39,-38,-44,-34,-32,-40,-42,-41,-43,-45,]),'TYPE':([0,2,8,9,12,13,15,16,19,22,24,31,49,63,80,81,82,88,91,93,94,95,96,97,98,100,101,102,103,105,],[1,1,20,20,-7,-10,-6,-8,-9,-11,-3,-37,-30,20,20,-12,-6,20,20,-14,20,-13,-16,-20,20,20,-15,-17,-18,-19,]),'COMMA':([34,35,50,51,],[52,53,-36,-35,]),'NUMBER':([29,30,36,38,43,44,56,57,58,59,60,61,62,64,65,66,67,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'NAME':([1,8,9,11,12,13,15,16,19,20,22,25,27,29,30,31,33,36,38,43,44,49,52,53,56,57,58,59,60,61,62,63,64,65,66,67,80,81,82,88,91,93,94,95,96,97,98,100,101,102,103,105,],[4,21,21,28,-7,-10,-6,-8,-9,35,-11,28,28,28,28,-37,50,28,28,28,28,-30,35,35,28,28,28,28,28,28,28,21,28,28,28,28,21,-12,-6,21,21,-14,21,-13,-16,-20,21,21,-15,-17,-18,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([8,9,63,80,88,91,94,98,100,],[15,15,82,15,15,96,15,102,15,]),'assignment':([8,9,63,80,88,91,94,98,100,],[16,16,16,16,16,16,16,16,16,]),'expression':([29,30,36,38,43,44,56,57,58,59,60,61,62,64,65,66,67,],[42,42,54,55,68,69,73,42,42,42,42,42,42,83,84,85,86,]),'function':([0,2,],[2,2,]),'dlist1':([20,52,53,],[32,71,72,]),'unmatchedstatement':([8,9,63,80,88,91,94,98,100,],[12,12,12,12,12,95,12,101,12,]),'whileblock':([8,9,63,80,88,91,94,98,100,],[13,13,13,13,13,13,13,13,13,]),'allstatement':([8,9,63,80,88,94,100,],[9,9,81,9,9,9,9,]),'assignment_base':([8,9,63,80,88,91,94,98,100,],[18,18,18,18,18,18,18,18,18,]),'declaration':([8,9,63,80,88,91,94,98,100,],[19,19,19,19,19,19,19,19,19,]),'CS':([29,30,57,58,59,60,61,62,],[47,47,47,47,47,47,47,47,]),'conditional':([29,30,57,58,59,60,61,62,],[41,48,74,75,76,77,78,79,]),'pointervar':([11,25,27,29,30,36,38,43,44,56,57,58,59,60,61,62,64,65,66,67,],[26,37,39,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'program':([0,2,],[3,5,]),'specialvar':([20,33,52,53,],[34,51,34,34,]),'fbody':([8,9,80,88,94,100,],[10,23,90,92,99,104,]),'ifblock':([8,9,63,80,88,91,94,98,100,],[22,22,22,22,22,22,22,22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','150070001-150070018.py',152),
  ('program -> function program','program',2,'p_program','150070001-150070018.py',153),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','150070001-150070018.py',177),
  ('fbody -> allstatement','fbody',1,'p_fbody','150070001-150070018.py',211),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','150070001-150070018.py',212),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','150070001-150070018.py',229),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','150070001-150070018.py',230),
  ('statement -> assignment','statement',1,'p_statement_expr','150070001-150070018.py',236),
  ('statement -> declaration','statement',1,'p_statement_expr','150070001-150070018.py',237),
  ('statement -> whileblock','statement',1,'p_statement_expr','150070001-150070018.py',238),
  ('statement -> ifblock','statement',1,'p_statement_expr','150070001-150070018.py',239),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr','150070001-150070018.py',245),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr','150070001-150070018.py',246),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr','150070001-150070018.py',247),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr','150070001-150070018.py',248),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock','150070001-150070018.py',258),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock','150070001-150070018.py',259),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock','150070001-150070018.py',260),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock','150070001-150070018.py',261),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','150070001-150070018.py',271),
  ('conditional -> CS','conditional',1,'p_conditional','150070001-150070018.py',276),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','150070001-150070018.py',277),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','150070001-150070018.py',278),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','150070001-150070018.py',279),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','150070001-150070018.py',280),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','150070001-150070018.py',281),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','150070001-150070018.py',282),
  ('CS -> expression','CS',1,'p_cs','150070001-150070018.py',301),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','150070001-150070018.py',302),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','150070001-150070018.py',310),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','150070001-150070018.py',316),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','150070001-150070018.py',317),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','150070001-150070018.py',324),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','150070001-150070018.py',325),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar','150070001-150070018.py',332),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar','150070001-150070018.py',333),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','150070001-150070018.py',338),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','150070001-150070018.py',347),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','150070001-150070018.py',348),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','150070001-150070018.py',368),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','150070001-150070018.py',369),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','150070001-150070018.py',370),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','150070001-150070018.py',387),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','150070001-150070018.py',395),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','150070001-150070018.py',402),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','150070001-150070018.py',408),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','150070001-150070018.py',414),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','150070001-150070018.py',421),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','150070001-150070018.py',427),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','150070001-150070018.py',434),
]
