
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFrightNOTrightUMINUSNUMBER TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT \n\tprogram : function \n\t\t\t\t| function program\n\t\n\tfunction : TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE\n\t\n\tfbody : allstatement\n\t\t\t| allstatement fbody\n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : CS\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\t\t\t| TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar\n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'TIMES':([8,9,11,12,15,16,18,19,20,22,23,26,28,29,31,32,33,35,37,39,40,43,44,45,46,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,67,68,71,72,73,74,75,76,77,78,84,86,87,88,92,93,94,95,96,97,98,100,101,102,103,105,],[16,-11,-10,26,-7,33,-8,-9,-6,16,33,26,-37,33,-50,33,33,33,-47,33,57,33,-46,-30,26,26,57,33,-49,-48,33,57,33,33,33,33,33,33,33,33,33,33,-44,57,16,57,-45,-43,57,-42,57,16,16,-12,-6,16,-20,-14,-13,16,-16,16,-15,16,-17,-18,-19,]),'SEMICOLON':([13,24,25,27,31,37,44,47,48,50,52,53,68,69,70,71,74,75,76,77,78,],[28,45,-31,-33,-50,-47,-46,-36,-35,-39,-49,-48,-44,-32,-34,-38,-45,-43,-41,-42,-40,]),'EQUALCHECK':([31,37,40,41,42,44,52,53,54,68,74,75,76,77,78,79,80,81,82,83,85,89,],[-50,-47,-28,-21,62,-46,-49,-48,62,-44,-45,-43,-41,-42,-40,-22,-25,-24,-27,-26,-23,-29,]),'COMMA':([25,27,47,48,],[46,49,-36,-35,]),'WHILE':([8,9,11,15,18,19,20,22,28,45,72,84,86,87,88,92,93,94,95,96,97,98,100,101,102,103,105,],[10,-11,-10,-7,-8,-9,-6,10,-37,-30,10,10,10,-12,-6,10,-20,-14,-13,10,-16,10,-15,10,-17,-18,-19,]),'NOT':([23,35,61,62,63,64,65,67,],[38,38,38,38,38,38,38,38,]),'ADDROF':([16,23,29,32,33,35,39,43,51,55,57,58,59,60,61,62,63,64,65,67,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'LPAREN':([5,10,21,23,29,35,38,39,43,51,55,57,58,59,60,61,62,63,64,65,67,],[6,23,35,39,39,39,55,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'DIVIDE':([31,37,40,44,50,52,53,56,68,71,73,74,75,76,77,78,],[-50,-47,59,-46,59,-49,-48,59,-44,59,59,-45,-43,59,-42,59,]),'TYPE':([0,1,8,9,11,15,18,19,20,22,28,34,45,72,84,86,87,88,92,93,94,95,96,97,98,100,101,102,103,105,],[2,2,12,-11,-10,-7,-8,-9,-6,12,-37,-3,-30,12,12,12,-12,-6,12,-20,-14,-13,12,-16,12,-15,12,-17,-18,-19,]),'GREATERTHAN':([31,37,40,41,42,44,52,53,54,68,74,75,76,77,78,79,80,81,82,83,85,89,],[-50,-47,-28,-21,64,-46,-49,-48,64,-44,-45,-43,-41,-42,-40,-22,64,64,-27,-26,-23,-29,]),'ELSE':([9,11,18,19,28,45,88,93,94,97,102,103,105,],[-11,-10,-8,-9,-37,-30,92,-20,98,-16,-17,-18,-19,]),'EQUALS':([14,30,31,52,53,],[29,51,-50,-49,-48,]),'NAME':([2,8,9,11,12,15,16,18,19,20,22,23,26,28,29,32,33,35,39,43,45,46,49,51,55,57,58,59,60,61,62,63,64,65,67,72,84,86,87,88,92,93,94,95,96,97,98,100,101,102,103,105,],[5,14,-11,-10,25,-7,31,-8,-9,-6,14,31,47,-37,31,31,31,31,31,31,-30,25,25,31,31,31,31,31,31,31,31,31,31,31,31,14,14,14,-12,-6,14,-20,-14,-13,14,-16,14,-15,14,-17,-18,-19,]),'PLUS':([31,37,40,44,50,52,53,56,68,71,73,74,75,76,77,78,],[-50,-47,60,-46,60,-49,-48,60,-44,60,60,-45,-43,-41,-42,-40,]),'$end':([1,3,4,34,],[-1,0,-2,-3,]),'RBRACE':([9,11,15,17,18,19,20,22,28,36,45,87,88,90,91,93,94,95,97,99,100,102,103,104,105,],[-11,-10,-7,34,-8,-9,-6,-4,-37,-5,-30,-12,-6,93,94,-20,-14,-13,-16,103,-15,-17,-18,105,-19,]),'LESSTHANEQ':([31,37,40,41,42,44,52,53,54,68,74,75,76,77,78,79,80,81,82,83,85,89,],[-50,-47,-28,-21,61,-46,-49,-48,61,-44,-45,-43,-41,-42,-40,-22,61,61,-27,-26,-23,-29,]),'UNEQUAL':([31,37,40,41,42,44,52,53,54,68,74,75,76,77,78,79,80,81,82,83,85,89,],[-50,-47,-28,-21,63,-46,-49,-48,63,-44,-45,-43,-41,-42,-40,-22,-25,-24,-27,-26,-23,-29,]),'LESSTHAN':([31,37,40,41,42,44,52,53,54,68,74,75,76,77,78,79,80,81,82,83,85,89,],[-50,-47,-28,-21,65,-46,-49,-48,65,-44,-45,-43,-41,-42,-40,-22,65,65,-27,-26,-23,-29,]),'LBRACE':([7,66,72,92,98,],[8,84,86,96,101,]),'RPAREN':([6,31,37,40,41,42,44,52,53,54,56,68,73,74,75,76,77,78,79,80,81,82,83,85,89,],[7,-50,-47,-28,-21,66,-46,-49,-48,72,74,-44,89,-45,-43,-41,-42,-40,-22,-25,-24,-27,-26,-23,-29,]),'IF':([8,9,11,15,18,19,20,22,28,45,72,84,86,87,88,92,93,94,95,96,97,98,100,101,102,103,105,],[21,-11,-10,-7,-8,-9,-6,21,-37,-30,21,21,21,-12,-6,21,-20,-14,-13,21,-16,21,-15,21,-17,-18,-19,]),'MINUS':([23,29,31,35,37,39,40,43,44,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,67,68,71,73,74,75,76,77,78,],[43,43,-50,43,-47,43,58,43,-46,58,43,-49,-48,43,58,43,43,43,43,43,43,43,43,43,43,-44,58,58,-45,-43,-41,-42,-40,]),'NUMBER':([23,29,35,39,43,51,55,57,58,59,60,61,62,63,64,65,67,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'GREATERTHANEQ':([31,37,40,41,42,44,52,53,54,68,74,75,76,77,78,79,80,81,82,83,85,89,],[-50,-47,-28,-21,67,-46,-49,-48,67,-44,-45,-43,-41,-42,-40,-22,67,67,-27,-26,-23,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'dlist1':([12,46,49,],[24,69,70,]),'pointervar':([16,23,29,32,33,35,39,43,51,55,57,58,59,60,61,62,63,64,65,67,],[30,37,37,52,53,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'CS':([23,35,61,62,63,64,65,67,],[41,41,41,41,41,41,41,41,]),'ifblock':([8,22,72,84,86,92,96,98,101,],[9,9,9,9,9,9,9,9,9,]),'unmatchedstatement':([8,22,72,84,86,92,96,98,101,],[15,15,15,15,15,95,15,100,15,]),'whileblock':([8,22,72,84,86,92,96,98,101,],[11,11,11,11,11,11,11,11,11,]),'fbody':([8,22,84,86,96,101,],[17,36,90,91,99,104,]),'assignment':([8,22,72,84,86,92,96,98,101,],[18,18,18,18,18,18,18,18,18,]),'specialvar':([12,26,46,49,],[27,48,27,27,]),'function':([0,1,],[1,1,]),'declaration':([8,22,72,84,86,92,96,98,101,],[19,19,19,19,19,19,19,19,19,]),'statement':([8,22,72,84,86,92,96,98,101,],[20,20,88,20,20,97,20,102,20,]),'assignment_base':([8,22,72,84,86,92,96,98,101,],[13,13,13,13,13,13,13,13,13,]),'expression':([23,29,35,39,43,51,55,57,58,59,60,61,62,63,64,65,67,],[40,50,40,56,68,71,73,75,76,77,78,40,40,40,40,40,40,]),'allstatement':([8,22,72,84,86,96,101,],[22,22,87,22,22,22,22,]),'program':([0,1,],[3,4,]),'conditional':([23,35,61,62,63,64,65,67,],[42,54,79,80,81,82,83,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','150070001-150070018.py',152),
  ('program -> function program','program',2,'p_program','150070001-150070018.py',153),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','150070001-150070018.py',177),
  ('fbody -> allstatement','fbody',1,'p_fbody','150070001-150070018.py',211),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','150070001-150070018.py',212),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','150070001-150070018.py',229),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','150070001-150070018.py',230),
  ('statement -> assignment','statement',1,'p_statement_expr','150070001-150070018.py',236),
  ('statement -> declaration','statement',1,'p_statement_expr','150070001-150070018.py',237),
  ('statement -> whileblock','statement',1,'p_statement_expr','150070001-150070018.py',238),
  ('statement -> ifblock','statement',1,'p_statement_expr','150070001-150070018.py',239),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr','150070001-150070018.py',245),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr','150070001-150070018.py',246),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr','150070001-150070018.py',247),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr','150070001-150070018.py',248),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock','150070001-150070018.py',258),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock','150070001-150070018.py',259),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock','150070001-150070018.py',260),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock','150070001-150070018.py',261),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','150070001-150070018.py',271),
  ('conditional -> CS','conditional',1,'p_conditional','150070001-150070018.py',276),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','150070001-150070018.py',277),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','150070001-150070018.py',278),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','150070001-150070018.py',279),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','150070001-150070018.py',280),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','150070001-150070018.py',281),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','150070001-150070018.py',282),
  ('CS -> expression','CS',1,'p_cs','150070001-150070018.py',301),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','150070001-150070018.py',302),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','150070001-150070018.py',310),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','150070001-150070018.py',316),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','150070001-150070018.py',317),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','150070001-150070018.py',324),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','150070001-150070018.py',325),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar','150070001-150070018.py',332),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar','150070001-150070018.py',333),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','150070001-150070018.py',338),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','150070001-150070018.py',347),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','150070001-150070018.py',348),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','150070001-150070018.py',368),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','150070001-150070018.py',369),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','150070001-150070018.py',370),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','150070001-150070018.py',387),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','150070001-150070018.py',395),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','150070001-150070018.py',402),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','150070001-150070018.py',408),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','150070001-150070018.py',414),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','150070001-150070018.py',421),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','150070001-150070018.py',427),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','150070001-150070018.py',434),
]
