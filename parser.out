Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     program -> function program
Rule 3     function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE
Rule 4     fbody -> allstatement
Rule 5     fbody -> allstatement fbody
Rule 6     allstatement -> statement
Rule 7     allstatement -> unmatchedstatement
Rule 8     statement -> assignment
Rule 9     statement -> declaration
Rule 10    statement -> whileblock
Rule 11    statement -> ifblock
Rule 12    unmatchedstatement -> IF LPAREN conditional RPAREN allstatement
Rule 13    unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
Rule 14    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
Rule 15    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 16    ifblock -> IF LPAREN conditional RPAREN statement ELSE statement
Rule 17    ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
Rule 18    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
Rule 19    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
Rule 20    ifblock -> IF LPAREN conditional RPAREN SEMICOLON
Rule 21    ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE
Rule 22    whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 23    whileblock -> WHILE LPAREN conditional RPAREN statement
Rule 24    conditional -> CS
Rule 25    conditional -> conditional LESSTHANEQ conditional
Rule 26    conditional -> conditional GREATERTHANEQ conditional
Rule 27    conditional -> conditional UNEQUAL conditional
Rule 28    conditional -> conditional EQUALCHECK conditional
Rule 29    conditional -> conditional LESSTHAN conditional
Rule 30    conditional -> conditional GREATERTHAN conditional
Rule 31    CS -> expression
Rule 32    CS -> NOT LPAREN expression RPAREN
Rule 33    declaration -> TYPE dlist1 SEMICOLON
Rule 34    dlist1 -> NAME
Rule 35    dlist1 -> NAME COMMA dlist1
Rule 36    dlist1 -> specialvar
Rule 37    dlist1 -> specialvar COMMA dlist1
Rule 38    specialvar -> TIMES specialvar
Rule 39    specialvar -> TIMES NAME
Rule 40    assignment -> assignment_base SEMICOLON
Rule 41    assignment_base -> TIMES pointervar EQUALS expression
Rule 42    assignment_base -> NAME EQUALS expression
Rule 43    expression -> expression PLUS expression
Rule 44    expression -> expression MINUS expression
Rule 45    expression -> expression DIVIDE expression
Rule 46    expression -> expression TIMES expression
Rule 47    expression -> MINUS expression
Rule 48    expression -> LPAREN expression RPAREN
Rule 49    expression -> NUMBER
Rule 50    expression -> pointervar
Rule 51    pointervar -> TIMES pointervar
Rule 52    pointervar -> ADDROF pointervar
Rule 53    pointervar -> NAME

Terminals, with rules where they appear

ADDROF               : 52
COMMA                : 35 37
DIVIDE               : 45
ELSE                 : 13 14 16 17 18 19
EQUALCHECK           : 28
EQUALS               : 41 42
GREATERTHAN          : 30
GREATERTHANEQ        : 26
IF                   : 12 13 14 15 16 17 18 19 20 21
LBRACE               : 3 14 15 17 18 18 19 21 22
LESSTHAN             : 29
LESSTHANEQ           : 25
LPAREN               : 3 12 13 14 15 16 17 18 19 20 21 22 23 32 48
MINUS                : 44 47
NAME                 : 3 34 35 39 42 53
NOT                  : 32
NUMBER               : 49
PLUS                 : 43
RBRACE               : 3 14 15 17 18 18 19 21 22
RPAREN               : 3 12 13 14 15 16 17 18 19 20 21 22 23 32 48
SEMICOLON            : 20 33 40
TIMES                : 38 39 41 46 51
TYPE                 : 3 33
UNEQUAL              : 27
WHILE                : 22 23
error                : 

Nonterminals, with rules where they appear

CS                   : 24
allstatement         : 4 5 12
assignment           : 8
assignment_base      : 40
conditional          : 12 13 14 15 16 17 18 19 20 21 22 23 25 25 26 26 27 27 28 28 29 29 30 30
declaration          : 9
dlist1               : 33 35 37
expression           : 31 32 41 42 43 43 44 44 45 45 46 46 47 48
fbody                : 3 5 14 15 17 18 18 19 22
function             : 1 2
ifblock              : 11
pointervar           : 41 50 51 52
program              : 2 0
specialvar           : 36 37 38
statement            : 6 13 16 16 17 19 23
unmatchedstatement   : 7 13 14
whileblock           : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    TYPE            shift and go to state 3

    program                        shift and go to state 1
    function                       shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> function .
    (2) program -> function . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    $end            reduce using rule 1 (program -> function .)
    TYPE            shift and go to state 3

    function                       shift and go to state 2
    program                        shift and go to state 4

state 3

    (3) function -> TYPE . NAME LPAREN RPAREN LBRACE fbody RBRACE

    NAME            shift and go to state 5


state 4

    (2) program -> function program .

    $end            reduce using rule 2 (program -> function program .)


state 5

    (3) function -> TYPE NAME . LPAREN RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 6


state 6

    (3) function -> TYPE NAME LPAREN . RPAREN LBRACE fbody RBRACE

    RPAREN          shift and go to state 7


state 7

    (3) function -> TYPE NAME LPAREN RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 8


state 8

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 19
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    fbody                          shift and go to state 11
    allstatement                   shift and go to state 12
    statement                      shift and go to state 13
    unmatchedstatement             shift and go to state 14
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 9

    (33) declaration -> TYPE . dlist1 SEMICOLON
    (34) dlist1 -> . NAME
    (35) dlist1 -> . NAME COMMA dlist1
    (36) dlist1 -> . specialvar
    (37) dlist1 -> . specialvar COMMA dlist1
    (38) specialvar -> . TIMES specialvar
    (39) specialvar -> . TIMES NAME

    NAME            shift and go to state 24
    TIMES           shift and go to state 26

    dlist1                         shift and go to state 23
    specialvar                     shift and go to state 25

state 10

    (42) assignment_base -> NAME . EQUALS expression

    EQUALS          shift and go to state 27


state 11

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 28


state 12

    (4) fbody -> allstatement .
    (5) fbody -> allstatement . fbody
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 4 (fbody -> allstatement .)
    IF              shift and go to state 19
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    allstatement                   shift and go to state 12
    fbody                          shift and go to state 29
    statement                      shift and go to state 13
    unmatchedstatement             shift and go to state 14
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 13

    (6) allstatement -> statement .

    IF              reduce using rule 6 (allstatement -> statement .)
    TYPE            reduce using rule 6 (allstatement -> statement .)
    WHILE           reduce using rule 6 (allstatement -> statement .)
    TIMES           reduce using rule 6 (allstatement -> statement .)
    NAME            reduce using rule 6 (allstatement -> statement .)
    RBRACE          reduce using rule 6 (allstatement -> statement .)


state 14

    (7) allstatement -> unmatchedstatement .

    IF              reduce using rule 7 (allstatement -> unmatchedstatement .)
    TYPE            reduce using rule 7 (allstatement -> unmatchedstatement .)
    WHILE           reduce using rule 7 (allstatement -> unmatchedstatement .)
    TIMES           reduce using rule 7 (allstatement -> unmatchedstatement .)
    NAME            reduce using rule 7 (allstatement -> unmatchedstatement .)
    RBRACE          reduce using rule 7 (allstatement -> unmatchedstatement .)


state 15

    (8) statement -> assignment .

    IF              reduce using rule 8 (statement -> assignment .)
    TYPE            reduce using rule 8 (statement -> assignment .)
    WHILE           reduce using rule 8 (statement -> assignment .)
    TIMES           reduce using rule 8 (statement -> assignment .)
    NAME            reduce using rule 8 (statement -> assignment .)
    RBRACE          reduce using rule 8 (statement -> assignment .)
    ELSE            reduce using rule 8 (statement -> assignment .)


state 16

    (9) statement -> declaration .

    IF              reduce using rule 9 (statement -> declaration .)
    TYPE            reduce using rule 9 (statement -> declaration .)
    WHILE           reduce using rule 9 (statement -> declaration .)
    TIMES           reduce using rule 9 (statement -> declaration .)
    NAME            reduce using rule 9 (statement -> declaration .)
    RBRACE          reduce using rule 9 (statement -> declaration .)
    ELSE            reduce using rule 9 (statement -> declaration .)


state 17

    (10) statement -> whileblock .

    IF              reduce using rule 10 (statement -> whileblock .)
    TYPE            reduce using rule 10 (statement -> whileblock .)
    WHILE           reduce using rule 10 (statement -> whileblock .)
    TIMES           reduce using rule 10 (statement -> whileblock .)
    NAME            reduce using rule 10 (statement -> whileblock .)
    RBRACE          reduce using rule 10 (statement -> whileblock .)
    ELSE            reduce using rule 10 (statement -> whileblock .)


state 18

    (11) statement -> ifblock .

    IF              reduce using rule 11 (statement -> ifblock .)
    TYPE            reduce using rule 11 (statement -> ifblock .)
    WHILE           reduce using rule 11 (statement -> ifblock .)
    TIMES           reduce using rule 11 (statement -> ifblock .)
    NAME            reduce using rule 11 (statement -> ifblock .)
    RBRACE          reduce using rule 11 (statement -> ifblock .)
    ELSE            reduce using rule 11 (statement -> ifblock .)


state 19

    (12) unmatchedstatement -> IF . LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> IF . LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> IF . LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> IF . LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF . LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> IF . LPAREN conditional RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 30


state 20

    (40) assignment -> assignment_base . SEMICOLON

    SEMICOLON       shift and go to state 31


state 21

    (22) whileblock -> WHILE . LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> WHILE . LPAREN conditional RPAREN statement

    LPAREN          shift and go to state 32


state 22

    (41) assignment_base -> TIMES . pointervar EQUALS expression
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    pointervar                     shift and go to state 34

state 23

    (33) declaration -> TYPE dlist1 . SEMICOLON

    SEMICOLON       shift and go to state 37


state 24

    (34) dlist1 -> NAME .
    (35) dlist1 -> NAME . COMMA dlist1

    SEMICOLON       reduce using rule 34 (dlist1 -> NAME .)
    COMMA           shift and go to state 38


state 25

    (36) dlist1 -> specialvar .
    (37) dlist1 -> specialvar . COMMA dlist1

    SEMICOLON       reduce using rule 36 (dlist1 -> specialvar .)
    COMMA           shift and go to state 39


state 26

    (38) specialvar -> TIMES . specialvar
    (39) specialvar -> TIMES . NAME
    (38) specialvar -> . TIMES specialvar
    (39) specialvar -> . TIMES NAME

    NAME            shift and go to state 41
    TIMES           shift and go to state 26

    specialvar                     shift and go to state 40

state 27

    (42) assignment_base -> NAME EQUALS . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    expression                     shift and go to state 42
    pointervar                     shift and go to state 46

state 28

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .

    TYPE            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)
    $end            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)


state 29

    (5) fbody -> allstatement fbody .

    RBRACE          reduce using rule 5 (fbody -> allstatement fbody .)


state 30

    (12) unmatchedstatement -> IF LPAREN . conditional RPAREN allstatement
    (13) unmatchedstatement -> IF LPAREN . conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> IF LPAREN . conditional RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN . conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN . conditional RPAREN SEMICOLON
    (21) ifblock -> IF LPAREN . conditional RPAREN LBRACE RBRACE
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) CS -> . expression
    (32) CS -> . NOT LPAREN expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    NOT             shift and go to state 50
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    conditional                    shift and go to state 47
    CS                             shift and go to state 48
    expression                     shift and go to state 49
    pointervar                     shift and go to state 46

state 31

    (40) assignment -> assignment_base SEMICOLON .

    IF              reduce using rule 40 (assignment -> assignment_base SEMICOLON .)
    TYPE            reduce using rule 40 (assignment -> assignment_base SEMICOLON .)
    WHILE           reduce using rule 40 (assignment -> assignment_base SEMICOLON .)
    TIMES           reduce using rule 40 (assignment -> assignment_base SEMICOLON .)
    NAME            reduce using rule 40 (assignment -> assignment_base SEMICOLON .)
    RBRACE          reduce using rule 40 (assignment -> assignment_base SEMICOLON .)
    ELSE            reduce using rule 40 (assignment -> assignment_base SEMICOLON .)


state 32

    (22) whileblock -> WHILE LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> WHILE LPAREN . conditional RPAREN statement
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) CS -> . expression
    (32) CS -> . NOT LPAREN expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    NOT             shift and go to state 50
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    conditional                    shift and go to state 51
    CS                             shift and go to state 48
    expression                     shift and go to state 49
    pointervar                     shift and go to state 46

state 33

    (51) pointervar -> TIMES . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    pointervar                     shift and go to state 52

state 34

    (41) assignment_base -> TIMES pointervar . EQUALS expression

    EQUALS          shift and go to state 53


state 35

    (52) pointervar -> ADDROF . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    pointervar                     shift and go to state 54

state 36

    (53) pointervar -> NAME .

    EQUALS          reduce using rule 53 (pointervar -> NAME .)
    PLUS            reduce using rule 53 (pointervar -> NAME .)
    MINUS           reduce using rule 53 (pointervar -> NAME .)
    DIVIDE          reduce using rule 53 (pointervar -> NAME .)
    TIMES           reduce using rule 53 (pointervar -> NAME .)
    SEMICOLON       reduce using rule 53 (pointervar -> NAME .)
    RPAREN          reduce using rule 53 (pointervar -> NAME .)
    LESSTHANEQ      reduce using rule 53 (pointervar -> NAME .)
    GREATERTHANEQ   reduce using rule 53 (pointervar -> NAME .)
    UNEQUAL         reduce using rule 53 (pointervar -> NAME .)
    EQUALCHECK      reduce using rule 53 (pointervar -> NAME .)
    LESSTHAN        reduce using rule 53 (pointervar -> NAME .)
    GREATERTHAN     reduce using rule 53 (pointervar -> NAME .)


state 37

    (33) declaration -> TYPE dlist1 SEMICOLON .

    IF              reduce using rule 33 (declaration -> TYPE dlist1 SEMICOLON .)
    TYPE            reduce using rule 33 (declaration -> TYPE dlist1 SEMICOLON .)
    WHILE           reduce using rule 33 (declaration -> TYPE dlist1 SEMICOLON .)
    TIMES           reduce using rule 33 (declaration -> TYPE dlist1 SEMICOLON .)
    NAME            reduce using rule 33 (declaration -> TYPE dlist1 SEMICOLON .)
    RBRACE          reduce using rule 33 (declaration -> TYPE dlist1 SEMICOLON .)
    ELSE            reduce using rule 33 (declaration -> TYPE dlist1 SEMICOLON .)


state 38

    (35) dlist1 -> NAME COMMA . dlist1
    (34) dlist1 -> . NAME
    (35) dlist1 -> . NAME COMMA dlist1
    (36) dlist1 -> . specialvar
    (37) dlist1 -> . specialvar COMMA dlist1
    (38) specialvar -> . TIMES specialvar
    (39) specialvar -> . TIMES NAME

    NAME            shift and go to state 24
    TIMES           shift and go to state 26

    dlist1                         shift and go to state 55
    specialvar                     shift and go to state 25

state 39

    (37) dlist1 -> specialvar COMMA . dlist1
    (34) dlist1 -> . NAME
    (35) dlist1 -> . NAME COMMA dlist1
    (36) dlist1 -> . specialvar
    (37) dlist1 -> . specialvar COMMA dlist1
    (38) specialvar -> . TIMES specialvar
    (39) specialvar -> . TIMES NAME

    NAME            shift and go to state 24
    TIMES           shift and go to state 26

    specialvar                     shift and go to state 25
    dlist1                         shift and go to state 56

state 40

    (38) specialvar -> TIMES specialvar .

    COMMA           reduce using rule 38 (specialvar -> TIMES specialvar .)
    SEMICOLON       reduce using rule 38 (specialvar -> TIMES specialvar .)


state 41

    (39) specialvar -> TIMES NAME .

    COMMA           reduce using rule 39 (specialvar -> TIMES NAME .)
    SEMICOLON       reduce using rule 39 (specialvar -> TIMES NAME .)


state 42

    (42) assignment_base -> NAME EQUALS expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 42 (assignment_base -> NAME EQUALS expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60


state 43

    (47) expression -> MINUS . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    expression                     shift and go to state 61
    pointervar                     shift and go to state 46

state 44

    (48) expression -> LPAREN . expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    expression                     shift and go to state 62
    pointervar                     shift and go to state 46

state 45

    (49) expression -> NUMBER .

    PLUS            reduce using rule 49 (expression -> NUMBER .)
    MINUS           reduce using rule 49 (expression -> NUMBER .)
    DIVIDE          reduce using rule 49 (expression -> NUMBER .)
    TIMES           reduce using rule 49 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 49 (expression -> NUMBER .)
    RPAREN          reduce using rule 49 (expression -> NUMBER .)
    LESSTHANEQ      reduce using rule 49 (expression -> NUMBER .)
    GREATERTHANEQ   reduce using rule 49 (expression -> NUMBER .)
    UNEQUAL         reduce using rule 49 (expression -> NUMBER .)
    EQUALCHECK      reduce using rule 49 (expression -> NUMBER .)
    LESSTHAN        reduce using rule 49 (expression -> NUMBER .)
    GREATERTHAN     reduce using rule 49 (expression -> NUMBER .)


state 46

    (50) expression -> pointervar .

    PLUS            reduce using rule 50 (expression -> pointervar .)
    MINUS           reduce using rule 50 (expression -> pointervar .)
    DIVIDE          reduce using rule 50 (expression -> pointervar .)
    TIMES           reduce using rule 50 (expression -> pointervar .)
    SEMICOLON       reduce using rule 50 (expression -> pointervar .)
    RPAREN          reduce using rule 50 (expression -> pointervar .)
    LESSTHANEQ      reduce using rule 50 (expression -> pointervar .)
    GREATERTHANEQ   reduce using rule 50 (expression -> pointervar .)
    UNEQUAL         reduce using rule 50 (expression -> pointervar .)
    EQUALCHECK      reduce using rule 50 (expression -> pointervar .)
    LESSTHAN        reduce using rule 50 (expression -> pointervar .)
    GREATERTHAN     reduce using rule 50 (expression -> pointervar .)


state 47

    (12) unmatchedstatement -> IF LPAREN conditional . RPAREN allstatement
    (13) unmatchedstatement -> IF LPAREN conditional . RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (16) ifblock -> IF LPAREN conditional . RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN conditional . RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN conditional . RPAREN SEMICOLON
    (21) ifblock -> IF LPAREN conditional . RPAREN LBRACE RBRACE
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional

    RPAREN          shift and go to state 63
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 65
    UNEQUAL         shift and go to state 66
    EQUALCHECK      shift and go to state 67
    LESSTHAN        shift and go to state 68
    GREATERTHAN     shift and go to state 69


state 48

    (24) conditional -> CS .

    RPAREN          reduce using rule 24 (conditional -> CS .)
    LESSTHANEQ      reduce using rule 24 (conditional -> CS .)
    GREATERTHANEQ   reduce using rule 24 (conditional -> CS .)
    UNEQUAL         reduce using rule 24 (conditional -> CS .)
    EQUALCHECK      reduce using rule 24 (conditional -> CS .)
    LESSTHAN        reduce using rule 24 (conditional -> CS .)
    GREATERTHAN     reduce using rule 24 (conditional -> CS .)


state 49

    (31) CS -> expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . TIMES expression

    RPAREN          reduce using rule 31 (CS -> expression .)
    LESSTHANEQ      reduce using rule 31 (CS -> expression .)
    GREATERTHANEQ   reduce using rule 31 (CS -> expression .)
    UNEQUAL         reduce using rule 31 (CS -> expression .)
    EQUALCHECK      reduce using rule 31 (CS -> expression .)
    LESSTHAN        reduce using rule 31 (CS -> expression .)
    GREATERTHAN     reduce using rule 31 (CS -> expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60


state 50

    (32) CS -> NOT . LPAREN expression RPAREN

    LPAREN          shift and go to state 70


state 51

    (22) whileblock -> WHILE LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (23) whileblock -> WHILE LPAREN conditional . RPAREN statement
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional

    RPAREN          shift and go to state 71
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 65
    UNEQUAL         shift and go to state 66
    EQUALCHECK      shift and go to state 67
    LESSTHAN        shift and go to state 68
    GREATERTHAN     shift and go to state 69


state 52

    (51) pointervar -> TIMES pointervar .

    EQUALS          reduce using rule 51 (pointervar -> TIMES pointervar .)
    PLUS            reduce using rule 51 (pointervar -> TIMES pointervar .)
    MINUS           reduce using rule 51 (pointervar -> TIMES pointervar .)
    DIVIDE          reduce using rule 51 (pointervar -> TIMES pointervar .)
    TIMES           reduce using rule 51 (pointervar -> TIMES pointervar .)
    SEMICOLON       reduce using rule 51 (pointervar -> TIMES pointervar .)
    RPAREN          reduce using rule 51 (pointervar -> TIMES pointervar .)
    LESSTHANEQ      reduce using rule 51 (pointervar -> TIMES pointervar .)
    GREATERTHANEQ   reduce using rule 51 (pointervar -> TIMES pointervar .)
    UNEQUAL         reduce using rule 51 (pointervar -> TIMES pointervar .)
    EQUALCHECK      reduce using rule 51 (pointervar -> TIMES pointervar .)
    LESSTHAN        reduce using rule 51 (pointervar -> TIMES pointervar .)
    GREATERTHAN     reduce using rule 51 (pointervar -> TIMES pointervar .)


state 53

    (41) assignment_base -> TIMES pointervar EQUALS . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    pointervar                     shift and go to state 46
    expression                     shift and go to state 72

state 54

    (52) pointervar -> ADDROF pointervar .

    EQUALS          reduce using rule 52 (pointervar -> ADDROF pointervar .)
    PLUS            reduce using rule 52 (pointervar -> ADDROF pointervar .)
    MINUS           reduce using rule 52 (pointervar -> ADDROF pointervar .)
    DIVIDE          reduce using rule 52 (pointervar -> ADDROF pointervar .)
    TIMES           reduce using rule 52 (pointervar -> ADDROF pointervar .)
    SEMICOLON       reduce using rule 52 (pointervar -> ADDROF pointervar .)
    RPAREN          reduce using rule 52 (pointervar -> ADDROF pointervar .)
    LESSTHANEQ      reduce using rule 52 (pointervar -> ADDROF pointervar .)
    GREATERTHANEQ   reduce using rule 52 (pointervar -> ADDROF pointervar .)
    UNEQUAL         reduce using rule 52 (pointervar -> ADDROF pointervar .)
    EQUALCHECK      reduce using rule 52 (pointervar -> ADDROF pointervar .)
    LESSTHAN        reduce using rule 52 (pointervar -> ADDROF pointervar .)
    GREATERTHAN     reduce using rule 52 (pointervar -> ADDROF pointervar .)


state 55

    (35) dlist1 -> NAME COMMA dlist1 .

    SEMICOLON       reduce using rule 35 (dlist1 -> NAME COMMA dlist1 .)


state 56

    (37) dlist1 -> specialvar COMMA dlist1 .

    SEMICOLON       reduce using rule 37 (dlist1 -> specialvar COMMA dlist1 .)


state 57

    (43) expression -> expression PLUS . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    expression                     shift and go to state 73
    pointervar                     shift and go to state 46

state 58

    (44) expression -> expression MINUS . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    expression                     shift and go to state 74
    pointervar                     shift and go to state 46

state 59

    (45) expression -> expression DIVIDE . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    expression                     shift and go to state 75
    pointervar                     shift and go to state 46

state 60

    (46) expression -> expression TIMES . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    expression                     shift and go to state 76
    pointervar                     shift and go to state 46

state 61

    (47) expression -> MINUS expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . TIMES expression

    PLUS            reduce using rule 47 (expression -> MINUS expression .)
    MINUS           reduce using rule 47 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 47 (expression -> MINUS expression .)
    TIMES           reduce using rule 47 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 47 (expression -> MINUS expression .)
    RPAREN          reduce using rule 47 (expression -> MINUS expression .)
    LESSTHANEQ      reduce using rule 47 (expression -> MINUS expression .)
    GREATERTHANEQ   reduce using rule 47 (expression -> MINUS expression .)
    UNEQUAL         reduce using rule 47 (expression -> MINUS expression .)
    EQUALCHECK      reduce using rule 47 (expression -> MINUS expression .)
    LESSTHAN        reduce using rule 47 (expression -> MINUS expression .)
    GREATERTHAN     reduce using rule 47 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 59 ]
  ! TIMES           [ shift and go to state 60 ]


state 62

    (48) expression -> LPAREN expression . RPAREN
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . TIMES expression

    RPAREN          shift and go to state 77
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60


state 63

    (12) unmatchedstatement -> IF LPAREN conditional RPAREN . allstatement
    (13) unmatchedstatement -> IF LPAREN conditional RPAREN . statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE
    (16) ifblock -> IF LPAREN conditional RPAREN . statement ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN . statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN conditional RPAREN . SEMICOLON
    (21) ifblock -> IF LPAREN conditional RPAREN . LBRACE RBRACE
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 80
    SEMICOLON       shift and go to state 81
    IF              shift and go to state 19
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    allstatement                   shift and go to state 78
    statement                      shift and go to state 79
    unmatchedstatement             shift and go to state 14
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 64

    (25) conditional -> conditional LESSTHANEQ . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) CS -> . expression
    (32) CS -> . NOT LPAREN expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    NOT             shift and go to state 50
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    conditional                    shift and go to state 82
    CS                             shift and go to state 48
    expression                     shift and go to state 49
    pointervar                     shift and go to state 46

state 65

    (26) conditional -> conditional GREATERTHANEQ . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) CS -> . expression
    (32) CS -> . NOT LPAREN expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    NOT             shift and go to state 50
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    conditional                    shift and go to state 83
    CS                             shift and go to state 48
    expression                     shift and go to state 49
    pointervar                     shift and go to state 46

state 66

    (27) conditional -> conditional UNEQUAL . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) CS -> . expression
    (32) CS -> . NOT LPAREN expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    NOT             shift and go to state 50
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    conditional                    shift and go to state 84
    CS                             shift and go to state 48
    expression                     shift and go to state 49
    pointervar                     shift and go to state 46

state 67

    (28) conditional -> conditional EQUALCHECK . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) CS -> . expression
    (32) CS -> . NOT LPAREN expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    NOT             shift and go to state 50
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    conditional                    shift and go to state 85
    CS                             shift and go to state 48
    expression                     shift and go to state 49
    pointervar                     shift and go to state 46

state 68

    (29) conditional -> conditional LESSTHAN . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) CS -> . expression
    (32) CS -> . NOT LPAREN expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    NOT             shift and go to state 50
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    conditional                    shift and go to state 86
    CS                             shift and go to state 48
    expression                     shift and go to state 49
    pointervar                     shift and go to state 46

state 69

    (30) conditional -> conditional GREATERTHAN . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) CS -> . expression
    (32) CS -> . NOT LPAREN expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    NOT             shift and go to state 50
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    conditional                    shift and go to state 87
    CS                             shift and go to state 48
    expression                     shift and go to state 49
    pointervar                     shift and go to state 46

state 70

    (32) CS -> NOT LPAREN . expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    expression                     shift and go to state 88
    pointervar                     shift and go to state 46

state 71

    (22) whileblock -> WHILE LPAREN conditional RPAREN . LBRACE fbody RBRACE
    (23) whileblock -> WHILE LPAREN conditional RPAREN . statement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 89
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    IF              shift and go to state 91
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    statement                      shift and go to state 90
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 72

    (41) assignment_base -> TIMES pointervar EQUALS expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 41 (assignment_base -> TIMES pointervar EQUALS expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60


state 73

    (43) expression -> expression PLUS expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . TIMES expression

    PLUS            reduce using rule 43 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 43 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 43 (expression -> expression PLUS expression .)
    LESSTHANEQ      reduce using rule 43 (expression -> expression PLUS expression .)
    GREATERTHANEQ   reduce using rule 43 (expression -> expression PLUS expression .)
    UNEQUAL         reduce using rule 43 (expression -> expression PLUS expression .)
    EQUALCHECK      reduce using rule 43 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 43 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 43 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60

  ! DIVIDE          [ reduce using rule 43 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]


state 74

    (44) expression -> expression MINUS expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . TIMES expression

    PLUS            reduce using rule 44 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 44 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 44 (expression -> expression MINUS expression .)
    LESSTHANEQ      reduce using rule 44 (expression -> expression MINUS expression .)
    GREATERTHANEQ   reduce using rule 44 (expression -> expression MINUS expression .)
    UNEQUAL         reduce using rule 44 (expression -> expression MINUS expression .)
    EQUALCHECK      reduce using rule 44 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 44 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 44 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60

  ! DIVIDE          [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]


state 75

    (45) expression -> expression DIVIDE expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . TIMES expression

    PLUS            reduce using rule 45 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 45 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 45 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 45 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 45 (expression -> expression DIVIDE expression .)
    LESSTHANEQ      reduce using rule 45 (expression -> expression DIVIDE expression .)
    GREATERTHANEQ   reduce using rule 45 (expression -> expression DIVIDE expression .)
    UNEQUAL         reduce using rule 45 (expression -> expression DIVIDE expression .)
    EQUALCHECK      reduce using rule 45 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 45 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 45 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 59 ]
  ! TIMES           [ shift and go to state 60 ]


state 76

    (46) expression -> expression TIMES expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . TIMES expression

    PLUS            reduce using rule 46 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 46 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 46 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 46 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 46 (expression -> expression TIMES expression .)
    LESSTHANEQ      reduce using rule 46 (expression -> expression TIMES expression .)
    GREATERTHANEQ   reduce using rule 46 (expression -> expression TIMES expression .)
    UNEQUAL         reduce using rule 46 (expression -> expression TIMES expression .)
    EQUALCHECK      reduce using rule 46 (expression -> expression TIMES expression .)
    LESSTHAN        reduce using rule 46 (expression -> expression TIMES expression .)
    GREATERTHAN     reduce using rule 46 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 59 ]
  ! TIMES           [ shift and go to state 60 ]


state 77

    (48) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    LESSTHANEQ      reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 48 (expression -> LPAREN expression RPAREN .)


state 78

    (12) unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .

    IF              reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TYPE            reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    WHILE           reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TIMES           reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    NAME            reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    RBRACE          reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)


state 79

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement . ELSE unmatchedstatement
    (16) ifblock -> IF LPAREN conditional RPAREN statement . ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN statement . ELSE LBRACE fbody RBRACE
    (6) allstatement -> statement .

    ELSE            shift and go to state 92
    IF              reduce using rule 6 (allstatement -> statement .)
    TYPE            reduce using rule 6 (allstatement -> statement .)
    WHILE           reduce using rule 6 (allstatement -> statement .)
    TIMES           reduce using rule 6 (allstatement -> statement .)
    NAME            reduce using rule 6 (allstatement -> statement .)
    RBRACE          reduce using rule 6 (allstatement -> statement .)


state 80

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE statement
    (21) ifblock -> IF LPAREN conditional RPAREN LBRACE . RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    RBRACE          shift and go to state 94
    IF              shift and go to state 19
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    fbody                          shift and go to state 93
    unmatchedstatement             shift and go to state 14
    statement                      shift and go to state 13
    allstatement                   shift and go to state 12
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 81

    (20) ifblock -> IF LPAREN conditional RPAREN SEMICOLON .

    IF              reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    TYPE            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    WHILE           reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    TIMES           reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    NAME            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    RBRACE          reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    ELSE            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)


state 82

    (25) conditional -> conditional LESSTHANEQ conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional

    RPAREN          reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    LESSTHANEQ      reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    UNEQUAL         reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    EQUALCHECK      reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    LESSTHAN        reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHAN     reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 64 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 67 ]
  ! LESSTHAN        [ shift and go to state 68 ]
  ! GREATERTHAN     [ shift and go to state 69 ]


state 83

    (26) conditional -> conditional GREATERTHANEQ conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional

    RPAREN          reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    LESSTHANEQ      reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    UNEQUAL         reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    EQUALCHECK      reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    LESSTHAN        reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHAN     reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 64 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 67 ]
  ! LESSTHAN        [ shift and go to state 68 ]
  ! GREATERTHAN     [ shift and go to state 69 ]


state 84

    (27) conditional -> conditional UNEQUAL conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional

    RPAREN          reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    UNEQUAL         reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    EQUALCHECK      reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 65
    LESSTHAN        shift and go to state 68
    GREATERTHAN     shift and go to state 69

  ! LESSTHANEQ      [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! LESSTHAN        [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHAN     [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 67 ]


state 85

    (28) conditional -> conditional EQUALCHECK conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional

    RPAREN          reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    UNEQUAL         reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    EQUALCHECK      reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 65
    LESSTHAN        shift and go to state 68
    GREATERTHAN     shift and go to state 69

  ! LESSTHANEQ      [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! LESSTHAN        [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHAN     [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 67 ]


state 86

    (29) conditional -> conditional LESSTHAN conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional

    RPAREN          reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    LESSTHANEQ      reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHANEQ   reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    UNEQUAL         reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    EQUALCHECK      reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    LESSTHAN        reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHAN     reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 64 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 67 ]
  ! LESSTHAN        [ shift and go to state 68 ]
  ! GREATERTHAN     [ shift and go to state 69 ]


state 87

    (30) conditional -> conditional GREATERTHAN conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional

    RPAREN          reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    LESSTHANEQ      reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHANEQ   reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    UNEQUAL         reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    EQUALCHECK      reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    LESSTHAN        reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHAN     reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 64 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 67 ]
  ! LESSTHAN        [ shift and go to state 68 ]
  ! GREATERTHAN     [ shift and go to state 69 ]


state 88

    (32) CS -> NOT LPAREN expression . RPAREN
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . TIMES expression

    RPAREN          shift and go to state 95
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 60


state 89

    (22) whileblock -> WHILE LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 19
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    fbody                          shift and go to state 96
    allstatement                   shift and go to state 12
    statement                      shift and go to state 13
    unmatchedstatement             shift and go to state 14
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 90

    (23) whileblock -> WHILE LPAREN conditional RPAREN statement .

    IF              reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    TYPE            reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    WHILE           reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    TIMES           reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    NAME            reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    RBRACE          reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    ELSE            reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)


state 91

    (16) ifblock -> IF . LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> IF . LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF . LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> IF . LPAREN conditional RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 97


state 92

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE . unmatchedstatement
    (16) ifblock -> IF LPAREN conditional RPAREN statement ELSE . statement
    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE . LBRACE fbody RBRACE
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 100
    IF              shift and go to state 19
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    statement                      shift and go to state 98
    unmatchedstatement             shift and go to state 99
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 93

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE statement

    RBRACE          shift and go to state 101


state 94

    (21) ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .

    IF              reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    TYPE            reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    WHILE           reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    TIMES           reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    NAME            reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    RBRACE          reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    ELSE            reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)


state 95

    (32) CS -> NOT LPAREN expression RPAREN .

    RPAREN          reduce using rule 32 (CS -> NOT LPAREN expression RPAREN .)
    LESSTHANEQ      reduce using rule 32 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 32 (CS -> NOT LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 32 (CS -> NOT LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 32 (CS -> NOT LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 32 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 32 (CS -> NOT LPAREN expression RPAREN .)


state 96

    (22) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 102


state 97

    (16) ifblock -> IF LPAREN . conditional RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN . conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN . conditional RPAREN SEMICOLON
    (21) ifblock -> IF LPAREN . conditional RPAREN LBRACE RBRACE
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) CS -> . expression
    (32) CS -> . NOT LPAREN expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . pointervar
    (51) pointervar -> . TIMES pointervar
    (52) pointervar -> . ADDROF pointervar
    (53) pointervar -> . NAME

    NOT             shift and go to state 50
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 44
    NUMBER          shift and go to state 45
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 35
    NAME            shift and go to state 36

    conditional                    shift and go to state 103
    CS                             shift and go to state 48
    expression                     shift and go to state 49
    pointervar                     shift and go to state 46

state 98

    (16) ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .

    IF              reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TYPE            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    WHILE           reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TIMES           reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    NAME            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    ELSE            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)


state 99

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .

    IF              reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TYPE            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    WHILE           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TIMES           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    NAME            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    RBRACE          reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)


state 100

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 19
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    statement                      shift and go to state 13
    fbody                          shift and go to state 104
    allstatement                   shift and go to state 12
    unmatchedstatement             shift and go to state 14
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 101

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE statement

    ELSE            shift and go to state 105
    IF              reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 102

    (22) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .

    IF              reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    ELSE            reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 103

    (16) ifblock -> IF LPAREN conditional . RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN conditional . RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN conditional . RPAREN SEMICOLON
    (21) ifblock -> IF LPAREN conditional . RPAREN LBRACE RBRACE
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional

    RPAREN          shift and go to state 106
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 65
    UNEQUAL         shift and go to state 66
    EQUALCHECK      shift and go to state 67
    LESSTHAN        shift and go to state 68
    GREATERTHAN     shift and go to state 69


state 104

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 107


state 105

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . unmatchedstatement
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . statement
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 108
    IF              shift and go to state 19
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    unmatchedstatement             shift and go to state 109
    statement                      shift and go to state 110
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 106

    (16) ifblock -> IF LPAREN conditional RPAREN . statement ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN . statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN conditional RPAREN . SEMICOLON
    (21) ifblock -> IF LPAREN conditional RPAREN . LBRACE RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 112
    SEMICOLON       shift and go to state 81
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    IF              shift and go to state 91
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    statement                      shift and go to state 111
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 107

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .

    IF              reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    ELSE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)


state 108

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 19
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    fbody                          shift and go to state 113
    allstatement                   shift and go to state 12
    statement                      shift and go to state 13
    unmatchedstatement             shift and go to state 14
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 109

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .

    IF              reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TYPE            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    WHILE           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TIMES           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    NAME            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    RBRACE          reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)


state 110

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .

    IF              reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TYPE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    WHILE           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TIMES           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    NAME            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    RBRACE          reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    ELSE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)


state 111

    (16) ifblock -> IF LPAREN conditional RPAREN statement . ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN statement . ELSE LBRACE fbody RBRACE

    ELSE            shift and go to state 114


state 112

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE statement
    (21) ifblock -> IF LPAREN conditional RPAREN LBRACE . RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    RBRACE          shift and go to state 94
    IF              shift and go to state 19
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    fbody                          shift and go to state 115
    statement                      shift and go to state 13
    allstatement                   shift and go to state 12
    unmatchedstatement             shift and go to state 14
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 113

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 116


state 114

    (16) ifblock -> IF LPAREN conditional RPAREN statement ELSE . statement
    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE . LBRACE fbody RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 100
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    IF              shift and go to state 91
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    statement                      shift and go to state 98
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20

state 115

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE statement

    RBRACE          shift and go to state 117


state 116

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .

    IF              reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    ELSE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)


state 117

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE statement

    ELSE            shift and go to state 118


state 118

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . statement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (40) assignment -> . assignment_base SEMICOLON
    (33) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (41) assignment_base -> . TIMES pointervar EQUALS expression
    (42) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 108
    TYPE            shift and go to state 9
    WHILE           shift and go to state 21
    IF              shift and go to state 91
    TIMES           shift and go to state 22
    NAME            shift and go to state 10

    statement                      shift and go to state 110
    assignment                     shift and go to state 15
    declaration                    shift and go to state 16
    whileblock                     shift and go to state 17
    ifblock                        shift and go to state 18
    assignment_base                shift and go to state 20
