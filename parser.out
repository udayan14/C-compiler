Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    newline

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     program -> function program
Rule 3     function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE
Rule 4     fbody -> statement
Rule 5     fbody -> statement fbody
Rule 6     statement -> assignment
Rule 7     statement -> declaration
Rule 8     declaration -> TYPE dlist1 SEMICOLON
Rule 9     dlist1 -> NAME
Rule 10    dlist1 -> NAME COMMA dlist1
Rule 11    dlist1 -> specialvar
Rule 12    dlist1 -> specialvar COMMA dlist1
Rule 13    specialvar -> VALOF specialvar
Rule 14    specialvar -> VALOF NAME
Rule 15    assignment -> assignment_list SEMICOLON
Rule 16    assignment_list -> assignment_inter
Rule 17    assignment_list -> assignment_inter COMMA assignment_list
Rule 18    assignment_inter -> assignment_base
Rule 19    assignment_inter -> VALOF pointervar EQUALS assignment_inter
Rule 20    assignment_inter -> NAME EQUALS assignment_inter
Rule 21    assignment_base -> VALOF pointervar EQUALS NUMBER
Rule 22    assignment_base -> VALOF pointervar EQUALS pointervar
Rule 23    assignment_base -> NAME EQUALS pointervar
Rule 24    pointervar -> VALOF pointervar
Rule 25    pointervar -> ADDROF pointervar
Rule 26    pointervar -> NAME

Terminals, with rules where they appear

ADDROF               : 25
COMMA                : 10 12 17
COMMENT              : 
EQUALS               : 19 20 21 22 23
LBRACE               : 3
LPAREN               : 3
NAME                 : 3 9 10 14 20 23 26
NUMBER               : 21
RBRACE               : 3
RPAREN               : 3
SEMICOLON            : 8 15
TYPE                 : 3 8
VALOF                : 13 14 19 21 22 24
error                : 
newline              : 

Nonterminals, with rules where they appear

assignment           : 6
assignment_base      : 18
assignment_inter     : 16 17 19 20
assignment_list      : 15 17
declaration          : 7
dlist1               : 8 10 12
fbody                : 3 5
function             : 1 2
pointervar           : 19 21 22 22 23 24 25
program              : 2 0
specialvar           : 11 12 13
statement            : 4 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    TYPE            shift and go to state 1

    program                        shift and go to state 3
    function                       shift and go to state 2

state 1

    (3) function -> TYPE . NAME LPAREN RPAREN LBRACE fbody RBRACE

    NAME            shift and go to state 4


state 2

    (1) program -> function .
    (2) program -> function . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    $end            reduce using rule 1 (program -> function .)
    TYPE            shift and go to state 1

    program                        shift and go to state 5
    function                       shift and go to state 2

state 3

    (0) S' -> program .



state 4

    (3) function -> TYPE NAME . LPAREN RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 6


state 5

    (2) program -> function program .

    $end            reduce using rule 2 (program -> function program .)


state 6

    (3) function -> TYPE NAME LPAREN . RPAREN LBRACE fbody RBRACE

    RPAREN          shift and go to state 7


state 7

    (3) function -> TYPE NAME LPAREN RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 8


state 8

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . statement
    (5) fbody -> . statement fbody
    (6) statement -> . assignment
    (7) statement -> . declaration
    (15) assignment -> . assignment_list SEMICOLON
    (8) declaration -> . TYPE dlist1 SEMICOLON
    (16) assignment_list -> . assignment_inter
    (17) assignment_list -> . assignment_inter COMMA assignment_list
    (18) assignment_inter -> . assignment_base
    (19) assignment_inter -> . VALOF pointervar EQUALS assignment_inter
    (20) assignment_inter -> . NAME EQUALS assignment_inter
    (21) assignment_base -> . VALOF pointervar EQUALS NUMBER
    (22) assignment_base -> . VALOF pointervar EQUALS pointervar
    (23) assignment_base -> . NAME EQUALS pointervar

    TYPE            shift and go to state 15
    VALOF           shift and go to state 16
    NAME            shift and go to state 17

    fbody                          shift and go to state 13
    assignment_base                shift and go to state 14
    assignment                     shift and go to state 11
    assignment_list                shift and go to state 10
    statement                      shift and go to state 18
    assignment_inter               shift and go to state 9
    declaration                    shift and go to state 12

state 9

    (16) assignment_list -> assignment_inter .
    (17) assignment_list -> assignment_inter . COMMA assignment_list

    SEMICOLON       reduce using rule 16 (assignment_list -> assignment_inter .)
    COMMA           shift and go to state 19


state 10

    (15) assignment -> assignment_list . SEMICOLON

    SEMICOLON       shift and go to state 20


state 11

    (6) statement -> assignment .

    TYPE            reduce using rule 6 (statement -> assignment .)
    VALOF           reduce using rule 6 (statement -> assignment .)
    NAME            reduce using rule 6 (statement -> assignment .)
    RBRACE          reduce using rule 6 (statement -> assignment .)


state 12

    (7) statement -> declaration .

    TYPE            reduce using rule 7 (statement -> declaration .)
    VALOF           reduce using rule 7 (statement -> declaration .)
    NAME            reduce using rule 7 (statement -> declaration .)
    RBRACE          reduce using rule 7 (statement -> declaration .)


state 13

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 21


state 14

    (18) assignment_inter -> assignment_base .

    COMMA           reduce using rule 18 (assignment_inter -> assignment_base .)
    SEMICOLON       reduce using rule 18 (assignment_inter -> assignment_base .)


state 15

    (8) declaration -> TYPE . dlist1 SEMICOLON
    (9) dlist1 -> . NAME
    (10) dlist1 -> . NAME COMMA dlist1
    (11) dlist1 -> . specialvar
    (12) dlist1 -> . specialvar COMMA dlist1
    (13) specialvar -> . VALOF specialvar
    (14) specialvar -> . VALOF NAME

    NAME            shift and go to state 25
    VALOF           shift and go to state 23

    dlist1                         shift and go to state 22
    specialvar                     shift and go to state 24

state 16

    (19) assignment_inter -> VALOF . pointervar EQUALS assignment_inter
    (21) assignment_base -> VALOF . pointervar EQUALS NUMBER
    (22) assignment_base -> VALOF . pointervar EQUALS pointervar
    (24) pointervar -> . VALOF pointervar
    (25) pointervar -> . ADDROF pointervar
    (26) pointervar -> . NAME

    VALOF           shift and go to state 28
    ADDROF          shift and go to state 27
    NAME            shift and go to state 29

    pointervar                     shift and go to state 26

state 17

    (20) assignment_inter -> NAME . EQUALS assignment_inter
    (23) assignment_base -> NAME . EQUALS pointervar

    EQUALS          shift and go to state 30


state 18

    (4) fbody -> statement .
    (5) fbody -> statement . fbody
    (4) fbody -> . statement
    (5) fbody -> . statement fbody
    (6) statement -> . assignment
    (7) statement -> . declaration
    (15) assignment -> . assignment_list SEMICOLON
    (8) declaration -> . TYPE dlist1 SEMICOLON
    (16) assignment_list -> . assignment_inter
    (17) assignment_list -> . assignment_inter COMMA assignment_list
    (18) assignment_inter -> . assignment_base
    (19) assignment_inter -> . VALOF pointervar EQUALS assignment_inter
    (20) assignment_inter -> . NAME EQUALS assignment_inter
    (21) assignment_base -> . VALOF pointervar EQUALS NUMBER
    (22) assignment_base -> . VALOF pointervar EQUALS pointervar
    (23) assignment_base -> . NAME EQUALS pointervar

    RBRACE          reduce using rule 4 (fbody -> statement .)
    TYPE            shift and go to state 15
    VALOF           shift and go to state 16
    NAME            shift and go to state 17

    fbody                          shift and go to state 31
    assignment_base                shift and go to state 14
    assignment                     shift and go to state 11
    assignment_list                shift and go to state 10
    statement                      shift and go to state 18
    assignment_inter               shift and go to state 9
    declaration                    shift and go to state 12

state 19

    (17) assignment_list -> assignment_inter COMMA . assignment_list
    (16) assignment_list -> . assignment_inter
    (17) assignment_list -> . assignment_inter COMMA assignment_list
    (18) assignment_inter -> . assignment_base
    (19) assignment_inter -> . VALOF pointervar EQUALS assignment_inter
    (20) assignment_inter -> . NAME EQUALS assignment_inter
    (21) assignment_base -> . VALOF pointervar EQUALS NUMBER
    (22) assignment_base -> . VALOF pointervar EQUALS pointervar
    (23) assignment_base -> . NAME EQUALS pointervar

    VALOF           shift and go to state 16
    NAME            shift and go to state 17

    assignment_base                shift and go to state 14
    assignment_list                shift and go to state 32
    assignment_inter               shift and go to state 9

state 20

    (15) assignment -> assignment_list SEMICOLON .

    TYPE            reduce using rule 15 (assignment -> assignment_list SEMICOLON .)
    VALOF           reduce using rule 15 (assignment -> assignment_list SEMICOLON .)
    NAME            reduce using rule 15 (assignment -> assignment_list SEMICOLON .)
    RBRACE          reduce using rule 15 (assignment -> assignment_list SEMICOLON .)


state 21

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .

    TYPE            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)
    $end            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)


state 22

    (8) declaration -> TYPE dlist1 . SEMICOLON

    SEMICOLON       shift and go to state 33


state 23

    (13) specialvar -> VALOF . specialvar
    (14) specialvar -> VALOF . NAME
    (13) specialvar -> . VALOF specialvar
    (14) specialvar -> . VALOF NAME

    NAME            shift and go to state 35
    VALOF           shift and go to state 23

    specialvar                     shift and go to state 34

state 24

    (11) dlist1 -> specialvar .
    (12) dlist1 -> specialvar . COMMA dlist1

    SEMICOLON       reduce using rule 11 (dlist1 -> specialvar .)
    COMMA           shift and go to state 36


state 25

    (9) dlist1 -> NAME .
    (10) dlist1 -> NAME . COMMA dlist1

    SEMICOLON       reduce using rule 9 (dlist1 -> NAME .)
    COMMA           shift and go to state 37


state 26

    (19) assignment_inter -> VALOF pointervar . EQUALS assignment_inter
    (21) assignment_base -> VALOF pointervar . EQUALS NUMBER
    (22) assignment_base -> VALOF pointervar . EQUALS pointervar

    EQUALS          shift and go to state 38


state 27

    (25) pointervar -> ADDROF . pointervar
    (24) pointervar -> . VALOF pointervar
    (25) pointervar -> . ADDROF pointervar
    (26) pointervar -> . NAME

    VALOF           shift and go to state 28
    ADDROF          shift and go to state 27
    NAME            shift and go to state 29

    pointervar                     shift and go to state 39

state 28

    (24) pointervar -> VALOF . pointervar
    (24) pointervar -> . VALOF pointervar
    (25) pointervar -> . ADDROF pointervar
    (26) pointervar -> . NAME

    VALOF           shift and go to state 28
    ADDROF          shift and go to state 27
    NAME            shift and go to state 29

    pointervar                     shift and go to state 40

state 29

    (26) pointervar -> NAME .

    EQUALS          reduce using rule 26 (pointervar -> NAME .)
    COMMA           reduce using rule 26 (pointervar -> NAME .)
    SEMICOLON       reduce using rule 26 (pointervar -> NAME .)


state 30

    (20) assignment_inter -> NAME EQUALS . assignment_inter
    (23) assignment_base -> NAME EQUALS . pointervar
    (18) assignment_inter -> . assignment_base
    (19) assignment_inter -> . VALOF pointervar EQUALS assignment_inter
    (20) assignment_inter -> . NAME EQUALS assignment_inter
    (24) pointervar -> . VALOF pointervar
    (25) pointervar -> . ADDROF pointervar
    (26) pointervar -> . NAME
    (21) assignment_base -> . VALOF pointervar EQUALS NUMBER
    (22) assignment_base -> . VALOF pointervar EQUALS pointervar
    (23) assignment_base -> . NAME EQUALS pointervar

    VALOF           shift and go to state 42
    NAME            shift and go to state 44
    ADDROF          shift and go to state 27

    assignment_base                shift and go to state 14
    assignment_inter               shift and go to state 43
    pointervar                     shift and go to state 41

state 31

    (5) fbody -> statement fbody .

    RBRACE          reduce using rule 5 (fbody -> statement fbody .)


state 32

    (17) assignment_list -> assignment_inter COMMA assignment_list .

    SEMICOLON       reduce using rule 17 (assignment_list -> assignment_inter COMMA assignment_list .)


state 33

    (8) declaration -> TYPE dlist1 SEMICOLON .

    TYPE            reduce using rule 8 (declaration -> TYPE dlist1 SEMICOLON .)
    VALOF           reduce using rule 8 (declaration -> TYPE dlist1 SEMICOLON .)
    NAME            reduce using rule 8 (declaration -> TYPE dlist1 SEMICOLON .)
    RBRACE          reduce using rule 8 (declaration -> TYPE dlist1 SEMICOLON .)


state 34

    (13) specialvar -> VALOF specialvar .

    COMMA           reduce using rule 13 (specialvar -> VALOF specialvar .)
    SEMICOLON       reduce using rule 13 (specialvar -> VALOF specialvar .)


state 35

    (14) specialvar -> VALOF NAME .

    COMMA           reduce using rule 14 (specialvar -> VALOF NAME .)
    SEMICOLON       reduce using rule 14 (specialvar -> VALOF NAME .)


state 36

    (12) dlist1 -> specialvar COMMA . dlist1
    (9) dlist1 -> . NAME
    (10) dlist1 -> . NAME COMMA dlist1
    (11) dlist1 -> . specialvar
    (12) dlist1 -> . specialvar COMMA dlist1
    (13) specialvar -> . VALOF specialvar
    (14) specialvar -> . VALOF NAME

    NAME            shift and go to state 25
    VALOF           shift and go to state 23

    dlist1                         shift and go to state 45
    specialvar                     shift and go to state 24

state 37

    (10) dlist1 -> NAME COMMA . dlist1
    (9) dlist1 -> . NAME
    (10) dlist1 -> . NAME COMMA dlist1
    (11) dlist1 -> . specialvar
    (12) dlist1 -> . specialvar COMMA dlist1
    (13) specialvar -> . VALOF specialvar
    (14) specialvar -> . VALOF NAME

    NAME            shift and go to state 25
    VALOF           shift and go to state 23

    dlist1                         shift and go to state 46
    specialvar                     shift and go to state 24

state 38

    (19) assignment_inter -> VALOF pointervar EQUALS . assignment_inter
    (21) assignment_base -> VALOF pointervar EQUALS . NUMBER
    (22) assignment_base -> VALOF pointervar EQUALS . pointervar
    (18) assignment_inter -> . assignment_base
    (19) assignment_inter -> . VALOF pointervar EQUALS assignment_inter
    (20) assignment_inter -> . NAME EQUALS assignment_inter
    (24) pointervar -> . VALOF pointervar
    (25) pointervar -> . ADDROF pointervar
    (26) pointervar -> . NAME
    (21) assignment_base -> . VALOF pointervar EQUALS NUMBER
    (22) assignment_base -> . VALOF pointervar EQUALS pointervar
    (23) assignment_base -> . NAME EQUALS pointervar

    NUMBER          shift and go to state 47
    VALOF           shift and go to state 42
    NAME            shift and go to state 44
    ADDROF          shift and go to state 27

    assignment_base                shift and go to state 14
    assignment_inter               shift and go to state 49
    pointervar                     shift and go to state 48

state 39

    (25) pointervar -> ADDROF pointervar .

    COMMA           reduce using rule 25 (pointervar -> ADDROF pointervar .)
    SEMICOLON       reduce using rule 25 (pointervar -> ADDROF pointervar .)
    EQUALS          reduce using rule 25 (pointervar -> ADDROF pointervar .)


state 40

    (24) pointervar -> VALOF pointervar .

    EQUALS          reduce using rule 24 (pointervar -> VALOF pointervar .)
    COMMA           reduce using rule 24 (pointervar -> VALOF pointervar .)
    SEMICOLON       reduce using rule 24 (pointervar -> VALOF pointervar .)


state 41

    (23) assignment_base -> NAME EQUALS pointervar .

    COMMA           reduce using rule 23 (assignment_base -> NAME EQUALS pointervar .)
    SEMICOLON       reduce using rule 23 (assignment_base -> NAME EQUALS pointervar .)


state 42

    (19) assignment_inter -> VALOF . pointervar EQUALS assignment_inter
    (24) pointervar -> VALOF . pointervar
    (21) assignment_base -> VALOF . pointervar EQUALS NUMBER
    (22) assignment_base -> VALOF . pointervar EQUALS pointervar
    (24) pointervar -> . VALOF pointervar
    (25) pointervar -> . ADDROF pointervar
    (26) pointervar -> . NAME

    VALOF           shift and go to state 28
    ADDROF          shift and go to state 27
    NAME            shift and go to state 29

    pointervar                     shift and go to state 50

state 43

    (20) assignment_inter -> NAME EQUALS assignment_inter .

    COMMA           reduce using rule 20 (assignment_inter -> NAME EQUALS assignment_inter .)
    SEMICOLON       reduce using rule 20 (assignment_inter -> NAME EQUALS assignment_inter .)


state 44

    (20) assignment_inter -> NAME . EQUALS assignment_inter
    (26) pointervar -> NAME .
    (23) assignment_base -> NAME . EQUALS pointervar

    EQUALS          shift and go to state 30
    COMMA           reduce using rule 26 (pointervar -> NAME .)
    SEMICOLON       reduce using rule 26 (pointervar -> NAME .)


state 45

    (12) dlist1 -> specialvar COMMA dlist1 .

    SEMICOLON       reduce using rule 12 (dlist1 -> specialvar COMMA dlist1 .)


state 46

    (10) dlist1 -> NAME COMMA dlist1 .

    SEMICOLON       reduce using rule 10 (dlist1 -> NAME COMMA dlist1 .)


state 47

    (21) assignment_base -> VALOF pointervar EQUALS NUMBER .

    COMMA           reduce using rule 21 (assignment_base -> VALOF pointervar EQUALS NUMBER .)
    SEMICOLON       reduce using rule 21 (assignment_base -> VALOF pointervar EQUALS NUMBER .)


state 48

    (22) assignment_base -> VALOF pointervar EQUALS pointervar .

    COMMA           reduce using rule 22 (assignment_base -> VALOF pointervar EQUALS pointervar .)
    SEMICOLON       reduce using rule 22 (assignment_base -> VALOF pointervar EQUALS pointervar .)


state 49

    (19) assignment_inter -> VALOF pointervar EQUALS assignment_inter .

    COMMA           reduce using rule 19 (assignment_inter -> VALOF pointervar EQUALS assignment_inter .)
    SEMICOLON       reduce using rule 19 (assignment_inter -> VALOF pointervar EQUALS assignment_inter .)


state 50

    (19) assignment_inter -> VALOF pointervar . EQUALS assignment_inter
    (24) pointervar -> VALOF pointervar .
    (21) assignment_base -> VALOF pointervar . EQUALS NUMBER
    (22) assignment_base -> VALOF pointervar . EQUALS pointervar

    EQUALS          shift and go to state 38
    COMMA           reduce using rule 24 (pointervar -> VALOF pointervar .)
    SEMICOLON       reduce using rule 24 (pointervar -> VALOF pointervar .)

