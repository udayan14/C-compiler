Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     program -> function program
Rule 3     function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE
Rule 4     fbody -> allstatement
Rule 5     fbody -> allstatement fbody
Rule 6     allstatement -> statement
Rule 7     allstatement -> unmatchedstatement
Rule 8     statement -> assignment
Rule 9     statement -> declaration
Rule 10    statement -> whileblock
Rule 11    statement -> ifblock
Rule 12    unmatchedstatement -> IF LPAREN conditional RPAREN allstatement
Rule 13    unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
Rule 14    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
Rule 15    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 16    ifblock -> IF LPAREN conditional RPAREN statement ELSE statement
Rule 17    ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
Rule 18    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
Rule 19    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
Rule 20    whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 21    conditional -> CS
Rule 22    conditional -> conditional LESSTHANEQ conditional
Rule 23    conditional -> conditional GREATERTHANEQ conditional
Rule 24    conditional -> conditional UNEQUAL conditional
Rule 25    conditional -> conditional EQUALCHECK conditional
Rule 26    conditional -> conditional LESSTHAN conditional
Rule 27    conditional -> conditional GREATERTHAN conditional
Rule 28    conditional -> conditional ANDOPERATOR conditional
Rule 29    CS -> expression
Rule 30    CS -> NOT LPAREN expression RPAREN
Rule 31    declaration -> TYPE dlist1 SEMICOLON
Rule 32    dlist1 -> NAME
Rule 33    dlist1 -> NAME COMMA dlist1
Rule 34    dlist1 -> specialvar
Rule 35    dlist1 -> specialvar COMMA dlist1
Rule 36    specialvar -> TIMES specialvar
Rule 37    specialvar -> TIMES NAME
Rule 38    assignment -> assignment_base SEMICOLON
Rule 39    assignment_base -> TIMES pointervar EQUALS expression
Rule 40    assignment_base -> NAME EQUALS expression
Rule 41    expression -> expression PLUS expression
Rule 42    expression -> expression MINUS expression
Rule 43    expression -> expression DIVIDE expression
Rule 44    expression -> expression TIMES expression
Rule 45    expression -> MINUS expression
Rule 46    expression -> LPAREN expression RPAREN
Rule 47    expression -> NUMBER
Rule 48    expression -> pointervar
Rule 49    pointervar -> TIMES pointervar
Rule 50    pointervar -> ANDOPERATOR pointervar
Rule 51    pointervar -> NAME

Terminals, with rules where they appear

ANDOPERATOR          : 28 50
COMMA                : 33 35
DIVIDE               : 43
ELSE                 : 13 14 16 17 18 19
EQUALCHECK           : 25
EQUALS               : 39 40
GREATERTHAN          : 27
GREATERTHANEQ        : 23
IF                   : 12 13 14 15 16 17 18 19
LBRACE               : 3 14 15 17 18 18 19 20
LESSTHAN             : 26
LESSTHANEQ           : 22
LPAREN               : 3 12 13 14 15 16 17 18 19 20 30 46
MINUS                : 42 45
NAME                 : 3 32 33 37 40 51
NOT                  : 30
NUMBER               : 47
PLUS                 : 41
RBRACE               : 3 14 15 17 18 18 19 20
RPAREN               : 3 12 13 14 15 16 17 18 19 20 30 46
SEMICOLON            : 31 38
TIMES                : 36 37 39 44 49
TYPE                 : 3 31
UNEQUAL              : 24
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

CS                   : 21
allstatement         : 4 5 12
assignment           : 8
assignment_base      : 38
conditional          : 12 13 14 15 16 17 18 19 20 22 22 23 23 24 24 25 25 26 26 27 27 28 28
declaration          : 9
dlist1               : 31 33 35
expression           : 29 30 39 40 41 41 42 42 43 43 44 44 45 46
fbody                : 3 5 14 15 17 18 18 19 20
function             : 1 2
ifblock              : 11
pointervar           : 39 48 49 50
program              : 2 0
specialvar           : 34 35 36
statement            : 6 13 16 16 17 19
unmatchedstatement   : 7 13 14
whileblock           : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    TYPE            shift and go to state 3

    function                       shift and go to state 1
    program                        shift and go to state 2

state 1

    (1) program -> function .
    (2) program -> function . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    $end            reduce using rule 1 (program -> function .)
    TYPE            shift and go to state 3

    function                       shift and go to state 1
    program                        shift and go to state 4

state 2

    (0) S' -> program .



state 3

    (3) function -> TYPE . NAME LPAREN RPAREN LBRACE fbody RBRACE

    NAME            shift and go to state 5


state 4

    (2) program -> function program .

    $end            reduce using rule 2 (program -> function program .)


state 5

    (3) function -> TYPE NAME . LPAREN RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 6


state 6

    (3) function -> TYPE NAME LPAREN . RPAREN LBRACE fbody RBRACE

    RPAREN          shift and go to state 7


state 7

    (3) function -> TYPE NAME LPAREN RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 8


state 8

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (38) assignment -> . assignment_base SEMICOLON
    (31) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (39) assignment_base -> . TIMES pointervar EQUALS expression
    (40) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 13
    TYPE            shift and go to state 22
    WHILE           shift and go to state 12
    TIMES           shift and go to state 11
    NAME            shift and go to state 16

    assignment_base                shift and go to state 9
    statement                      shift and go to state 10
    declaration                    shift and go to state 18
    fbody                          shift and go to state 14
    assignment                     shift and go to state 19
    ifblock                        shift and go to state 20
    allstatement                   shift and go to state 15
    unmatchedstatement             shift and go to state 21
    whileblock                     shift and go to state 17

state 9

    (38) assignment -> assignment_base . SEMICOLON

    SEMICOLON       shift and go to state 23


state 10

    (6) allstatement -> statement .

    IF              reduce using rule 6 (allstatement -> statement .)
    TYPE            reduce using rule 6 (allstatement -> statement .)
    WHILE           reduce using rule 6 (allstatement -> statement .)
    TIMES           reduce using rule 6 (allstatement -> statement .)
    NAME            reduce using rule 6 (allstatement -> statement .)
    RBRACE          reduce using rule 6 (allstatement -> statement .)


state 11

    (39) assignment_base -> TIMES . pointervar EQUALS expression
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 24

state 12

    (20) whileblock -> WHILE . LPAREN conditional RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 28


state 13

    (12) unmatchedstatement -> IF . LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> IF . LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> IF . LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> IF . LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement

    LPAREN          shift and go to state 29


state 14

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 30


state 15

    (4) fbody -> allstatement .
    (5) fbody -> allstatement . fbody
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (38) assignment -> . assignment_base SEMICOLON
    (31) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (39) assignment_base -> . TIMES pointervar EQUALS expression
    (40) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 4 (fbody -> allstatement .)
    IF              shift and go to state 13
    TYPE            shift and go to state 22
    WHILE           shift and go to state 12
    TIMES           shift and go to state 11
    NAME            shift and go to state 16

    assignment_base                shift and go to state 9
    statement                      shift and go to state 10
    declaration                    shift and go to state 18
    fbody                          shift and go to state 31
    assignment                     shift and go to state 19
    ifblock                        shift and go to state 20
    allstatement                   shift and go to state 15
    unmatchedstatement             shift and go to state 21
    whileblock                     shift and go to state 17

state 16

    (40) assignment_base -> NAME . EQUALS expression

    EQUALS          shift and go to state 32


state 17

    (10) statement -> whileblock .

    IF              reduce using rule 10 (statement -> whileblock .)
    TYPE            reduce using rule 10 (statement -> whileblock .)
    WHILE           reduce using rule 10 (statement -> whileblock .)
    TIMES           reduce using rule 10 (statement -> whileblock .)
    NAME            reduce using rule 10 (statement -> whileblock .)
    RBRACE          reduce using rule 10 (statement -> whileblock .)
    ELSE            reduce using rule 10 (statement -> whileblock .)


state 18

    (9) statement -> declaration .

    IF              reduce using rule 9 (statement -> declaration .)
    TYPE            reduce using rule 9 (statement -> declaration .)
    WHILE           reduce using rule 9 (statement -> declaration .)
    TIMES           reduce using rule 9 (statement -> declaration .)
    NAME            reduce using rule 9 (statement -> declaration .)
    RBRACE          reduce using rule 9 (statement -> declaration .)
    ELSE            reduce using rule 9 (statement -> declaration .)


state 19

    (8) statement -> assignment .

    IF              reduce using rule 8 (statement -> assignment .)
    TYPE            reduce using rule 8 (statement -> assignment .)
    WHILE           reduce using rule 8 (statement -> assignment .)
    TIMES           reduce using rule 8 (statement -> assignment .)
    NAME            reduce using rule 8 (statement -> assignment .)
    RBRACE          reduce using rule 8 (statement -> assignment .)
    ELSE            reduce using rule 8 (statement -> assignment .)


state 20

    (11) statement -> ifblock .

    IF              reduce using rule 11 (statement -> ifblock .)
    TYPE            reduce using rule 11 (statement -> ifblock .)
    WHILE           reduce using rule 11 (statement -> ifblock .)
    TIMES           reduce using rule 11 (statement -> ifblock .)
    NAME            reduce using rule 11 (statement -> ifblock .)
    RBRACE          reduce using rule 11 (statement -> ifblock .)
    ELSE            reduce using rule 11 (statement -> ifblock .)


state 21

    (7) allstatement -> unmatchedstatement .

    IF              reduce using rule 7 (allstatement -> unmatchedstatement .)
    TYPE            reduce using rule 7 (allstatement -> unmatchedstatement .)
    WHILE           reduce using rule 7 (allstatement -> unmatchedstatement .)
    TIMES           reduce using rule 7 (allstatement -> unmatchedstatement .)
    NAME            reduce using rule 7 (allstatement -> unmatchedstatement .)
    RBRACE          reduce using rule 7 (allstatement -> unmatchedstatement .)


state 22

    (31) declaration -> TYPE . dlist1 SEMICOLON
    (32) dlist1 -> . NAME
    (33) dlist1 -> . NAME COMMA dlist1
    (34) dlist1 -> . specialvar
    (35) dlist1 -> . specialvar COMMA dlist1
    (36) specialvar -> . TIMES specialvar
    (37) specialvar -> . TIMES NAME

    NAME            shift and go to state 35
    TIMES           shift and go to state 33

    specialvar                     shift and go to state 34
    dlist1                         shift and go to state 36

state 23

    (38) assignment -> assignment_base SEMICOLON .

    IF              reduce using rule 38 (assignment -> assignment_base SEMICOLON .)
    TYPE            reduce using rule 38 (assignment -> assignment_base SEMICOLON .)
    WHILE           reduce using rule 38 (assignment -> assignment_base SEMICOLON .)
    TIMES           reduce using rule 38 (assignment -> assignment_base SEMICOLON .)
    NAME            reduce using rule 38 (assignment -> assignment_base SEMICOLON .)
    RBRACE          reduce using rule 38 (assignment -> assignment_base SEMICOLON .)
    ELSE            reduce using rule 38 (assignment -> assignment_base SEMICOLON .)


state 24

    (39) assignment_base -> TIMES pointervar . EQUALS expression

    EQUALS          shift and go to state 37


state 25

    (49) pointervar -> TIMES . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 38

state 26

    (50) pointervar -> ANDOPERATOR . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 39

state 27

    (51) pointervar -> NAME .

    PLUS            reduce using rule 51 (pointervar -> NAME .)
    MINUS           reduce using rule 51 (pointervar -> NAME .)
    DIVIDE          reduce using rule 51 (pointervar -> NAME .)
    TIMES           reduce using rule 51 (pointervar -> NAME .)
    RPAREN          reduce using rule 51 (pointervar -> NAME .)
    LESSTHANEQ      reduce using rule 51 (pointervar -> NAME .)
    GREATERTHANEQ   reduce using rule 51 (pointervar -> NAME .)
    UNEQUAL         reduce using rule 51 (pointervar -> NAME .)
    EQUALCHECK      reduce using rule 51 (pointervar -> NAME .)
    LESSTHAN        reduce using rule 51 (pointervar -> NAME .)
    GREATERTHAN     reduce using rule 51 (pointervar -> NAME .)
    ANDOPERATOR     reduce using rule 51 (pointervar -> NAME .)
    SEMICOLON       reduce using rule 51 (pointervar -> NAME .)
    EQUALS          reduce using rule 51 (pointervar -> NAME .)


state 28

    (20) whileblock -> WHILE LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) conditional -> . conditional ANDOPERATOR conditional
    (29) CS -> . expression
    (30) CS -> . NOT LPAREN expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    NOT             shift and go to state 44
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    conditional                    shift and go to state 42
    pointervar                     shift and go to state 46
    expression                     shift and go to state 40
    CS                             shift and go to state 47

state 29

    (12) unmatchedstatement -> IF LPAREN . conditional RPAREN allstatement
    (13) unmatchedstatement -> IF LPAREN . conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> IF LPAREN . conditional RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN . conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) conditional -> . conditional ANDOPERATOR conditional
    (29) CS -> . expression
    (30) CS -> . NOT LPAREN expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    NOT             shift and go to state 44
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 46
    conditional                    shift and go to state 48
    expression                     shift and go to state 40
    CS                             shift and go to state 47

state 30

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .

    TYPE            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)
    $end            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)


state 31

    (5) fbody -> allstatement fbody .

    RBRACE          reduce using rule 5 (fbody -> allstatement fbody .)


state 32

    (40) assignment_base -> NAME EQUALS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 46
    expression                     shift and go to state 49

state 33

    (36) specialvar -> TIMES . specialvar
    (37) specialvar -> TIMES . NAME
    (36) specialvar -> . TIMES specialvar
    (37) specialvar -> . TIMES NAME

    NAME            shift and go to state 50
    TIMES           shift and go to state 33

    specialvar                     shift and go to state 51

state 34

    (34) dlist1 -> specialvar .
    (35) dlist1 -> specialvar . COMMA dlist1

    SEMICOLON       reduce using rule 34 (dlist1 -> specialvar .)
    COMMA           shift and go to state 52


state 35

    (32) dlist1 -> NAME .
    (33) dlist1 -> NAME . COMMA dlist1

    SEMICOLON       reduce using rule 32 (dlist1 -> NAME .)
    COMMA           shift and go to state 53


state 36

    (31) declaration -> TYPE dlist1 . SEMICOLON

    SEMICOLON       shift and go to state 54


state 37

    (39) assignment_base -> TIMES pointervar EQUALS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 46
    expression                     shift and go to state 55

state 38

    (49) pointervar -> TIMES pointervar .

    PLUS            reduce using rule 49 (pointervar -> TIMES pointervar .)
    MINUS           reduce using rule 49 (pointervar -> TIMES pointervar .)
    DIVIDE          reduce using rule 49 (pointervar -> TIMES pointervar .)
    TIMES           reduce using rule 49 (pointervar -> TIMES pointervar .)
    RPAREN          reduce using rule 49 (pointervar -> TIMES pointervar .)
    LESSTHANEQ      reduce using rule 49 (pointervar -> TIMES pointervar .)
    GREATERTHANEQ   reduce using rule 49 (pointervar -> TIMES pointervar .)
    UNEQUAL         reduce using rule 49 (pointervar -> TIMES pointervar .)
    EQUALCHECK      reduce using rule 49 (pointervar -> TIMES pointervar .)
    LESSTHAN        reduce using rule 49 (pointervar -> TIMES pointervar .)
    GREATERTHAN     reduce using rule 49 (pointervar -> TIMES pointervar .)
    ANDOPERATOR     reduce using rule 49 (pointervar -> TIMES pointervar .)
    SEMICOLON       reduce using rule 49 (pointervar -> TIMES pointervar .)
    EQUALS          reduce using rule 49 (pointervar -> TIMES pointervar .)


state 39

    (50) pointervar -> ANDOPERATOR pointervar .

    PLUS            reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    MINUS           reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    DIVIDE          reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    TIMES           reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    RPAREN          reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    LESSTHANEQ      reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    GREATERTHANEQ   reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    UNEQUAL         reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    EQUALCHECK      reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    LESSTHAN        reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    GREATERTHAN     reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    ANDOPERATOR     reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    SEMICOLON       reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)
    EQUALS          reduce using rule 50 (pointervar -> ANDOPERATOR pointervar .)


state 40

    (29) CS -> expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . TIMES expression

    LESSTHANEQ      reduce using rule 29 (CS -> expression .)
    GREATERTHANEQ   reduce using rule 29 (CS -> expression .)
    UNEQUAL         reduce using rule 29 (CS -> expression .)
    EQUALCHECK      reduce using rule 29 (CS -> expression .)
    LESSTHAN        reduce using rule 29 (CS -> expression .)
    GREATERTHAN     reduce using rule 29 (CS -> expression .)
    ANDOPERATOR     reduce using rule 29 (CS -> expression .)
    RPAREN          reduce using rule 29 (CS -> expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 56


state 41

    (47) expression -> NUMBER .

    PLUS            reduce using rule 47 (expression -> NUMBER .)
    MINUS           reduce using rule 47 (expression -> NUMBER .)
    DIVIDE          reduce using rule 47 (expression -> NUMBER .)
    TIMES           reduce using rule 47 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 47 (expression -> NUMBER .)
    LESSTHANEQ      reduce using rule 47 (expression -> NUMBER .)
    GREATERTHANEQ   reduce using rule 47 (expression -> NUMBER .)
    UNEQUAL         reduce using rule 47 (expression -> NUMBER .)
    EQUALCHECK      reduce using rule 47 (expression -> NUMBER .)
    LESSTHAN        reduce using rule 47 (expression -> NUMBER .)
    GREATERTHAN     reduce using rule 47 (expression -> NUMBER .)
    ANDOPERATOR     reduce using rule 47 (expression -> NUMBER .)
    RPAREN          reduce using rule 47 (expression -> NUMBER .)


state 42

    (20) whileblock -> WHILE LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional
    (28) conditional -> conditional . ANDOPERATOR conditional

    RPAREN          shift and go to state 62
    LESSTHANEQ      shift and go to state 63
    GREATERTHANEQ   shift and go to state 65
    UNEQUAL         shift and go to state 66
    EQUALCHECK      shift and go to state 64
    LESSTHAN        shift and go to state 67
    GREATERTHAN     shift and go to state 60
    ANDOPERATOR     shift and go to state 61


state 43

    (45) expression -> MINUS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 46
    expression                     shift and go to state 68

state 44

    (30) CS -> NOT . LPAREN expression RPAREN

    LPAREN          shift and go to state 69


state 45

    (46) expression -> LPAREN . expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 46
    expression                     shift and go to state 70

state 46

    (48) expression -> pointervar .

    PLUS            reduce using rule 48 (expression -> pointervar .)
    MINUS           reduce using rule 48 (expression -> pointervar .)
    DIVIDE          reduce using rule 48 (expression -> pointervar .)
    TIMES           reduce using rule 48 (expression -> pointervar .)
    SEMICOLON       reduce using rule 48 (expression -> pointervar .)
    LESSTHANEQ      reduce using rule 48 (expression -> pointervar .)
    GREATERTHANEQ   reduce using rule 48 (expression -> pointervar .)
    UNEQUAL         reduce using rule 48 (expression -> pointervar .)
    EQUALCHECK      reduce using rule 48 (expression -> pointervar .)
    LESSTHAN        reduce using rule 48 (expression -> pointervar .)
    GREATERTHAN     reduce using rule 48 (expression -> pointervar .)
    ANDOPERATOR     reduce using rule 48 (expression -> pointervar .)
    RPAREN          reduce using rule 48 (expression -> pointervar .)


state 47

    (21) conditional -> CS .

    LESSTHANEQ      reduce using rule 21 (conditional -> CS .)
    GREATERTHANEQ   reduce using rule 21 (conditional -> CS .)
    UNEQUAL         reduce using rule 21 (conditional -> CS .)
    EQUALCHECK      reduce using rule 21 (conditional -> CS .)
    LESSTHAN        reduce using rule 21 (conditional -> CS .)
    GREATERTHAN     reduce using rule 21 (conditional -> CS .)
    ANDOPERATOR     reduce using rule 21 (conditional -> CS .)
    RPAREN          reduce using rule 21 (conditional -> CS .)


state 48

    (12) unmatchedstatement -> IF LPAREN conditional . RPAREN allstatement
    (13) unmatchedstatement -> IF LPAREN conditional . RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (16) ifblock -> IF LPAREN conditional . RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN conditional . RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE statement
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional
    (28) conditional -> conditional . ANDOPERATOR conditional

    RPAREN          shift and go to state 71
    LESSTHANEQ      shift and go to state 63
    GREATERTHANEQ   shift and go to state 65
    UNEQUAL         shift and go to state 66
    EQUALCHECK      shift and go to state 64
    LESSTHAN        shift and go to state 67
    GREATERTHAN     shift and go to state 60
    ANDOPERATOR     shift and go to state 61


state 49

    (40) assignment_base -> NAME EQUALS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 40 (assignment_base -> NAME EQUALS expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 56


state 50

    (37) specialvar -> TIMES NAME .

    COMMA           reduce using rule 37 (specialvar -> TIMES NAME .)
    SEMICOLON       reduce using rule 37 (specialvar -> TIMES NAME .)


state 51

    (36) specialvar -> TIMES specialvar .

    COMMA           reduce using rule 36 (specialvar -> TIMES specialvar .)
    SEMICOLON       reduce using rule 36 (specialvar -> TIMES specialvar .)


state 52

    (35) dlist1 -> specialvar COMMA . dlist1
    (32) dlist1 -> . NAME
    (33) dlist1 -> . NAME COMMA dlist1
    (34) dlist1 -> . specialvar
    (35) dlist1 -> . specialvar COMMA dlist1
    (36) specialvar -> . TIMES specialvar
    (37) specialvar -> . TIMES NAME

    NAME            shift and go to state 35
    TIMES           shift and go to state 33

    specialvar                     shift and go to state 34
    dlist1                         shift and go to state 72

state 53

    (33) dlist1 -> NAME COMMA . dlist1
    (32) dlist1 -> . NAME
    (33) dlist1 -> . NAME COMMA dlist1
    (34) dlist1 -> . specialvar
    (35) dlist1 -> . specialvar COMMA dlist1
    (36) specialvar -> . TIMES specialvar
    (37) specialvar -> . TIMES NAME

    NAME            shift and go to state 35
    TIMES           shift and go to state 33

    specialvar                     shift and go to state 34
    dlist1                         shift and go to state 73

state 54

    (31) declaration -> TYPE dlist1 SEMICOLON .

    IF              reduce using rule 31 (declaration -> TYPE dlist1 SEMICOLON .)
    TYPE            reduce using rule 31 (declaration -> TYPE dlist1 SEMICOLON .)
    WHILE           reduce using rule 31 (declaration -> TYPE dlist1 SEMICOLON .)
    TIMES           reduce using rule 31 (declaration -> TYPE dlist1 SEMICOLON .)
    NAME            reduce using rule 31 (declaration -> TYPE dlist1 SEMICOLON .)
    RBRACE          reduce using rule 31 (declaration -> TYPE dlist1 SEMICOLON .)
    ELSE            reduce using rule 31 (declaration -> TYPE dlist1 SEMICOLON .)


state 55

    (39) assignment_base -> TIMES pointervar EQUALS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 39 (assignment_base -> TIMES pointervar EQUALS expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 56


state 56

    (44) expression -> expression TIMES . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 46
    expression                     shift and go to state 74

state 57

    (42) expression -> expression MINUS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 46
    expression                     shift and go to state 75

state 58

    (41) expression -> expression PLUS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 46
    expression                     shift and go to state 76

state 59

    (43) expression -> expression DIVIDE . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 46
    expression                     shift and go to state 77

state 60

    (27) conditional -> conditional GREATERTHAN . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) conditional -> . conditional ANDOPERATOR conditional
    (29) CS -> . expression
    (30) CS -> . NOT LPAREN expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    NOT             shift and go to state 44
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    conditional                    shift and go to state 78
    pointervar                     shift and go to state 46
    CS                             shift and go to state 47
    expression                     shift and go to state 40

state 61

    (28) conditional -> conditional ANDOPERATOR . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) conditional -> . conditional ANDOPERATOR conditional
    (29) CS -> . expression
    (30) CS -> . NOT LPAREN expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    NOT             shift and go to state 44
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    conditional                    shift and go to state 79
    pointervar                     shift and go to state 46
    CS                             shift and go to state 47
    expression                     shift and go to state 40

state 62

    (20) whileblock -> WHILE LPAREN conditional RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 80


state 63

    (22) conditional -> conditional LESSTHANEQ . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) conditional -> . conditional ANDOPERATOR conditional
    (29) CS -> . expression
    (30) CS -> . NOT LPAREN expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    NOT             shift and go to state 44
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    conditional                    shift and go to state 81
    pointervar                     shift and go to state 46
    CS                             shift and go to state 47
    expression                     shift and go to state 40

state 64

    (25) conditional -> conditional EQUALCHECK . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) conditional -> . conditional ANDOPERATOR conditional
    (29) CS -> . expression
    (30) CS -> . NOT LPAREN expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    NOT             shift and go to state 44
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    conditional                    shift and go to state 82
    pointervar                     shift and go to state 46
    CS                             shift and go to state 47
    expression                     shift and go to state 40

state 65

    (23) conditional -> conditional GREATERTHANEQ . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) conditional -> . conditional ANDOPERATOR conditional
    (29) CS -> . expression
    (30) CS -> . NOT LPAREN expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    NOT             shift and go to state 44
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    conditional                    shift and go to state 83
    pointervar                     shift and go to state 46
    CS                             shift and go to state 47
    expression                     shift and go to state 40

state 66

    (24) conditional -> conditional UNEQUAL . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) conditional -> . conditional ANDOPERATOR conditional
    (29) CS -> . expression
    (30) CS -> . NOT LPAREN expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    NOT             shift and go to state 44
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    conditional                    shift and go to state 84
    pointervar                     shift and go to state 46
    CS                             shift and go to state 47
    expression                     shift and go to state 40

state 67

    (26) conditional -> conditional LESSTHAN . conditional
    (21) conditional -> . CS
    (22) conditional -> . conditional LESSTHANEQ conditional
    (23) conditional -> . conditional GREATERTHANEQ conditional
    (24) conditional -> . conditional UNEQUAL conditional
    (25) conditional -> . conditional EQUALCHECK conditional
    (26) conditional -> . conditional LESSTHAN conditional
    (27) conditional -> . conditional GREATERTHAN conditional
    (28) conditional -> . conditional ANDOPERATOR conditional
    (29) CS -> . expression
    (30) CS -> . NOT LPAREN expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    NOT             shift and go to state 44
    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    conditional                    shift and go to state 85
    pointervar                     shift and go to state 46
    CS                             shift and go to state 47
    expression                     shift and go to state 40

state 68

    (45) expression -> MINUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . TIMES expression

    PLUS            reduce using rule 45 (expression -> MINUS expression .)
    MINUS           reduce using rule 45 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 45 (expression -> MINUS expression .)
    TIMES           reduce using rule 45 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 45 (expression -> MINUS expression .)
    LESSTHANEQ      reduce using rule 45 (expression -> MINUS expression .)
    GREATERTHANEQ   reduce using rule 45 (expression -> MINUS expression .)
    UNEQUAL         reduce using rule 45 (expression -> MINUS expression .)
    EQUALCHECK      reduce using rule 45 (expression -> MINUS expression .)
    LESSTHAN        reduce using rule 45 (expression -> MINUS expression .)
    GREATERTHAN     reduce using rule 45 (expression -> MINUS expression .)
    ANDOPERATOR     reduce using rule 45 (expression -> MINUS expression .)
    RPAREN          reduce using rule 45 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 58 ]
  ! MINUS           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 59 ]
  ! TIMES           [ shift and go to state 56 ]


state 69

    (30) CS -> NOT LPAREN . expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression DIVIDE expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . NUMBER
    (48) expression -> . pointervar
    (49) pointervar -> . TIMES pointervar
    (50) pointervar -> . ANDOPERATOR pointervar
    (51) pointervar -> . NAME

    MINUS           shift and go to state 43
    LPAREN          shift and go to state 45
    NUMBER          shift and go to state 41
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 26
    NAME            shift and go to state 27

    pointervar                     shift and go to state 46
    expression                     shift and go to state 86

state 70

    (46) expression -> LPAREN expression . RPAREN
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . TIMES expression

    RPAREN          shift and go to state 87
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 56


state 71

    (12) unmatchedstatement -> IF LPAREN conditional RPAREN . allstatement
    (13) unmatchedstatement -> IF LPAREN conditional RPAREN . statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE
    (16) ifblock -> IF LPAREN conditional RPAREN . statement ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN . statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE statement
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (38) assignment -> . assignment_base SEMICOLON
    (31) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (39) assignment_base -> . TIMES pointervar EQUALS expression
    (40) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 90
    IF              shift and go to state 13
    TYPE            shift and go to state 22
    WHILE           shift and go to state 12
    TIMES           shift and go to state 11
    NAME            shift and go to state 16

    assignment_base                shift and go to state 9
    statement                      shift and go to state 88
    declaration                    shift and go to state 18
    assignment                     shift and go to state 19
    ifblock                        shift and go to state 20
    allstatement                   shift and go to state 89
    unmatchedstatement             shift and go to state 21
    whileblock                     shift and go to state 17

state 72

    (35) dlist1 -> specialvar COMMA dlist1 .

    SEMICOLON       reduce using rule 35 (dlist1 -> specialvar COMMA dlist1 .)


state 73

    (33) dlist1 -> NAME COMMA dlist1 .

    SEMICOLON       reduce using rule 33 (dlist1 -> NAME COMMA dlist1 .)


state 74

    (44) expression -> expression TIMES expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . TIMES expression

    PLUS            reduce using rule 44 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 44 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 44 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 44 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression TIMES expression .)
    LESSTHANEQ      reduce using rule 44 (expression -> expression TIMES expression .)
    GREATERTHANEQ   reduce using rule 44 (expression -> expression TIMES expression .)
    UNEQUAL         reduce using rule 44 (expression -> expression TIMES expression .)
    EQUALCHECK      reduce using rule 44 (expression -> expression TIMES expression .)
    LESSTHAN        reduce using rule 44 (expression -> expression TIMES expression .)
    GREATERTHAN     reduce using rule 44 (expression -> expression TIMES expression .)
    ANDOPERATOR     reduce using rule 44 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 44 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 58 ]
  ! MINUS           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 59 ]
  ! TIMES           [ shift and go to state 56 ]


state 75

    (42) expression -> expression MINUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . TIMES expression

    PLUS            reduce using rule 42 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 42 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression MINUS expression .)
    LESSTHANEQ      reduce using rule 42 (expression -> expression MINUS expression .)
    GREATERTHANEQ   reduce using rule 42 (expression -> expression MINUS expression .)
    UNEQUAL         reduce using rule 42 (expression -> expression MINUS expression .)
    EQUALCHECK      reduce using rule 42 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 42 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 42 (expression -> expression MINUS expression .)
    ANDOPERATOR     reduce using rule 42 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 42 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 56

  ! DIVIDE          [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 58 ]
  ! MINUS           [ shift and go to state 57 ]


state 76

    (41) expression -> expression PLUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . TIMES expression

    PLUS            reduce using rule 41 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 41 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression PLUS expression .)
    LESSTHANEQ      reduce using rule 41 (expression -> expression PLUS expression .)
    GREATERTHANEQ   reduce using rule 41 (expression -> expression PLUS expression .)
    UNEQUAL         reduce using rule 41 (expression -> expression PLUS expression .)
    EQUALCHECK      reduce using rule 41 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 41 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 41 (expression -> expression PLUS expression .)
    ANDOPERATOR     reduce using rule 41 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 41 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 56

  ! DIVIDE          [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 58 ]
  ! MINUS           [ shift and go to state 57 ]


state 77

    (43) expression -> expression DIVIDE expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . TIMES expression

    PLUS            reduce using rule 43 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 43 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 43 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 43 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression DIVIDE expression .)
    LESSTHANEQ      reduce using rule 43 (expression -> expression DIVIDE expression .)
    GREATERTHANEQ   reduce using rule 43 (expression -> expression DIVIDE expression .)
    UNEQUAL         reduce using rule 43 (expression -> expression DIVIDE expression .)
    EQUALCHECK      reduce using rule 43 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 43 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 43 (expression -> expression DIVIDE expression .)
    ANDOPERATOR     reduce using rule 43 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 43 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 58 ]
  ! MINUS           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 59 ]
  ! TIMES           [ shift and go to state 56 ]


state 78

    (27) conditional -> conditional GREATERTHAN conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional
    (28) conditional -> conditional . ANDOPERATOR conditional

    LESSTHANEQ      reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHANEQ   reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    UNEQUAL         reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    EQUALCHECK      reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    LESSTHAN        reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHAN     reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    ANDOPERATOR     reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)
    RPAREN          reduce using rule 27 (conditional -> conditional GREATERTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 63 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 64 ]
  ! LESSTHAN        [ shift and go to state 67 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! ANDOPERATOR     [ shift and go to state 61 ]


state 79

    (28) conditional -> conditional ANDOPERATOR conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional
    (28) conditional -> conditional . ANDOPERATOR conditional

    ANDOPERATOR     reduce using rule 28 (conditional -> conditional ANDOPERATOR conditional .)
    RPAREN          reduce using rule 28 (conditional -> conditional ANDOPERATOR conditional .)
    LESSTHANEQ      shift and go to state 63
    GREATERTHANEQ   shift and go to state 65
    UNEQUAL         shift and go to state 66
    EQUALCHECK      shift and go to state 64
    LESSTHAN        shift and go to state 67
    GREATERTHAN     shift and go to state 60

  ! LESSTHANEQ      [ reduce using rule 28 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 28 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! UNEQUAL         [ reduce using rule 28 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! EQUALCHECK      [ reduce using rule 28 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! LESSTHAN        [ reduce using rule 28 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! GREATERTHAN     [ reduce using rule 28 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! ANDOPERATOR     [ shift and go to state 61 ]


state 80

    (20) whileblock -> WHILE LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (38) assignment -> . assignment_base SEMICOLON
    (31) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (39) assignment_base -> . TIMES pointervar EQUALS expression
    (40) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 13
    TYPE            shift and go to state 22
    WHILE           shift and go to state 12
    TIMES           shift and go to state 11
    NAME            shift and go to state 16

    assignment_base                shift and go to state 9
    statement                      shift and go to state 10
    declaration                    shift and go to state 18
    fbody                          shift and go to state 91
    assignment                     shift and go to state 19
    ifblock                        shift and go to state 20
    allstatement                   shift and go to state 15
    unmatchedstatement             shift and go to state 21
    whileblock                     shift and go to state 17

state 81

    (22) conditional -> conditional LESSTHANEQ conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional
    (28) conditional -> conditional . ANDOPERATOR conditional

    LESSTHANEQ      reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    UNEQUAL         reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    EQUALCHECK      reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    LESSTHAN        reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHAN     reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    ANDOPERATOR     reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)
    RPAREN          reduce using rule 22 (conditional -> conditional LESSTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 63 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 64 ]
  ! LESSTHAN        [ shift and go to state 67 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! ANDOPERATOR     [ shift and go to state 61 ]


state 82

    (25) conditional -> conditional EQUALCHECK conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional
    (28) conditional -> conditional . ANDOPERATOR conditional

    UNEQUAL         reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .)
    EQUALCHECK      reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .)
    ANDOPERATOR     reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .)
    RPAREN          reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .)
    LESSTHANEQ      shift and go to state 63
    GREATERTHANEQ   shift and go to state 65
    LESSTHAN        shift and go to state 67
    GREATERTHAN     shift and go to state 60

  ! LESSTHANEQ      [ reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .) ]
  ! LESSTHAN        [ reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHAN     [ reduce using rule 25 (conditional -> conditional EQUALCHECK conditional .) ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 64 ]
  ! ANDOPERATOR     [ shift and go to state 61 ]


state 83

    (23) conditional -> conditional GREATERTHANEQ conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional
    (28) conditional -> conditional . ANDOPERATOR conditional

    LESSTHANEQ      reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    UNEQUAL         reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    EQUALCHECK      reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    LESSTHAN        reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHAN     reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    ANDOPERATOR     reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)
    RPAREN          reduce using rule 23 (conditional -> conditional GREATERTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 63 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 64 ]
  ! LESSTHAN        [ shift and go to state 67 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! ANDOPERATOR     [ shift and go to state 61 ]


state 84

    (24) conditional -> conditional UNEQUAL conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional
    (28) conditional -> conditional . ANDOPERATOR conditional

    UNEQUAL         reduce using rule 24 (conditional -> conditional UNEQUAL conditional .)
    EQUALCHECK      reduce using rule 24 (conditional -> conditional UNEQUAL conditional .)
    ANDOPERATOR     reduce using rule 24 (conditional -> conditional UNEQUAL conditional .)
    RPAREN          reduce using rule 24 (conditional -> conditional UNEQUAL conditional .)
    LESSTHANEQ      shift and go to state 63
    GREATERTHANEQ   shift and go to state 65
    LESSTHAN        shift and go to state 67
    GREATERTHAN     shift and go to state 60

  ! LESSTHANEQ      [ reduce using rule 24 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 24 (conditional -> conditional UNEQUAL conditional .) ]
  ! LESSTHAN        [ reduce using rule 24 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHAN     [ reduce using rule 24 (conditional -> conditional UNEQUAL conditional .) ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 64 ]
  ! ANDOPERATOR     [ shift and go to state 61 ]


state 85

    (26) conditional -> conditional LESSTHAN conditional .
    (22) conditional -> conditional . LESSTHANEQ conditional
    (23) conditional -> conditional . GREATERTHANEQ conditional
    (24) conditional -> conditional . UNEQUAL conditional
    (25) conditional -> conditional . EQUALCHECK conditional
    (26) conditional -> conditional . LESSTHAN conditional
    (27) conditional -> conditional . GREATERTHAN conditional
    (28) conditional -> conditional . ANDOPERATOR conditional

    LESSTHANEQ      reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHANEQ   reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    UNEQUAL         reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    EQUALCHECK      reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    LESSTHAN        reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHAN     reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    ANDOPERATOR     reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)
    RPAREN          reduce using rule 26 (conditional -> conditional LESSTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 63 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 66 ]
  ! EQUALCHECK      [ shift and go to state 64 ]
  ! LESSTHAN        [ shift and go to state 67 ]
  ! GREATERTHAN     [ shift and go to state 60 ]
  ! ANDOPERATOR     [ shift and go to state 61 ]


state 86

    (30) CS -> NOT LPAREN expression . RPAREN
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . DIVIDE expression
    (44) expression -> expression . TIMES expression

    RPAREN          shift and go to state 92
    PLUS            shift and go to state 58
    MINUS           shift and go to state 57
    DIVIDE          shift and go to state 59
    TIMES           shift and go to state 56


state 87

    (46) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LESSTHANEQ      reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    ANDOPERATOR     reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 46 (expression -> LPAREN expression RPAREN .)


state 88

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement . ELSE unmatchedstatement
    (16) ifblock -> IF LPAREN conditional RPAREN statement . ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN statement . ELSE LBRACE fbody RBRACE
    (6) allstatement -> statement .

    ELSE            shift and go to state 93
    IF              reduce using rule 6 (allstatement -> statement .)
    TYPE            reduce using rule 6 (allstatement -> statement .)
    WHILE           reduce using rule 6 (allstatement -> statement .)
    TIMES           reduce using rule 6 (allstatement -> statement .)
    NAME            reduce using rule 6 (allstatement -> statement .)
    RBRACE          reduce using rule 6 (allstatement -> statement .)


state 89

    (12) unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .

    IF              reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TYPE            reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    WHILE           reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TIMES           reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    NAME            reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    RBRACE          reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)


state 90

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE statement
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (38) assignment -> . assignment_base SEMICOLON
    (31) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (39) assignment_base -> . TIMES pointervar EQUALS expression
    (40) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 13
    TYPE            shift and go to state 22
    WHILE           shift and go to state 12
    TIMES           shift and go to state 11
    NAME            shift and go to state 16

    assignment_base                shift and go to state 9
    statement                      shift and go to state 10
    declaration                    shift and go to state 18
    fbody                          shift and go to state 94
    assignment                     shift and go to state 19
    ifblock                        shift and go to state 20
    allstatement                   shift and go to state 15
    unmatchedstatement             shift and go to state 21
    whileblock                     shift and go to state 17

state 91

    (20) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 95


state 92

    (30) CS -> NOT LPAREN expression RPAREN .

    LESSTHANEQ      reduce using rule 30 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 30 (CS -> NOT LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 30 (CS -> NOT LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 30 (CS -> NOT LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 30 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 30 (CS -> NOT LPAREN expression RPAREN .)
    ANDOPERATOR     reduce using rule 30 (CS -> NOT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 30 (CS -> NOT LPAREN expression RPAREN .)


state 93

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE . unmatchedstatement
    (16) ifblock -> IF LPAREN conditional RPAREN statement ELSE . statement
    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE . LBRACE fbody RBRACE
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (38) assignment -> . assignment_base SEMICOLON
    (31) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (39) assignment_base -> . TIMES pointervar EQUALS expression
    (40) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 97
    IF              shift and go to state 13
    TYPE            shift and go to state 22
    WHILE           shift and go to state 12
    TIMES           shift and go to state 11
    NAME            shift and go to state 16

    assignment_base                shift and go to state 9
    statement                      shift and go to state 96
    declaration                    shift and go to state 18
    assignment                     shift and go to state 19
    ifblock                        shift and go to state 20
    unmatchedstatement             shift and go to state 98
    whileblock                     shift and go to state 17

state 94

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE statement

    RBRACE          shift and go to state 99


state 95

    (20) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .

    IF              reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    ELSE            reduce using rule 20 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 96

    (16) ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .

    IF              reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TYPE            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    WHILE           reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TIMES           reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    NAME            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    ELSE            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)


state 97

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (38) assignment -> . assignment_base SEMICOLON
    (31) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (39) assignment_base -> . TIMES pointervar EQUALS expression
    (40) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 13
    TYPE            shift and go to state 22
    WHILE           shift and go to state 12
    TIMES           shift and go to state 11
    NAME            shift and go to state 16

    assignment_base                shift and go to state 9
    statement                      shift and go to state 10
    declaration                    shift and go to state 18
    fbody                          shift and go to state 100
    assignment                     shift and go to state 19
    ifblock                        shift and go to state 20
    allstatement                   shift and go to state 15
    unmatchedstatement             shift and go to state 21
    whileblock                     shift and go to state 17

state 98

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .

    IF              reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TYPE            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    WHILE           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TIMES           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    NAME            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    RBRACE          reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)


state 99

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE statement

    ELSE            shift and go to state 101
    IF              reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 100

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 102


state 101

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . unmatchedstatement
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . statement
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (38) assignment -> . assignment_base SEMICOLON
    (31) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (39) assignment_base -> . TIMES pointervar EQUALS expression
    (40) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 104
    IF              shift and go to state 13
    TYPE            shift and go to state 22
    WHILE           shift and go to state 12
    TIMES           shift and go to state 11
    NAME            shift and go to state 16

    assignment_base                shift and go to state 9
    statement                      shift and go to state 103
    declaration                    shift and go to state 18
    assignment                     shift and go to state 19
    ifblock                        shift and go to state 20
    unmatchedstatement             shift and go to state 105
    whileblock                     shift and go to state 17

state 102

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .

    IF              reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    ELSE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)


state 103

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .

    IF              reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TYPE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    WHILE           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TIMES           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    NAME            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    RBRACE          reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    ELSE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)


state 104

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (38) assignment -> . assignment_base SEMICOLON
    (31) declaration -> . TYPE dlist1 SEMICOLON
    (20) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (39) assignment_base -> . TIMES pointervar EQUALS expression
    (40) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 13
    TYPE            shift and go to state 22
    WHILE           shift and go to state 12
    TIMES           shift and go to state 11
    NAME            shift and go to state 16

    assignment_base                shift and go to state 9
    statement                      shift and go to state 10
    declaration                    shift and go to state 18
    fbody                          shift and go to state 106
    assignment                     shift and go to state 19
    ifblock                        shift and go to state 20
    allstatement                   shift and go to state 15
    unmatchedstatement             shift and go to state 21
    whileblock                     shift and go to state 17

state 105

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .

    IF              reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TYPE            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    WHILE           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TIMES           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    NAME            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    RBRACE          reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)


state 106

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 107


state 107

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .

    IF              reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    ELSE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)

