Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     program -> function program
Rule 3     function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE
Rule 4     fbody -> allstatement
Rule 5     fbody -> allstatement fbody
Rule 6     fbody -> <empty>
Rule 7     allstatement -> statement
Rule 8     allstatement -> unmatchedstatement
Rule 9     statement -> assignment
Rule 10    statement -> declaration
Rule 11    statement -> whileblock
Rule 12    statement -> ifblock
Rule 13    unmatchedstatement -> IF LPAREN conditional RPAREN allstatement
Rule 14    unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
Rule 15    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
Rule 16    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 17    ifblock -> IF LPAREN conditional RPAREN statement ELSE statement
Rule 18    ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
Rule 19    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
Rule 20    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
Rule 21    whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 22    conditional -> conditionbase
Rule 23    conditional -> conditional LESSTHANEQ conditional
Rule 24    conditional -> conditional GREATERTHANEQ conditional
Rule 25    conditional -> conditional UNEQUAL conditional
Rule 26    conditional -> conditional EQUALCHECK conditional
Rule 27    conditional -> conditional LESSTHAN conditional
Rule 28    conditional -> conditional GREATERTHAN conditional
Rule 29    conditional -> conditional ANDOPERATOR conditional
Rule 30    conditional -> conditional OROPERATOR conditional
Rule 31    conditionbase -> CS LESSTHANEQ CS
Rule 32    conditionbase -> CS GREATERTHANEQ CS
Rule 33    conditionbase -> CS UNEQUAL CS
Rule 34    conditionbase -> CS EQUALCHECK CS
Rule 35    conditionbase -> CS LESSTHAN CS
Rule 36    conditionbase -> CS GREATERTHAN CS
Rule 37    CS -> expression
Rule 38    CS -> NOT LPAREN expression RPAREN
Rule 39    declaration -> TYPE dlist1 SEMICOLON
Rule 40    dlist1 -> NAME
Rule 41    dlist1 -> NAME COMMA dlist1
Rule 42    dlist1 -> specialvar
Rule 43    dlist1 -> specialvar COMMA dlist1
Rule 44    specialvar -> TIMES specialvar
Rule 45    specialvar -> TIMES NAME
Rule 46    assignment -> assignment_base SEMICOLON
Rule 47    assignment_base -> TIMES pointervar EQUALS expression
Rule 48    assignment_base -> NAME EQUALS expression
Rule 49    expression -> expression PLUS expression
Rule 50    expression -> expression MINUS expression
Rule 51    expression -> expression DIVIDE expression
Rule 52    expression -> expression TIMES expression
Rule 53    expression -> MINUS expression
Rule 54    expression -> LPAREN expression RPAREN
Rule 55    expression -> NUMBER
Rule 56    expression -> pointervar
Rule 57    pointervar -> TIMES pointervar
Rule 58    pointervar -> ADDROF pointervar
Rule 59    pointervar -> NAME

Terminals, with rules where they appear

ADDROF               : 58
ANDOPERATOR          : 29
COMMA                : 41 43
DIVIDE               : 51
ELSE                 : 14 15 17 18 19 20
EQUALCHECK           : 26 34
EQUALS               : 47 48
GREATERTHAN          : 28 36
GREATERTHANEQ        : 24 32
IF                   : 13 14 15 16 17 18 19 20
LBRACE               : 3 15 16 18 19 19 20 21
LESSTHAN             : 27 35
LESSTHANEQ           : 23 31
LPAREN               : 3 13 14 15 16 17 18 19 20 21 38 54
MINUS                : 50 53
NAME                 : 3 40 41 45 48 59
NOT                  : 38
NUMBER               : 55
OROPERATOR           : 30
PLUS                 : 49
RBRACE               : 3 15 16 18 19 19 20 21
RPAREN               : 3 13 14 15 16 17 18 19 20 21 38 54
SEMICOLON            : 39 46
TIMES                : 44 45 47 52 57
TYPE                 : 3 39
UNEQUAL              : 25 33
WHILE                : 21
error                : 

Nonterminals, with rules where they appear

CS                   : 31 31 32 32 33 33 34 34 35 35 36 36
allstatement         : 4 5 13
assignment           : 9
assignment_base      : 46
conditional          : 13 14 15 16 17 18 19 20 21 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30
conditionbase        : 22
declaration          : 10
dlist1               : 39 41 43
expression           : 37 38 47 48 49 49 50 50 51 51 52 52 53 54
fbody                : 3 5 15 16 18 19 19 20 21
function             : 1 2
ifblock              : 12
pointervar           : 47 56 57 58
program              : 2 0
specialvar           : 42 43 44
statement            : 7 14 17 17 18 20
unmatchedstatement   : 8 14 15
whileblock           : 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    TYPE            shift and go to state 1

    program                        shift and go to state 2
    function                       shift and go to state 3

state 1

    (3) function -> TYPE . NAME LPAREN RPAREN LBRACE fbody RBRACE

    NAME            shift and go to state 4


state 2

    (0) S' -> program .



state 3

    (1) program -> function .
    (2) program -> function . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    $end            reduce using rule 1 (program -> function .)
    TYPE            shift and go to state 1

    program                        shift and go to state 5
    function                       shift and go to state 3

state 4

    (3) function -> TYPE NAME . LPAREN RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 6


state 5

    (2) program -> function program .

    $end            reduce using rule 2 (program -> function program .)


state 6

    (3) function -> TYPE NAME LPAREN . RPAREN LBRACE fbody RBRACE

    RPAREN          shift and go to state 7


state 7

    (3) function -> TYPE NAME LPAREN RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 8


state 8

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) fbody -> .
    (7) allstatement -> . statement
    (8) allstatement -> . unmatchedstatement
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . whileblock
    (12) statement -> . ifblock
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (46) assignment -> . assignment_base SEMICOLON
    (39) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (47) assignment_base -> . TIMES pointervar EQUALS expression
    (48) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 6 (fbody -> .)
    IF              shift and go to state 13
    TYPE            shift and go to state 10
    WHILE           shift and go to state 11
    TIMES           shift and go to state 18
    NAME            shift and go to state 17

    statement                      shift and go to state 15
    allstatement                   shift and go to state 9
    fbody                          shift and go to state 16
    whileblock                     shift and go to state 19
    ifblock                        shift and go to state 12
    declaration                    shift and go to state 20
    assignment                     shift and go to state 14
    assignment_base                shift and go to state 21
    unmatchedstatement             shift and go to state 22

state 9

    (4) fbody -> allstatement .
    (5) fbody -> allstatement . fbody
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) fbody -> .
    (7) allstatement -> . statement
    (8) allstatement -> . unmatchedstatement
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . whileblock
    (12) statement -> . ifblock
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (46) assignment -> . assignment_base SEMICOLON
    (39) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (47) assignment_base -> . TIMES pointervar EQUALS expression
    (48) assignment_base -> . NAME EQUALS expression

  ! reduce/reduce conflict for RBRACE resolved using rule 4 (fbody -> allstatement .)
    RBRACE          reduce using rule 4 (fbody -> allstatement .)
    IF              shift and go to state 13
    TYPE            shift and go to state 10
    WHILE           shift and go to state 11
    TIMES           shift and go to state 18
    NAME            shift and go to state 17

  ! RBRACE          [ reduce using rule 6 (fbody -> .) ]

    statement                      shift and go to state 15
    allstatement                   shift and go to state 9
    fbody                          shift and go to state 23
    whileblock                     shift and go to state 19
    ifblock                        shift and go to state 12
    declaration                    shift and go to state 20
    assignment                     shift and go to state 14
    assignment_base                shift and go to state 21
    unmatchedstatement             shift and go to state 22

state 10

    (39) declaration -> TYPE . dlist1 SEMICOLON
    (40) dlist1 -> . NAME
    (41) dlist1 -> . NAME COMMA dlist1
    (42) dlist1 -> . specialvar
    (43) dlist1 -> . specialvar COMMA dlist1
    (44) specialvar -> . TIMES specialvar
    (45) specialvar -> . TIMES NAME

    NAME            shift and go to state 27
    TIMES           shift and go to state 26

    dlist1                         shift and go to state 25
    specialvar                     shift and go to state 24

state 11

    (21) whileblock -> WHILE . LPAREN conditional RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 28


state 12

    (12) statement -> ifblock .

    IF              reduce using rule 12 (statement -> ifblock .)
    TYPE            reduce using rule 12 (statement -> ifblock .)
    WHILE           reduce using rule 12 (statement -> ifblock .)
    TIMES           reduce using rule 12 (statement -> ifblock .)
    NAME            reduce using rule 12 (statement -> ifblock .)
    RBRACE          reduce using rule 12 (statement -> ifblock .)
    ELSE            reduce using rule 12 (statement -> ifblock .)


state 13

    (13) unmatchedstatement -> IF . LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> IF . LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> IF . LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> IF . LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement

    LPAREN          shift and go to state 29


state 14

    (9) statement -> assignment .

    IF              reduce using rule 9 (statement -> assignment .)
    TYPE            reduce using rule 9 (statement -> assignment .)
    WHILE           reduce using rule 9 (statement -> assignment .)
    TIMES           reduce using rule 9 (statement -> assignment .)
    NAME            reduce using rule 9 (statement -> assignment .)
    RBRACE          reduce using rule 9 (statement -> assignment .)
    ELSE            reduce using rule 9 (statement -> assignment .)


state 15

    (7) allstatement -> statement .

    IF              reduce using rule 7 (allstatement -> statement .)
    TYPE            reduce using rule 7 (allstatement -> statement .)
    WHILE           reduce using rule 7 (allstatement -> statement .)
    TIMES           reduce using rule 7 (allstatement -> statement .)
    NAME            reduce using rule 7 (allstatement -> statement .)
    RBRACE          reduce using rule 7 (allstatement -> statement .)


state 16

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 30


state 17

    (48) assignment_base -> NAME . EQUALS expression

    EQUALS          shift and go to state 31


state 18

    (47) assignment_base -> TIMES . pointervar EQUALS expression
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 32

state 19

    (11) statement -> whileblock .

    IF              reduce using rule 11 (statement -> whileblock .)
    TYPE            reduce using rule 11 (statement -> whileblock .)
    WHILE           reduce using rule 11 (statement -> whileblock .)
    TIMES           reduce using rule 11 (statement -> whileblock .)
    NAME            reduce using rule 11 (statement -> whileblock .)
    RBRACE          reduce using rule 11 (statement -> whileblock .)
    ELSE            reduce using rule 11 (statement -> whileblock .)


state 20

    (10) statement -> declaration .

    IF              reduce using rule 10 (statement -> declaration .)
    TYPE            reduce using rule 10 (statement -> declaration .)
    WHILE           reduce using rule 10 (statement -> declaration .)
    TIMES           reduce using rule 10 (statement -> declaration .)
    NAME            reduce using rule 10 (statement -> declaration .)
    RBRACE          reduce using rule 10 (statement -> declaration .)
    ELSE            reduce using rule 10 (statement -> declaration .)


state 21

    (46) assignment -> assignment_base . SEMICOLON

    SEMICOLON       shift and go to state 36


state 22

    (8) allstatement -> unmatchedstatement .

    IF              reduce using rule 8 (allstatement -> unmatchedstatement .)
    TYPE            reduce using rule 8 (allstatement -> unmatchedstatement .)
    WHILE           reduce using rule 8 (allstatement -> unmatchedstatement .)
    TIMES           reduce using rule 8 (allstatement -> unmatchedstatement .)
    NAME            reduce using rule 8 (allstatement -> unmatchedstatement .)
    RBRACE          reduce using rule 8 (allstatement -> unmatchedstatement .)


state 23

    (5) fbody -> allstatement fbody .

    RBRACE          reduce using rule 5 (fbody -> allstatement fbody .)


state 24

    (42) dlist1 -> specialvar .
    (43) dlist1 -> specialvar . COMMA dlist1

    SEMICOLON       reduce using rule 42 (dlist1 -> specialvar .)
    COMMA           shift and go to state 37


state 25

    (39) declaration -> TYPE dlist1 . SEMICOLON

    SEMICOLON       shift and go to state 38


state 26

    (44) specialvar -> TIMES . specialvar
    (45) specialvar -> TIMES . NAME
    (44) specialvar -> . TIMES specialvar
    (45) specialvar -> . TIMES NAME

    NAME            shift and go to state 39
    TIMES           shift and go to state 26

    specialvar                     shift and go to state 40

state 27

    (40) dlist1 -> NAME .
    (41) dlist1 -> NAME . COMMA dlist1

    SEMICOLON       reduce using rule 40 (dlist1 -> NAME .)
    COMMA           shift and go to state 41


state 28

    (21) whileblock -> WHILE LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (22) conditional -> . conditionbase
    (23) conditional -> . conditional LESSTHANEQ conditional
    (24) conditional -> . conditional GREATERTHANEQ conditional
    (25) conditional -> . conditional UNEQUAL conditional
    (26) conditional -> . conditional EQUALCHECK conditional
    (27) conditional -> . conditional LESSTHAN conditional
    (28) conditional -> . conditional GREATERTHAN conditional
    (29) conditional -> . conditional ANDOPERATOR conditional
    (30) conditional -> . conditional OROPERATOR conditional
    (31) conditionbase -> . CS LESSTHANEQ CS
    (32) conditionbase -> . CS GREATERTHANEQ CS
    (33) conditionbase -> . CS UNEQUAL CS
    (34) conditionbase -> . CS EQUALCHECK CS
    (35) conditionbase -> . CS LESSTHAN CS
    (36) conditionbase -> . CS GREATERTHAN CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    conditionbase                  shift and go to state 44
    pointervar                     shift and go to state 42
    conditional                    shift and go to state 48
    CS                             shift and go to state 49
    expression                     shift and go to state 50

state 29

    (13) unmatchedstatement -> IF LPAREN . conditional RPAREN allstatement
    (14) unmatchedstatement -> IF LPAREN . conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> IF LPAREN . conditional RPAREN statement ELSE statement
    (18) ifblock -> IF LPAREN . conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (22) conditional -> . conditionbase
    (23) conditional -> . conditional LESSTHANEQ conditional
    (24) conditional -> . conditional GREATERTHANEQ conditional
    (25) conditional -> . conditional UNEQUAL conditional
    (26) conditional -> . conditional EQUALCHECK conditional
    (27) conditional -> . conditional LESSTHAN conditional
    (28) conditional -> . conditional GREATERTHAN conditional
    (29) conditional -> . conditional ANDOPERATOR conditional
    (30) conditional -> . conditional OROPERATOR conditional
    (31) conditionbase -> . CS LESSTHANEQ CS
    (32) conditionbase -> . CS GREATERTHANEQ CS
    (33) conditionbase -> . CS UNEQUAL CS
    (34) conditionbase -> . CS EQUALCHECK CS
    (35) conditionbase -> . CS LESSTHAN CS
    (36) conditionbase -> . CS GREATERTHAN CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    conditional                    shift and go to state 51
    conditionbase                  shift and go to state 44
    CS                             shift and go to state 49
    expression                     shift and go to state 50

state 30

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .

    TYPE            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)
    $end            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)


state 31

    (48) assignment_base -> NAME EQUALS . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    expression                     shift and go to state 52

state 32

    (47) assignment_base -> TIMES pointervar . EQUALS expression

    EQUALS          shift and go to state 53


state 33

    (57) pointervar -> TIMES . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 54

state 34

    (58) pointervar -> ADDROF . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 55

state 35

    (59) pointervar -> NAME .

    PLUS            reduce using rule 59 (pointervar -> NAME .)
    MINUS           reduce using rule 59 (pointervar -> NAME .)
    DIVIDE          reduce using rule 59 (pointervar -> NAME .)
    TIMES           reduce using rule 59 (pointervar -> NAME .)
    RPAREN          reduce using rule 59 (pointervar -> NAME .)
    LESSTHANEQ      reduce using rule 59 (pointervar -> NAME .)
    GREATERTHANEQ   reduce using rule 59 (pointervar -> NAME .)
    UNEQUAL         reduce using rule 59 (pointervar -> NAME .)
    EQUALCHECK      reduce using rule 59 (pointervar -> NAME .)
    LESSTHAN        reduce using rule 59 (pointervar -> NAME .)
    GREATERTHAN     reduce using rule 59 (pointervar -> NAME .)
    ANDOPERATOR     reduce using rule 59 (pointervar -> NAME .)
    OROPERATOR      reduce using rule 59 (pointervar -> NAME .)
    SEMICOLON       reduce using rule 59 (pointervar -> NAME .)
    EQUALS          reduce using rule 59 (pointervar -> NAME .)


state 36

    (46) assignment -> assignment_base SEMICOLON .

    IF              reduce using rule 46 (assignment -> assignment_base SEMICOLON .)
    TYPE            reduce using rule 46 (assignment -> assignment_base SEMICOLON .)
    WHILE           reduce using rule 46 (assignment -> assignment_base SEMICOLON .)
    TIMES           reduce using rule 46 (assignment -> assignment_base SEMICOLON .)
    NAME            reduce using rule 46 (assignment -> assignment_base SEMICOLON .)
    RBRACE          reduce using rule 46 (assignment -> assignment_base SEMICOLON .)
    ELSE            reduce using rule 46 (assignment -> assignment_base SEMICOLON .)


state 37

    (43) dlist1 -> specialvar COMMA . dlist1
    (40) dlist1 -> . NAME
    (41) dlist1 -> . NAME COMMA dlist1
    (42) dlist1 -> . specialvar
    (43) dlist1 -> . specialvar COMMA dlist1
    (44) specialvar -> . TIMES specialvar
    (45) specialvar -> . TIMES NAME

    NAME            shift and go to state 27
    TIMES           shift and go to state 26

    dlist1                         shift and go to state 56
    specialvar                     shift and go to state 24

state 38

    (39) declaration -> TYPE dlist1 SEMICOLON .

    IF              reduce using rule 39 (declaration -> TYPE dlist1 SEMICOLON .)
    TYPE            reduce using rule 39 (declaration -> TYPE dlist1 SEMICOLON .)
    WHILE           reduce using rule 39 (declaration -> TYPE dlist1 SEMICOLON .)
    TIMES           reduce using rule 39 (declaration -> TYPE dlist1 SEMICOLON .)
    NAME            reduce using rule 39 (declaration -> TYPE dlist1 SEMICOLON .)
    RBRACE          reduce using rule 39 (declaration -> TYPE dlist1 SEMICOLON .)
    ELSE            reduce using rule 39 (declaration -> TYPE dlist1 SEMICOLON .)


state 39

    (45) specialvar -> TIMES NAME .

    COMMA           reduce using rule 45 (specialvar -> TIMES NAME .)
    SEMICOLON       reduce using rule 45 (specialvar -> TIMES NAME .)


state 40

    (44) specialvar -> TIMES specialvar .

    COMMA           reduce using rule 44 (specialvar -> TIMES specialvar .)
    SEMICOLON       reduce using rule 44 (specialvar -> TIMES specialvar .)


state 41

    (41) dlist1 -> NAME COMMA . dlist1
    (40) dlist1 -> . NAME
    (41) dlist1 -> . NAME COMMA dlist1
    (42) dlist1 -> . specialvar
    (43) dlist1 -> . specialvar COMMA dlist1
    (44) specialvar -> . TIMES specialvar
    (45) specialvar -> . TIMES NAME

    NAME            shift and go to state 27
    TIMES           shift and go to state 26

    dlist1                         shift and go to state 57
    specialvar                     shift and go to state 24

state 42

    (56) expression -> pointervar .

    PLUS            reduce using rule 56 (expression -> pointervar .)
    MINUS           reduce using rule 56 (expression -> pointervar .)
    DIVIDE          reduce using rule 56 (expression -> pointervar .)
    TIMES           reduce using rule 56 (expression -> pointervar .)
    RPAREN          reduce using rule 56 (expression -> pointervar .)
    LESSTHANEQ      reduce using rule 56 (expression -> pointervar .)
    GREATERTHANEQ   reduce using rule 56 (expression -> pointervar .)
    UNEQUAL         reduce using rule 56 (expression -> pointervar .)
    EQUALCHECK      reduce using rule 56 (expression -> pointervar .)
    LESSTHAN        reduce using rule 56 (expression -> pointervar .)
    GREATERTHAN     reduce using rule 56 (expression -> pointervar .)
    ANDOPERATOR     reduce using rule 56 (expression -> pointervar .)
    OROPERATOR      reduce using rule 56 (expression -> pointervar .)
    SEMICOLON       reduce using rule 56 (expression -> pointervar .)


state 43

    (55) expression -> NUMBER .

    PLUS            reduce using rule 55 (expression -> NUMBER .)
    MINUS           reduce using rule 55 (expression -> NUMBER .)
    DIVIDE          reduce using rule 55 (expression -> NUMBER .)
    TIMES           reduce using rule 55 (expression -> NUMBER .)
    RPAREN          reduce using rule 55 (expression -> NUMBER .)
    LESSTHANEQ      reduce using rule 55 (expression -> NUMBER .)
    GREATERTHANEQ   reduce using rule 55 (expression -> NUMBER .)
    UNEQUAL         reduce using rule 55 (expression -> NUMBER .)
    EQUALCHECK      reduce using rule 55 (expression -> NUMBER .)
    LESSTHAN        reduce using rule 55 (expression -> NUMBER .)
    GREATERTHAN     reduce using rule 55 (expression -> NUMBER .)
    ANDOPERATOR     reduce using rule 55 (expression -> NUMBER .)
    OROPERATOR      reduce using rule 55 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 55 (expression -> NUMBER .)


state 44

    (22) conditional -> conditionbase .

    LESSTHANEQ      reduce using rule 22 (conditional -> conditionbase .)
    GREATERTHANEQ   reduce using rule 22 (conditional -> conditionbase .)
    UNEQUAL         reduce using rule 22 (conditional -> conditionbase .)
    EQUALCHECK      reduce using rule 22 (conditional -> conditionbase .)
    LESSTHAN        reduce using rule 22 (conditional -> conditionbase .)
    GREATERTHAN     reduce using rule 22 (conditional -> conditionbase .)
    ANDOPERATOR     reduce using rule 22 (conditional -> conditionbase .)
    OROPERATOR      reduce using rule 22 (conditional -> conditionbase .)
    RPAREN          reduce using rule 22 (conditional -> conditionbase .)


state 45

    (53) expression -> MINUS . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    expression                     shift and go to state 58

state 46

    (54) expression -> LPAREN . expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    expression                     shift and go to state 59

state 47

    (38) CS -> NOT . LPAREN expression RPAREN

    LPAREN          shift and go to state 60


state 48

    (21) whileblock -> WHILE LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (23) conditional -> conditional . LESSTHANEQ conditional
    (24) conditional -> conditional . GREATERTHANEQ conditional
    (25) conditional -> conditional . UNEQUAL conditional
    (26) conditional -> conditional . EQUALCHECK conditional
    (27) conditional -> conditional . LESSTHAN conditional
    (28) conditional -> conditional . GREATERTHAN conditional
    (29) conditional -> conditional . ANDOPERATOR conditional
    (30) conditional -> conditional . OROPERATOR conditional

    RPAREN          shift and go to state 64
    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 65
    UNEQUAL         shift and go to state 62
    EQUALCHECK      shift and go to state 69
    LESSTHAN        shift and go to state 63
    GREATERTHAN     shift and go to state 67
    ANDOPERATOR     shift and go to state 68
    OROPERATOR      shift and go to state 66


state 49

    (31) conditionbase -> CS . LESSTHANEQ CS
    (32) conditionbase -> CS . GREATERTHANEQ CS
    (33) conditionbase -> CS . UNEQUAL CS
    (34) conditionbase -> CS . EQUALCHECK CS
    (35) conditionbase -> CS . LESSTHAN CS
    (36) conditionbase -> CS . GREATERTHAN CS

    LESSTHANEQ      shift and go to state 70
    GREATERTHANEQ   shift and go to state 74
    UNEQUAL         shift and go to state 71
    EQUALCHECK      shift and go to state 73
    LESSTHAN        shift and go to state 72
    GREATERTHAN     shift and go to state 75


state 50

    (37) CS -> expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . TIMES expression

    RPAREN          reduce using rule 37 (CS -> expression .)
    LESSTHANEQ      reduce using rule 37 (CS -> expression .)
    GREATERTHANEQ   reduce using rule 37 (CS -> expression .)
    UNEQUAL         reduce using rule 37 (CS -> expression .)
    EQUALCHECK      reduce using rule 37 (CS -> expression .)
    LESSTHAN        reduce using rule 37 (CS -> expression .)
    GREATERTHAN     reduce using rule 37 (CS -> expression .)
    ANDOPERATOR     reduce using rule 37 (CS -> expression .)
    OROPERATOR      reduce using rule 37 (CS -> expression .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 78
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 79


state 51

    (13) unmatchedstatement -> IF LPAREN conditional . RPAREN allstatement
    (14) unmatchedstatement -> IF LPAREN conditional . RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (17) ifblock -> IF LPAREN conditional . RPAREN statement ELSE statement
    (18) ifblock -> IF LPAREN conditional . RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE statement
    (23) conditional -> conditional . LESSTHANEQ conditional
    (24) conditional -> conditional . GREATERTHANEQ conditional
    (25) conditional -> conditional . UNEQUAL conditional
    (26) conditional -> conditional . EQUALCHECK conditional
    (27) conditional -> conditional . LESSTHAN conditional
    (28) conditional -> conditional . GREATERTHAN conditional
    (29) conditional -> conditional . ANDOPERATOR conditional
    (30) conditional -> conditional . OROPERATOR conditional

    RPAREN          shift and go to state 80
    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 65
    UNEQUAL         shift and go to state 62
    EQUALCHECK      shift and go to state 69
    LESSTHAN        shift and go to state 63
    GREATERTHAN     shift and go to state 67
    ANDOPERATOR     shift and go to state 68
    OROPERATOR      shift and go to state 66


state 52

    (48) assignment_base -> NAME EQUALS expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 48 (assignment_base -> NAME EQUALS expression .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 78
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 79


state 53

    (47) assignment_base -> TIMES pointervar EQUALS . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    expression                     shift and go to state 81

state 54

    (57) pointervar -> TIMES pointervar .

    PLUS            reduce using rule 57 (pointervar -> TIMES pointervar .)
    MINUS           reduce using rule 57 (pointervar -> TIMES pointervar .)
    DIVIDE          reduce using rule 57 (pointervar -> TIMES pointervar .)
    TIMES           reduce using rule 57 (pointervar -> TIMES pointervar .)
    RPAREN          reduce using rule 57 (pointervar -> TIMES pointervar .)
    LESSTHANEQ      reduce using rule 57 (pointervar -> TIMES pointervar .)
    GREATERTHANEQ   reduce using rule 57 (pointervar -> TIMES pointervar .)
    UNEQUAL         reduce using rule 57 (pointervar -> TIMES pointervar .)
    EQUALCHECK      reduce using rule 57 (pointervar -> TIMES pointervar .)
    LESSTHAN        reduce using rule 57 (pointervar -> TIMES pointervar .)
    GREATERTHAN     reduce using rule 57 (pointervar -> TIMES pointervar .)
    ANDOPERATOR     reduce using rule 57 (pointervar -> TIMES pointervar .)
    OROPERATOR      reduce using rule 57 (pointervar -> TIMES pointervar .)
    SEMICOLON       reduce using rule 57 (pointervar -> TIMES pointervar .)
    EQUALS          reduce using rule 57 (pointervar -> TIMES pointervar .)


state 55

    (58) pointervar -> ADDROF pointervar .

    PLUS            reduce using rule 58 (pointervar -> ADDROF pointervar .)
    MINUS           reduce using rule 58 (pointervar -> ADDROF pointervar .)
    DIVIDE          reduce using rule 58 (pointervar -> ADDROF pointervar .)
    TIMES           reduce using rule 58 (pointervar -> ADDROF pointervar .)
    RPAREN          reduce using rule 58 (pointervar -> ADDROF pointervar .)
    LESSTHANEQ      reduce using rule 58 (pointervar -> ADDROF pointervar .)
    GREATERTHANEQ   reduce using rule 58 (pointervar -> ADDROF pointervar .)
    UNEQUAL         reduce using rule 58 (pointervar -> ADDROF pointervar .)
    EQUALCHECK      reduce using rule 58 (pointervar -> ADDROF pointervar .)
    LESSTHAN        reduce using rule 58 (pointervar -> ADDROF pointervar .)
    GREATERTHAN     reduce using rule 58 (pointervar -> ADDROF pointervar .)
    ANDOPERATOR     reduce using rule 58 (pointervar -> ADDROF pointervar .)
    OROPERATOR      reduce using rule 58 (pointervar -> ADDROF pointervar .)
    SEMICOLON       reduce using rule 58 (pointervar -> ADDROF pointervar .)
    EQUALS          reduce using rule 58 (pointervar -> ADDROF pointervar .)


state 56

    (43) dlist1 -> specialvar COMMA dlist1 .

    SEMICOLON       reduce using rule 43 (dlist1 -> specialvar COMMA dlist1 .)


state 57

    (41) dlist1 -> NAME COMMA dlist1 .

    SEMICOLON       reduce using rule 41 (dlist1 -> NAME COMMA dlist1 .)


state 58

    (53) expression -> MINUS expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . TIMES expression

    PLUS            reduce using rule 53 (expression -> MINUS expression .)
    MINUS           reduce using rule 53 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 53 (expression -> MINUS expression .)
    TIMES           reduce using rule 53 (expression -> MINUS expression .)
    RPAREN          reduce using rule 53 (expression -> MINUS expression .)
    LESSTHANEQ      reduce using rule 53 (expression -> MINUS expression .)
    GREATERTHANEQ   reduce using rule 53 (expression -> MINUS expression .)
    UNEQUAL         reduce using rule 53 (expression -> MINUS expression .)
    EQUALCHECK      reduce using rule 53 (expression -> MINUS expression .)
    LESSTHAN        reduce using rule 53 (expression -> MINUS expression .)
    GREATERTHAN     reduce using rule 53 (expression -> MINUS expression .)
    ANDOPERATOR     reduce using rule 53 (expression -> MINUS expression .)
    OROPERATOR      reduce using rule 53 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 53 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 76 ]
  ! MINUS           [ shift and go to state 78 ]
  ! DIVIDE          [ shift and go to state 77 ]
  ! TIMES           [ shift and go to state 79 ]


state 59

    (54) expression -> LPAREN expression . RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . TIMES expression

    RPAREN          shift and go to state 82
    PLUS            shift and go to state 76
    MINUS           shift and go to state 78
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 79


state 60

    (38) CS -> NOT LPAREN . expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    expression                     shift and go to state 83

state 61

    (23) conditional -> conditional LESSTHANEQ . conditional
    (22) conditional -> . conditionbase
    (23) conditional -> . conditional LESSTHANEQ conditional
    (24) conditional -> . conditional GREATERTHANEQ conditional
    (25) conditional -> . conditional UNEQUAL conditional
    (26) conditional -> . conditional EQUALCHECK conditional
    (27) conditional -> . conditional LESSTHAN conditional
    (28) conditional -> . conditional GREATERTHAN conditional
    (29) conditional -> . conditional ANDOPERATOR conditional
    (30) conditional -> . conditional OROPERATOR conditional
    (31) conditionbase -> . CS LESSTHANEQ CS
    (32) conditionbase -> . CS GREATERTHANEQ CS
    (33) conditionbase -> . CS UNEQUAL CS
    (34) conditionbase -> . CS EQUALCHECK CS
    (35) conditionbase -> . CS LESSTHAN CS
    (36) conditionbase -> . CS GREATERTHAN CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    conditionbase                  shift and go to state 44
    CS                             shift and go to state 49
    expression                     shift and go to state 50
    conditional                    shift and go to state 84

state 62

    (25) conditional -> conditional UNEQUAL . conditional
    (22) conditional -> . conditionbase
    (23) conditional -> . conditional LESSTHANEQ conditional
    (24) conditional -> . conditional GREATERTHANEQ conditional
    (25) conditional -> . conditional UNEQUAL conditional
    (26) conditional -> . conditional EQUALCHECK conditional
    (27) conditional -> . conditional LESSTHAN conditional
    (28) conditional -> . conditional GREATERTHAN conditional
    (29) conditional -> . conditional ANDOPERATOR conditional
    (30) conditional -> . conditional OROPERATOR conditional
    (31) conditionbase -> . CS LESSTHANEQ CS
    (32) conditionbase -> . CS GREATERTHANEQ CS
    (33) conditionbase -> . CS UNEQUAL CS
    (34) conditionbase -> . CS EQUALCHECK CS
    (35) conditionbase -> . CS LESSTHAN CS
    (36) conditionbase -> . CS GREATERTHAN CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    conditionbase                  shift and go to state 44
    CS                             shift and go to state 49
    expression                     shift and go to state 50
    conditional                    shift and go to state 85

state 63

    (27) conditional -> conditional LESSTHAN . conditional
    (22) conditional -> . conditionbase
    (23) conditional -> . conditional LESSTHANEQ conditional
    (24) conditional -> . conditional GREATERTHANEQ conditional
    (25) conditional -> . conditional UNEQUAL conditional
    (26) conditional -> . conditional EQUALCHECK conditional
    (27) conditional -> . conditional LESSTHAN conditional
    (28) conditional -> . conditional GREATERTHAN conditional
    (29) conditional -> . conditional ANDOPERATOR conditional
    (30) conditional -> . conditional OROPERATOR conditional
    (31) conditionbase -> . CS LESSTHANEQ CS
    (32) conditionbase -> . CS GREATERTHANEQ CS
    (33) conditionbase -> . CS UNEQUAL CS
    (34) conditionbase -> . CS EQUALCHECK CS
    (35) conditionbase -> . CS LESSTHAN CS
    (36) conditionbase -> . CS GREATERTHAN CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    conditionbase                  shift and go to state 44
    CS                             shift and go to state 49
    expression                     shift and go to state 50
    conditional                    shift and go to state 86

state 64

    (21) whileblock -> WHILE LPAREN conditional RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 87


state 65

    (24) conditional -> conditional GREATERTHANEQ . conditional
    (22) conditional -> . conditionbase
    (23) conditional -> . conditional LESSTHANEQ conditional
    (24) conditional -> . conditional GREATERTHANEQ conditional
    (25) conditional -> . conditional UNEQUAL conditional
    (26) conditional -> . conditional EQUALCHECK conditional
    (27) conditional -> . conditional LESSTHAN conditional
    (28) conditional -> . conditional GREATERTHAN conditional
    (29) conditional -> . conditional ANDOPERATOR conditional
    (30) conditional -> . conditional OROPERATOR conditional
    (31) conditionbase -> . CS LESSTHANEQ CS
    (32) conditionbase -> . CS GREATERTHANEQ CS
    (33) conditionbase -> . CS UNEQUAL CS
    (34) conditionbase -> . CS EQUALCHECK CS
    (35) conditionbase -> . CS LESSTHAN CS
    (36) conditionbase -> . CS GREATERTHAN CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    conditionbase                  shift and go to state 44
    CS                             shift and go to state 49
    expression                     shift and go to state 50
    conditional                    shift and go to state 88

state 66

    (30) conditional -> conditional OROPERATOR . conditional
    (22) conditional -> . conditionbase
    (23) conditional -> . conditional LESSTHANEQ conditional
    (24) conditional -> . conditional GREATERTHANEQ conditional
    (25) conditional -> . conditional UNEQUAL conditional
    (26) conditional -> . conditional EQUALCHECK conditional
    (27) conditional -> . conditional LESSTHAN conditional
    (28) conditional -> . conditional GREATERTHAN conditional
    (29) conditional -> . conditional ANDOPERATOR conditional
    (30) conditional -> . conditional OROPERATOR conditional
    (31) conditionbase -> . CS LESSTHANEQ CS
    (32) conditionbase -> . CS GREATERTHANEQ CS
    (33) conditionbase -> . CS UNEQUAL CS
    (34) conditionbase -> . CS EQUALCHECK CS
    (35) conditionbase -> . CS LESSTHAN CS
    (36) conditionbase -> . CS GREATERTHAN CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    conditionbase                  shift and go to state 44
    CS                             shift and go to state 49
    expression                     shift and go to state 50
    conditional                    shift and go to state 89

state 67

    (28) conditional -> conditional GREATERTHAN . conditional
    (22) conditional -> . conditionbase
    (23) conditional -> . conditional LESSTHANEQ conditional
    (24) conditional -> . conditional GREATERTHANEQ conditional
    (25) conditional -> . conditional UNEQUAL conditional
    (26) conditional -> . conditional EQUALCHECK conditional
    (27) conditional -> . conditional LESSTHAN conditional
    (28) conditional -> . conditional GREATERTHAN conditional
    (29) conditional -> . conditional ANDOPERATOR conditional
    (30) conditional -> . conditional OROPERATOR conditional
    (31) conditionbase -> . CS LESSTHANEQ CS
    (32) conditionbase -> . CS GREATERTHANEQ CS
    (33) conditionbase -> . CS UNEQUAL CS
    (34) conditionbase -> . CS EQUALCHECK CS
    (35) conditionbase -> . CS LESSTHAN CS
    (36) conditionbase -> . CS GREATERTHAN CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    conditionbase                  shift and go to state 44
    CS                             shift and go to state 49
    expression                     shift and go to state 50
    conditional                    shift and go to state 90

state 68

    (29) conditional -> conditional ANDOPERATOR . conditional
    (22) conditional -> . conditionbase
    (23) conditional -> . conditional LESSTHANEQ conditional
    (24) conditional -> . conditional GREATERTHANEQ conditional
    (25) conditional -> . conditional UNEQUAL conditional
    (26) conditional -> . conditional EQUALCHECK conditional
    (27) conditional -> . conditional LESSTHAN conditional
    (28) conditional -> . conditional GREATERTHAN conditional
    (29) conditional -> . conditional ANDOPERATOR conditional
    (30) conditional -> . conditional OROPERATOR conditional
    (31) conditionbase -> . CS LESSTHANEQ CS
    (32) conditionbase -> . CS GREATERTHANEQ CS
    (33) conditionbase -> . CS UNEQUAL CS
    (34) conditionbase -> . CS EQUALCHECK CS
    (35) conditionbase -> . CS LESSTHAN CS
    (36) conditionbase -> . CS GREATERTHAN CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    conditionbase                  shift and go to state 44
    CS                             shift and go to state 49
    expression                     shift and go to state 50
    conditional                    shift and go to state 91

state 69

    (26) conditional -> conditional EQUALCHECK . conditional
    (22) conditional -> . conditionbase
    (23) conditional -> . conditional LESSTHANEQ conditional
    (24) conditional -> . conditional GREATERTHANEQ conditional
    (25) conditional -> . conditional UNEQUAL conditional
    (26) conditional -> . conditional EQUALCHECK conditional
    (27) conditional -> . conditional LESSTHAN conditional
    (28) conditional -> . conditional GREATERTHAN conditional
    (29) conditional -> . conditional ANDOPERATOR conditional
    (30) conditional -> . conditional OROPERATOR conditional
    (31) conditionbase -> . CS LESSTHANEQ CS
    (32) conditionbase -> . CS GREATERTHANEQ CS
    (33) conditionbase -> . CS UNEQUAL CS
    (34) conditionbase -> . CS EQUALCHECK CS
    (35) conditionbase -> . CS LESSTHAN CS
    (36) conditionbase -> . CS GREATERTHAN CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    conditionbase                  shift and go to state 44
    CS                             shift and go to state 49
    expression                     shift and go to state 50
    conditional                    shift and go to state 92

state 70

    (31) conditionbase -> CS LESSTHANEQ . CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    CS                             shift and go to state 93
    pointervar                     shift and go to state 42
    expression                     shift and go to state 50

state 71

    (33) conditionbase -> CS UNEQUAL . CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    CS                             shift and go to state 94
    pointervar                     shift and go to state 42
    expression                     shift and go to state 50

state 72

    (35) conditionbase -> CS LESSTHAN . CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    CS                             shift and go to state 95
    pointervar                     shift and go to state 42
    expression                     shift and go to state 50

state 73

    (34) conditionbase -> CS EQUALCHECK . CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    CS                             shift and go to state 96
    pointervar                     shift and go to state 42
    expression                     shift and go to state 50

state 74

    (32) conditionbase -> CS GREATERTHANEQ . CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    CS                             shift and go to state 97
    pointervar                     shift and go to state 42
    expression                     shift and go to state 50

state 75

    (36) conditionbase -> CS GREATERTHAN . CS
    (37) CS -> . expression
    (38) CS -> . NOT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    NOT             shift and go to state 47
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    CS                             shift and go to state 98
    pointervar                     shift and go to state 42
    expression                     shift and go to state 50

state 76

    (49) expression -> expression PLUS . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    expression                     shift and go to state 99

state 77

    (51) expression -> expression DIVIDE . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    expression                     shift and go to state 100

state 78

    (50) expression -> expression MINUS . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    expression                     shift and go to state 101

state 79

    (52) expression -> expression TIMES . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . pointervar
    (57) pointervar -> . TIMES pointervar
    (58) pointervar -> . ADDROF pointervar
    (59) pointervar -> . NAME

    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46
    NUMBER          shift and go to state 43
    TIMES           shift and go to state 33
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 42
    expression                     shift and go to state 102

state 80

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN . allstatement
    (14) unmatchedstatement -> IF LPAREN conditional RPAREN . statement ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE
    (17) ifblock -> IF LPAREN conditional RPAREN . statement ELSE statement
    (18) ifblock -> IF LPAREN conditional RPAREN . statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE statement
    (7) allstatement -> . statement
    (8) allstatement -> . unmatchedstatement
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . whileblock
    (12) statement -> . ifblock
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (46) assignment -> . assignment_base SEMICOLON
    (39) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (47) assignment_base -> . TIMES pointervar EQUALS expression
    (48) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 104
    IF              shift and go to state 13
    TYPE            shift and go to state 10
    WHILE           shift and go to state 11
    TIMES           shift and go to state 18
    NAME            shift and go to state 17

    statement                      shift and go to state 105
    allstatement                   shift and go to state 103
    whileblock                     shift and go to state 19
    ifblock                        shift and go to state 12
    declaration                    shift and go to state 20
    assignment                     shift and go to state 14
    assignment_base                shift and go to state 21
    unmatchedstatement             shift and go to state 22

state 81

    (47) assignment_base -> TIMES pointervar EQUALS expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 47 (assignment_base -> TIMES pointervar EQUALS expression .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 78
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 79


state 82

    (54) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LESSTHANEQ      reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    ANDOPERATOR     reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    OROPERATOR      reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 54 (expression -> LPAREN expression RPAREN .)


state 83

    (38) CS -> NOT LPAREN expression . RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . TIMES expression

    RPAREN          shift and go to state 106
    PLUS            shift and go to state 76
    MINUS           shift and go to state 78
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 79


state 84

    (23) conditional -> conditional LESSTHANEQ conditional .
    (23) conditional -> conditional . LESSTHANEQ conditional
    (24) conditional -> conditional . GREATERTHANEQ conditional
    (25) conditional -> conditional . UNEQUAL conditional
    (26) conditional -> conditional . EQUALCHECK conditional
    (27) conditional -> conditional . LESSTHAN conditional
    (28) conditional -> conditional . GREATERTHAN conditional
    (29) conditional -> conditional . ANDOPERATOR conditional
    (30) conditional -> conditional . OROPERATOR conditional

    LESSTHANEQ      reduce using rule 23 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 23 (conditional -> conditional LESSTHANEQ conditional .)
    UNEQUAL         reduce using rule 23 (conditional -> conditional LESSTHANEQ conditional .)
    EQUALCHECK      reduce using rule 23 (conditional -> conditional LESSTHANEQ conditional .)
    LESSTHAN        reduce using rule 23 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHAN     reduce using rule 23 (conditional -> conditional LESSTHANEQ conditional .)
    ANDOPERATOR     reduce using rule 23 (conditional -> conditional LESSTHANEQ conditional .)
    OROPERATOR      reduce using rule 23 (conditional -> conditional LESSTHANEQ conditional .)
    RPAREN          reduce using rule 23 (conditional -> conditional LESSTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 61 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 62 ]
  ! EQUALCHECK      [ shift and go to state 69 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! GREATERTHAN     [ shift and go to state 67 ]
  ! ANDOPERATOR     [ shift and go to state 68 ]
  ! OROPERATOR      [ shift and go to state 66 ]


state 85

    (25) conditional -> conditional UNEQUAL conditional .
    (23) conditional -> conditional . LESSTHANEQ conditional
    (24) conditional -> conditional . GREATERTHANEQ conditional
    (25) conditional -> conditional . UNEQUAL conditional
    (26) conditional -> conditional . EQUALCHECK conditional
    (27) conditional -> conditional . LESSTHAN conditional
    (28) conditional -> conditional . GREATERTHAN conditional
    (29) conditional -> conditional . ANDOPERATOR conditional
    (30) conditional -> conditional . OROPERATOR conditional

    UNEQUAL         reduce using rule 25 (conditional -> conditional UNEQUAL conditional .)
    EQUALCHECK      reduce using rule 25 (conditional -> conditional UNEQUAL conditional .)
    ANDOPERATOR     reduce using rule 25 (conditional -> conditional UNEQUAL conditional .)
    OROPERATOR      reduce using rule 25 (conditional -> conditional UNEQUAL conditional .)
    RPAREN          reduce using rule 25 (conditional -> conditional UNEQUAL conditional .)
    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 65
    LESSTHAN        shift and go to state 63
    GREATERTHAN     shift and go to state 67

  ! LESSTHANEQ      [ reduce using rule 25 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 25 (conditional -> conditional UNEQUAL conditional .) ]
  ! LESSTHAN        [ reduce using rule 25 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHAN     [ reduce using rule 25 (conditional -> conditional UNEQUAL conditional .) ]
  ! UNEQUAL         [ shift and go to state 62 ]
  ! EQUALCHECK      [ shift and go to state 69 ]
  ! ANDOPERATOR     [ shift and go to state 68 ]
  ! OROPERATOR      [ shift and go to state 66 ]


state 86

    (27) conditional -> conditional LESSTHAN conditional .
    (23) conditional -> conditional . LESSTHANEQ conditional
    (24) conditional -> conditional . GREATERTHANEQ conditional
    (25) conditional -> conditional . UNEQUAL conditional
    (26) conditional -> conditional . EQUALCHECK conditional
    (27) conditional -> conditional . LESSTHAN conditional
    (28) conditional -> conditional . GREATERTHAN conditional
    (29) conditional -> conditional . ANDOPERATOR conditional
    (30) conditional -> conditional . OROPERATOR conditional

    LESSTHANEQ      reduce using rule 27 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHANEQ   reduce using rule 27 (conditional -> conditional LESSTHAN conditional .)
    UNEQUAL         reduce using rule 27 (conditional -> conditional LESSTHAN conditional .)
    EQUALCHECK      reduce using rule 27 (conditional -> conditional LESSTHAN conditional .)
    LESSTHAN        reduce using rule 27 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHAN     reduce using rule 27 (conditional -> conditional LESSTHAN conditional .)
    ANDOPERATOR     reduce using rule 27 (conditional -> conditional LESSTHAN conditional .)
    OROPERATOR      reduce using rule 27 (conditional -> conditional LESSTHAN conditional .)
    RPAREN          reduce using rule 27 (conditional -> conditional LESSTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 61 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 62 ]
  ! EQUALCHECK      [ shift and go to state 69 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! GREATERTHAN     [ shift and go to state 67 ]
  ! ANDOPERATOR     [ shift and go to state 68 ]
  ! OROPERATOR      [ shift and go to state 66 ]


state 87

    (21) whileblock -> WHILE LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) fbody -> .
    (7) allstatement -> . statement
    (8) allstatement -> . unmatchedstatement
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . whileblock
    (12) statement -> . ifblock
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (46) assignment -> . assignment_base SEMICOLON
    (39) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (47) assignment_base -> . TIMES pointervar EQUALS expression
    (48) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 6 (fbody -> .)
    IF              shift and go to state 13
    TYPE            shift and go to state 10
    WHILE           shift and go to state 11
    TIMES           shift and go to state 18
    NAME            shift and go to state 17

    statement                      shift and go to state 15
    allstatement                   shift and go to state 9
    fbody                          shift and go to state 107
    whileblock                     shift and go to state 19
    ifblock                        shift and go to state 12
    declaration                    shift and go to state 20
    assignment                     shift and go to state 14
    assignment_base                shift and go to state 21
    unmatchedstatement             shift and go to state 22

state 88

    (24) conditional -> conditional GREATERTHANEQ conditional .
    (23) conditional -> conditional . LESSTHANEQ conditional
    (24) conditional -> conditional . GREATERTHANEQ conditional
    (25) conditional -> conditional . UNEQUAL conditional
    (26) conditional -> conditional . EQUALCHECK conditional
    (27) conditional -> conditional . LESSTHAN conditional
    (28) conditional -> conditional . GREATERTHAN conditional
    (29) conditional -> conditional . ANDOPERATOR conditional
    (30) conditional -> conditional . OROPERATOR conditional

    LESSTHANEQ      reduce using rule 24 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 24 (conditional -> conditional GREATERTHANEQ conditional .)
    UNEQUAL         reduce using rule 24 (conditional -> conditional GREATERTHANEQ conditional .)
    EQUALCHECK      reduce using rule 24 (conditional -> conditional GREATERTHANEQ conditional .)
    LESSTHAN        reduce using rule 24 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHAN     reduce using rule 24 (conditional -> conditional GREATERTHANEQ conditional .)
    ANDOPERATOR     reduce using rule 24 (conditional -> conditional GREATERTHANEQ conditional .)
    OROPERATOR      reduce using rule 24 (conditional -> conditional GREATERTHANEQ conditional .)
    RPAREN          reduce using rule 24 (conditional -> conditional GREATERTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 61 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 62 ]
  ! EQUALCHECK      [ shift and go to state 69 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! GREATERTHAN     [ shift and go to state 67 ]
  ! ANDOPERATOR     [ shift and go to state 68 ]
  ! OROPERATOR      [ shift and go to state 66 ]


state 89

    (30) conditional -> conditional OROPERATOR conditional .
    (23) conditional -> conditional . LESSTHANEQ conditional
    (24) conditional -> conditional . GREATERTHANEQ conditional
    (25) conditional -> conditional . UNEQUAL conditional
    (26) conditional -> conditional . EQUALCHECK conditional
    (27) conditional -> conditional . LESSTHAN conditional
    (28) conditional -> conditional . GREATERTHAN conditional
    (29) conditional -> conditional . ANDOPERATOR conditional
    (30) conditional -> conditional . OROPERATOR conditional

    OROPERATOR      reduce using rule 30 (conditional -> conditional OROPERATOR conditional .)
    RPAREN          reduce using rule 30 (conditional -> conditional OROPERATOR conditional .)
    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 65
    UNEQUAL         shift and go to state 62
    EQUALCHECK      shift and go to state 69
    LESSTHAN        shift and go to state 63
    GREATERTHAN     shift and go to state 67
    ANDOPERATOR     shift and go to state 68

  ! LESSTHANEQ      [ reduce using rule 30 (conditional -> conditional OROPERATOR conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 30 (conditional -> conditional OROPERATOR conditional .) ]
  ! UNEQUAL         [ reduce using rule 30 (conditional -> conditional OROPERATOR conditional .) ]
  ! EQUALCHECK      [ reduce using rule 30 (conditional -> conditional OROPERATOR conditional .) ]
  ! LESSTHAN        [ reduce using rule 30 (conditional -> conditional OROPERATOR conditional .) ]
  ! GREATERTHAN     [ reduce using rule 30 (conditional -> conditional OROPERATOR conditional .) ]
  ! ANDOPERATOR     [ reduce using rule 30 (conditional -> conditional OROPERATOR conditional .) ]
  ! OROPERATOR      [ shift and go to state 66 ]


state 90

    (28) conditional -> conditional GREATERTHAN conditional .
    (23) conditional -> conditional . LESSTHANEQ conditional
    (24) conditional -> conditional . GREATERTHANEQ conditional
    (25) conditional -> conditional . UNEQUAL conditional
    (26) conditional -> conditional . EQUALCHECK conditional
    (27) conditional -> conditional . LESSTHAN conditional
    (28) conditional -> conditional . GREATERTHAN conditional
    (29) conditional -> conditional . ANDOPERATOR conditional
    (30) conditional -> conditional . OROPERATOR conditional

    LESSTHANEQ      reduce using rule 28 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHANEQ   reduce using rule 28 (conditional -> conditional GREATERTHAN conditional .)
    UNEQUAL         reduce using rule 28 (conditional -> conditional GREATERTHAN conditional .)
    EQUALCHECK      reduce using rule 28 (conditional -> conditional GREATERTHAN conditional .)
    LESSTHAN        reduce using rule 28 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHAN     reduce using rule 28 (conditional -> conditional GREATERTHAN conditional .)
    ANDOPERATOR     reduce using rule 28 (conditional -> conditional GREATERTHAN conditional .)
    OROPERATOR      reduce using rule 28 (conditional -> conditional GREATERTHAN conditional .)
    RPAREN          reduce using rule 28 (conditional -> conditional GREATERTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 61 ]
  ! GREATERTHANEQ   [ shift and go to state 65 ]
  ! UNEQUAL         [ shift and go to state 62 ]
  ! EQUALCHECK      [ shift and go to state 69 ]
  ! LESSTHAN        [ shift and go to state 63 ]
  ! GREATERTHAN     [ shift and go to state 67 ]
  ! ANDOPERATOR     [ shift and go to state 68 ]
  ! OROPERATOR      [ shift and go to state 66 ]


state 91

    (29) conditional -> conditional ANDOPERATOR conditional .
    (23) conditional -> conditional . LESSTHANEQ conditional
    (24) conditional -> conditional . GREATERTHANEQ conditional
    (25) conditional -> conditional . UNEQUAL conditional
    (26) conditional -> conditional . EQUALCHECK conditional
    (27) conditional -> conditional . LESSTHAN conditional
    (28) conditional -> conditional . GREATERTHAN conditional
    (29) conditional -> conditional . ANDOPERATOR conditional
    (30) conditional -> conditional . OROPERATOR conditional

    ANDOPERATOR     reduce using rule 29 (conditional -> conditional ANDOPERATOR conditional .)
    OROPERATOR      reduce using rule 29 (conditional -> conditional ANDOPERATOR conditional .)
    RPAREN          reduce using rule 29 (conditional -> conditional ANDOPERATOR conditional .)
    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 65
    UNEQUAL         shift and go to state 62
    EQUALCHECK      shift and go to state 69
    LESSTHAN        shift and go to state 63
    GREATERTHAN     shift and go to state 67

  ! LESSTHANEQ      [ reduce using rule 29 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 29 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! UNEQUAL         [ reduce using rule 29 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! EQUALCHECK      [ reduce using rule 29 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! LESSTHAN        [ reduce using rule 29 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! GREATERTHAN     [ reduce using rule 29 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! ANDOPERATOR     [ shift and go to state 68 ]
  ! OROPERATOR      [ shift and go to state 66 ]


state 92

    (26) conditional -> conditional EQUALCHECK conditional .
    (23) conditional -> conditional . LESSTHANEQ conditional
    (24) conditional -> conditional . GREATERTHANEQ conditional
    (25) conditional -> conditional . UNEQUAL conditional
    (26) conditional -> conditional . EQUALCHECK conditional
    (27) conditional -> conditional . LESSTHAN conditional
    (28) conditional -> conditional . GREATERTHAN conditional
    (29) conditional -> conditional . ANDOPERATOR conditional
    (30) conditional -> conditional . OROPERATOR conditional

    UNEQUAL         reduce using rule 26 (conditional -> conditional EQUALCHECK conditional .)
    EQUALCHECK      reduce using rule 26 (conditional -> conditional EQUALCHECK conditional .)
    ANDOPERATOR     reduce using rule 26 (conditional -> conditional EQUALCHECK conditional .)
    OROPERATOR      reduce using rule 26 (conditional -> conditional EQUALCHECK conditional .)
    RPAREN          reduce using rule 26 (conditional -> conditional EQUALCHECK conditional .)
    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 65
    LESSTHAN        shift and go to state 63
    GREATERTHAN     shift and go to state 67

  ! LESSTHANEQ      [ reduce using rule 26 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 26 (conditional -> conditional EQUALCHECK conditional .) ]
  ! LESSTHAN        [ reduce using rule 26 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHAN     [ reduce using rule 26 (conditional -> conditional EQUALCHECK conditional .) ]
  ! UNEQUAL         [ shift and go to state 62 ]
  ! EQUALCHECK      [ shift and go to state 69 ]
  ! ANDOPERATOR     [ shift and go to state 68 ]
  ! OROPERATOR      [ shift and go to state 66 ]


state 93

    (31) conditionbase -> CS LESSTHANEQ CS .

    RPAREN          reduce using rule 31 (conditionbase -> CS LESSTHANEQ CS .)
    LESSTHANEQ      reduce using rule 31 (conditionbase -> CS LESSTHANEQ CS .)
    GREATERTHANEQ   reduce using rule 31 (conditionbase -> CS LESSTHANEQ CS .)
    UNEQUAL         reduce using rule 31 (conditionbase -> CS LESSTHANEQ CS .)
    EQUALCHECK      reduce using rule 31 (conditionbase -> CS LESSTHANEQ CS .)
    LESSTHAN        reduce using rule 31 (conditionbase -> CS LESSTHANEQ CS .)
    GREATERTHAN     reduce using rule 31 (conditionbase -> CS LESSTHANEQ CS .)
    ANDOPERATOR     reduce using rule 31 (conditionbase -> CS LESSTHANEQ CS .)
    OROPERATOR      reduce using rule 31 (conditionbase -> CS LESSTHANEQ CS .)


state 94

    (33) conditionbase -> CS UNEQUAL CS .

    RPAREN          reduce using rule 33 (conditionbase -> CS UNEQUAL CS .)
    LESSTHANEQ      reduce using rule 33 (conditionbase -> CS UNEQUAL CS .)
    GREATERTHANEQ   reduce using rule 33 (conditionbase -> CS UNEQUAL CS .)
    UNEQUAL         reduce using rule 33 (conditionbase -> CS UNEQUAL CS .)
    EQUALCHECK      reduce using rule 33 (conditionbase -> CS UNEQUAL CS .)
    LESSTHAN        reduce using rule 33 (conditionbase -> CS UNEQUAL CS .)
    GREATERTHAN     reduce using rule 33 (conditionbase -> CS UNEQUAL CS .)
    ANDOPERATOR     reduce using rule 33 (conditionbase -> CS UNEQUAL CS .)
    OROPERATOR      reduce using rule 33 (conditionbase -> CS UNEQUAL CS .)


state 95

    (35) conditionbase -> CS LESSTHAN CS .

    RPAREN          reduce using rule 35 (conditionbase -> CS LESSTHAN CS .)
    LESSTHANEQ      reduce using rule 35 (conditionbase -> CS LESSTHAN CS .)
    GREATERTHANEQ   reduce using rule 35 (conditionbase -> CS LESSTHAN CS .)
    UNEQUAL         reduce using rule 35 (conditionbase -> CS LESSTHAN CS .)
    EQUALCHECK      reduce using rule 35 (conditionbase -> CS LESSTHAN CS .)
    LESSTHAN        reduce using rule 35 (conditionbase -> CS LESSTHAN CS .)
    GREATERTHAN     reduce using rule 35 (conditionbase -> CS LESSTHAN CS .)
    ANDOPERATOR     reduce using rule 35 (conditionbase -> CS LESSTHAN CS .)
    OROPERATOR      reduce using rule 35 (conditionbase -> CS LESSTHAN CS .)


state 96

    (34) conditionbase -> CS EQUALCHECK CS .

    RPAREN          reduce using rule 34 (conditionbase -> CS EQUALCHECK CS .)
    LESSTHANEQ      reduce using rule 34 (conditionbase -> CS EQUALCHECK CS .)
    GREATERTHANEQ   reduce using rule 34 (conditionbase -> CS EQUALCHECK CS .)
    UNEQUAL         reduce using rule 34 (conditionbase -> CS EQUALCHECK CS .)
    EQUALCHECK      reduce using rule 34 (conditionbase -> CS EQUALCHECK CS .)
    LESSTHAN        reduce using rule 34 (conditionbase -> CS EQUALCHECK CS .)
    GREATERTHAN     reduce using rule 34 (conditionbase -> CS EQUALCHECK CS .)
    ANDOPERATOR     reduce using rule 34 (conditionbase -> CS EQUALCHECK CS .)
    OROPERATOR      reduce using rule 34 (conditionbase -> CS EQUALCHECK CS .)


state 97

    (32) conditionbase -> CS GREATERTHANEQ CS .

    RPAREN          reduce using rule 32 (conditionbase -> CS GREATERTHANEQ CS .)
    LESSTHANEQ      reduce using rule 32 (conditionbase -> CS GREATERTHANEQ CS .)
    GREATERTHANEQ   reduce using rule 32 (conditionbase -> CS GREATERTHANEQ CS .)
    UNEQUAL         reduce using rule 32 (conditionbase -> CS GREATERTHANEQ CS .)
    EQUALCHECK      reduce using rule 32 (conditionbase -> CS GREATERTHANEQ CS .)
    LESSTHAN        reduce using rule 32 (conditionbase -> CS GREATERTHANEQ CS .)
    GREATERTHAN     reduce using rule 32 (conditionbase -> CS GREATERTHANEQ CS .)
    ANDOPERATOR     reduce using rule 32 (conditionbase -> CS GREATERTHANEQ CS .)
    OROPERATOR      reduce using rule 32 (conditionbase -> CS GREATERTHANEQ CS .)


state 98

    (36) conditionbase -> CS GREATERTHAN CS .

    RPAREN          reduce using rule 36 (conditionbase -> CS GREATERTHAN CS .)
    LESSTHANEQ      reduce using rule 36 (conditionbase -> CS GREATERTHAN CS .)
    GREATERTHANEQ   reduce using rule 36 (conditionbase -> CS GREATERTHAN CS .)
    UNEQUAL         reduce using rule 36 (conditionbase -> CS GREATERTHAN CS .)
    EQUALCHECK      reduce using rule 36 (conditionbase -> CS GREATERTHAN CS .)
    LESSTHAN        reduce using rule 36 (conditionbase -> CS GREATERTHAN CS .)
    GREATERTHAN     reduce using rule 36 (conditionbase -> CS GREATERTHAN CS .)
    ANDOPERATOR     reduce using rule 36 (conditionbase -> CS GREATERTHAN CS .)
    OROPERATOR      reduce using rule 36 (conditionbase -> CS GREATERTHAN CS .)


state 99

    (49) expression -> expression PLUS expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . TIMES expression

    PLUS            reduce using rule 49 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 49 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 49 (expression -> expression PLUS expression .)
    LESSTHANEQ      reduce using rule 49 (expression -> expression PLUS expression .)
    GREATERTHANEQ   reduce using rule 49 (expression -> expression PLUS expression .)
    UNEQUAL         reduce using rule 49 (expression -> expression PLUS expression .)
    EQUALCHECK      reduce using rule 49 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 49 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 49 (expression -> expression PLUS expression .)
    ANDOPERATOR     reduce using rule 49 (expression -> expression PLUS expression .)
    OROPERATOR      reduce using rule 49 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 79

  ! DIVIDE          [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 76 ]
  ! MINUS           [ shift and go to state 78 ]


state 100

    (51) expression -> expression DIVIDE expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . TIMES expression

    PLUS            reduce using rule 51 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 51 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 51 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 51 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 51 (expression -> expression DIVIDE expression .)
    LESSTHANEQ      reduce using rule 51 (expression -> expression DIVIDE expression .)
    GREATERTHANEQ   reduce using rule 51 (expression -> expression DIVIDE expression .)
    UNEQUAL         reduce using rule 51 (expression -> expression DIVIDE expression .)
    EQUALCHECK      reduce using rule 51 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 51 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 51 (expression -> expression DIVIDE expression .)
    ANDOPERATOR     reduce using rule 51 (expression -> expression DIVIDE expression .)
    OROPERATOR      reduce using rule 51 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 51 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 76 ]
  ! MINUS           [ shift and go to state 78 ]
  ! DIVIDE          [ shift and go to state 77 ]
  ! TIMES           [ shift and go to state 79 ]


state 101

    (50) expression -> expression MINUS expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . TIMES expression

    PLUS            reduce using rule 50 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 50 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 50 (expression -> expression MINUS expression .)
    LESSTHANEQ      reduce using rule 50 (expression -> expression MINUS expression .)
    GREATERTHANEQ   reduce using rule 50 (expression -> expression MINUS expression .)
    UNEQUAL         reduce using rule 50 (expression -> expression MINUS expression .)
    EQUALCHECK      reduce using rule 50 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 50 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 50 (expression -> expression MINUS expression .)
    ANDOPERATOR     reduce using rule 50 (expression -> expression MINUS expression .)
    OROPERATOR      reduce using rule 50 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 50 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 79

  ! DIVIDE          [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 76 ]
  ! MINUS           [ shift and go to state 78 ]


state 102

    (52) expression -> expression TIMES expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . TIMES expression

    PLUS            reduce using rule 52 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 52 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 52 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 52 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 52 (expression -> expression TIMES expression .)
    LESSTHANEQ      reduce using rule 52 (expression -> expression TIMES expression .)
    GREATERTHANEQ   reduce using rule 52 (expression -> expression TIMES expression .)
    UNEQUAL         reduce using rule 52 (expression -> expression TIMES expression .)
    EQUALCHECK      reduce using rule 52 (expression -> expression TIMES expression .)
    LESSTHAN        reduce using rule 52 (expression -> expression TIMES expression .)
    GREATERTHAN     reduce using rule 52 (expression -> expression TIMES expression .)
    ANDOPERATOR     reduce using rule 52 (expression -> expression TIMES expression .)
    OROPERATOR      reduce using rule 52 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 52 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 76 ]
  ! MINUS           [ shift and go to state 78 ]
  ! DIVIDE          [ shift and go to state 77 ]
  ! TIMES           [ shift and go to state 79 ]


state 103

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .

    IF              reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TYPE            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    WHILE           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TIMES           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    NAME            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    RBRACE          reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)


state 104

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE statement
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) fbody -> .
    (7) allstatement -> . statement
    (8) allstatement -> . unmatchedstatement
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . whileblock
    (12) statement -> . ifblock
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (46) assignment -> . assignment_base SEMICOLON
    (39) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (47) assignment_base -> . TIMES pointervar EQUALS expression
    (48) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 6 (fbody -> .)
    IF              shift and go to state 13
    TYPE            shift and go to state 10
    WHILE           shift and go to state 11
    TIMES           shift and go to state 18
    NAME            shift and go to state 17

    statement                      shift and go to state 15
    allstatement                   shift and go to state 9
    fbody                          shift and go to state 108
    whileblock                     shift and go to state 19
    ifblock                        shift and go to state 12
    declaration                    shift and go to state 20
    assignment                     shift and go to state 14
    assignment_base                shift and go to state 21
    unmatchedstatement             shift and go to state 22

state 105

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN statement . ELSE unmatchedstatement
    (17) ifblock -> IF LPAREN conditional RPAREN statement . ELSE statement
    (18) ifblock -> IF LPAREN conditional RPAREN statement . ELSE LBRACE fbody RBRACE
    (7) allstatement -> statement .

    ELSE            shift and go to state 109
    IF              reduce using rule 7 (allstatement -> statement .)
    TYPE            reduce using rule 7 (allstatement -> statement .)
    WHILE           reduce using rule 7 (allstatement -> statement .)
    TIMES           reduce using rule 7 (allstatement -> statement .)
    NAME            reduce using rule 7 (allstatement -> statement .)
    RBRACE          reduce using rule 7 (allstatement -> statement .)


state 106

    (38) CS -> NOT LPAREN expression RPAREN .

    RPAREN          reduce using rule 38 (CS -> NOT LPAREN expression RPAREN .)
    LESSTHANEQ      reduce using rule 38 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 38 (CS -> NOT LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 38 (CS -> NOT LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 38 (CS -> NOT LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 38 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 38 (CS -> NOT LPAREN expression RPAREN .)
    ANDOPERATOR     reduce using rule 38 (CS -> NOT LPAREN expression RPAREN .)
    OROPERATOR      reduce using rule 38 (CS -> NOT LPAREN expression RPAREN .)


state 107

    (21) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 110


state 108

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE statement

    RBRACE          shift and go to state 111


state 109

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE . unmatchedstatement
    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE . statement
    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE . LBRACE fbody RBRACE
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . whileblock
    (12) statement -> . ifblock
    (46) assignment -> . assignment_base SEMICOLON
    (39) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (47) assignment_base -> . TIMES pointervar EQUALS expression
    (48) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 112
    IF              shift and go to state 13
    TYPE            shift and go to state 10
    WHILE           shift and go to state 11
    TIMES           shift and go to state 18
    NAME            shift and go to state 17

    statement                      shift and go to state 113
    whileblock                     shift and go to state 19
    ifblock                        shift and go to state 12
    declaration                    shift and go to state 20
    assignment                     shift and go to state 14
    assignment_base                shift and go to state 21
    unmatchedstatement             shift and go to state 114

state 110

    (21) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .

    IF              reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    ELSE            reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 111

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE statement

    ELSE            shift and go to state 115
    IF              reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 112

    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) fbody -> .
    (7) allstatement -> . statement
    (8) allstatement -> . unmatchedstatement
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . whileblock
    (12) statement -> . ifblock
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (46) assignment -> . assignment_base SEMICOLON
    (39) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (47) assignment_base -> . TIMES pointervar EQUALS expression
    (48) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 6 (fbody -> .)
    IF              shift and go to state 13
    TYPE            shift and go to state 10
    WHILE           shift and go to state 11
    TIMES           shift and go to state 18
    NAME            shift and go to state 17

    statement                      shift and go to state 15
    allstatement                   shift and go to state 9
    fbody                          shift and go to state 116
    whileblock                     shift and go to state 19
    ifblock                        shift and go to state 12
    declaration                    shift and go to state 20
    assignment                     shift and go to state 14
    assignment_base                shift and go to state 21
    unmatchedstatement             shift and go to state 22

state 113

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .

    IF              reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TYPE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    WHILE           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TIMES           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    NAME            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    ELSE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)


state 114

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .

    IF              reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TYPE            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    WHILE           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TIMES           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    NAME            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    RBRACE          reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)


state 115

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . unmatchedstatement
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . statement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . whileblock
    (12) statement -> . ifblock
    (46) assignment -> . assignment_base SEMICOLON
    (39) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (47) assignment_base -> . TIMES pointervar EQUALS expression
    (48) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 117
    IF              shift and go to state 13
    TYPE            shift and go to state 10
    WHILE           shift and go to state 11
    TIMES           shift and go to state 18
    NAME            shift and go to state 17

    statement                      shift and go to state 118
    whileblock                     shift and go to state 19
    ifblock                        shift and go to state 12
    declaration                    shift and go to state 20
    assignment                     shift and go to state 14
    assignment_base                shift and go to state 21
    unmatchedstatement             shift and go to state 119

state 116

    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 120


state 117

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) fbody -> .
    (7) allstatement -> . statement
    (8) allstatement -> . unmatchedstatement
    (9) statement -> . assignment
    (10) statement -> . declaration
    (11) statement -> . whileblock
    (12) statement -> . ifblock
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (46) assignment -> . assignment_base SEMICOLON
    (39) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (47) assignment_base -> . TIMES pointervar EQUALS expression
    (48) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 6 (fbody -> .)
    IF              shift and go to state 13
    TYPE            shift and go to state 10
    WHILE           shift and go to state 11
    TIMES           shift and go to state 18
    NAME            shift and go to state 17

    statement                      shift and go to state 15
    allstatement                   shift and go to state 9
    fbody                          shift and go to state 121
    whileblock                     shift and go to state 19
    ifblock                        shift and go to state 12
    declaration                    shift and go to state 20
    assignment                     shift and go to state 14
    assignment_base                shift and go to state 21
    unmatchedstatement             shift and go to state 22

state 118

    (20) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .

    IF              reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TYPE            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    WHILE           reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TIMES           reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    NAME            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    RBRACE          reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    ELSE            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)


state 119

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .

    IF              reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TYPE            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    WHILE           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TIMES           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    NAME            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    RBRACE          reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)


state 120

    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .

    IF              reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    ELSE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)


state 121

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 122


state 122

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .

    IF              reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    ELSE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 9 resolved using rule (fbody -> allstatement)
WARNING: rejected rule (fbody -> <empty>) in state 9
