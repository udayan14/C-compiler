Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDROF

Grammar

Rule 0     S' -> program
Rule 1     program -> TYPE MAIN LPAREN RPAREN LBRACE fbody RBRACE
Rule 2     fbody -> statement
Rule 3     fbody -> statement fbody
Rule 4     statement -> assignment
Rule 5     statement -> declaration
Rule 6     declaration -> TYPE NAME DELIM
Rule 7     declaration -> TYPE VALOF NAME DELIM
Rule 8     assignment -> VALOF NAME EQUALS NUMBER DELIM
Rule 9     assignment -> VALOF NAME EQUALS VALOF NAME DELIM

Terminals, with rules where they appear

ADDROF               : 
DELIM                : 6 7 8 9
EQUALS               : 8 9
LBRACE               : 1
LPAREN               : 1
MAIN                 : 1
NAME                 : 6 7 8 9 9
NUMBER               : 8
RBRACE               : 1
RPAREN               : 1
TYPE                 : 1 6 7
VALOF                : 7 8 9 9
error                : 

Nonterminals, with rules where they appear

assignment           : 4
declaration          : 5
fbody                : 1 3
program              : 0
statement            : 2 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . TYPE MAIN LPAREN RPAREN LBRACE fbody RBRACE

    TYPE            shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> TYPE . MAIN LPAREN RPAREN LBRACE fbody RBRACE

    MAIN            shift and go to state 3


state 3

    (1) program -> TYPE MAIN . LPAREN RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 4


state 4

    (1) program -> TYPE MAIN LPAREN . RPAREN LBRACE fbody RBRACE

    RPAREN          shift and go to state 5


state 5

    (1) program -> TYPE MAIN LPAREN RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 6


state 6

    (1) program -> TYPE MAIN LPAREN RPAREN LBRACE . fbody RBRACE
    (2) fbody -> . statement
    (3) fbody -> . statement fbody
    (4) statement -> . assignment
    (5) statement -> . declaration
    (8) assignment -> . VALOF NAME EQUALS NUMBER DELIM
    (9) assignment -> . VALOF NAME EQUALS VALOF NAME DELIM
    (6) declaration -> . TYPE NAME DELIM
    (7) declaration -> . TYPE VALOF NAME DELIM

    VALOF           shift and go to state 9
    TYPE            shift and go to state 12

    statement                      shift and go to state 7
    fbody                          shift and go to state 8
    assignment                     shift and go to state 10
    declaration                    shift and go to state 11

state 7

    (2) fbody -> statement .
    (3) fbody -> statement . fbody
    (2) fbody -> . statement
    (3) fbody -> . statement fbody
    (4) statement -> . assignment
    (5) statement -> . declaration
    (8) assignment -> . VALOF NAME EQUALS NUMBER DELIM
    (9) assignment -> . VALOF NAME EQUALS VALOF NAME DELIM
    (6) declaration -> . TYPE NAME DELIM
    (7) declaration -> . TYPE VALOF NAME DELIM

    RBRACE          reduce using rule 2 (fbody -> statement .)
    VALOF           shift and go to state 9
    TYPE            shift and go to state 12

    statement                      shift and go to state 7
    fbody                          shift and go to state 13
    assignment                     shift and go to state 10
    declaration                    shift and go to state 11

state 8

    (1) program -> TYPE MAIN LPAREN RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 14


state 9

    (8) assignment -> VALOF . NAME EQUALS NUMBER DELIM
    (9) assignment -> VALOF . NAME EQUALS VALOF NAME DELIM

    NAME            shift and go to state 15


state 10

    (4) statement -> assignment .

    VALOF           reduce using rule 4 (statement -> assignment .)
    TYPE            reduce using rule 4 (statement -> assignment .)
    RBRACE          reduce using rule 4 (statement -> assignment .)


state 11

    (5) statement -> declaration .

    VALOF           reduce using rule 5 (statement -> declaration .)
    TYPE            reduce using rule 5 (statement -> declaration .)
    RBRACE          reduce using rule 5 (statement -> declaration .)


state 12

    (6) declaration -> TYPE . NAME DELIM
    (7) declaration -> TYPE . VALOF NAME DELIM

    NAME            shift and go to state 16
    VALOF           shift and go to state 17


state 13

    (3) fbody -> statement fbody .

    RBRACE          reduce using rule 3 (fbody -> statement fbody .)


state 14

    (1) program -> TYPE MAIN LPAREN RPAREN LBRACE fbody RBRACE .

    $end            reduce using rule 1 (program -> TYPE MAIN LPAREN RPAREN LBRACE fbody RBRACE .)


state 15

    (8) assignment -> VALOF NAME . EQUALS NUMBER DELIM
    (9) assignment -> VALOF NAME . EQUALS VALOF NAME DELIM

    EQUALS          shift and go to state 18


state 16

    (6) declaration -> TYPE NAME . DELIM

    DELIM           shift and go to state 19


state 17

    (7) declaration -> TYPE VALOF . NAME DELIM

    NAME            shift and go to state 20


state 18

    (8) assignment -> VALOF NAME EQUALS . NUMBER DELIM
    (9) assignment -> VALOF NAME EQUALS . VALOF NAME DELIM

    NUMBER          shift and go to state 21
    VALOF           shift and go to state 22


state 19

    (6) declaration -> TYPE NAME DELIM .

    VALOF           reduce using rule 6 (declaration -> TYPE NAME DELIM .)
    TYPE            reduce using rule 6 (declaration -> TYPE NAME DELIM .)
    RBRACE          reduce using rule 6 (declaration -> TYPE NAME DELIM .)


state 20

    (7) declaration -> TYPE VALOF NAME . DELIM

    DELIM           shift and go to state 23


state 21

    (8) assignment -> VALOF NAME EQUALS NUMBER . DELIM

    DELIM           shift and go to state 24


state 22

    (9) assignment -> VALOF NAME EQUALS VALOF . NAME DELIM

    NAME            shift and go to state 25


state 23

    (7) declaration -> TYPE VALOF NAME DELIM .

    VALOF           reduce using rule 7 (declaration -> TYPE VALOF NAME DELIM .)
    TYPE            reduce using rule 7 (declaration -> TYPE VALOF NAME DELIM .)
    RBRACE          reduce using rule 7 (declaration -> TYPE VALOF NAME DELIM .)


state 24

    (8) assignment -> VALOF NAME EQUALS NUMBER DELIM .

    VALOF           reduce using rule 8 (assignment -> VALOF NAME EQUALS NUMBER DELIM .)
    TYPE            reduce using rule 8 (assignment -> VALOF NAME EQUALS NUMBER DELIM .)
    RBRACE          reduce using rule 8 (assignment -> VALOF NAME EQUALS NUMBER DELIM .)


state 25

    (9) assignment -> VALOF NAME EQUALS VALOF NAME . DELIM

    DELIM           shift and go to state 26


state 26

    (9) assignment -> VALOF NAME EQUALS VALOF NAME DELIM .

    VALOF           reduce using rule 9 (assignment -> VALOF NAME EQUALS VALOF NAME DELIM .)
    TYPE            reduce using rule 9 (assignment -> VALOF NAME EQUALS VALOF NAME DELIM .)
    RBRACE          reduce using rule 9 (assignment -> VALOF NAME EQUALS VALOF NAME DELIM .)

