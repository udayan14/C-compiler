
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'E1F32D59CAB4EE9C52FA6EAADA0719D1'
    
_lr_action_items = {'EQUALS':([13,24,25,34,35,],[26,-28,36,-26,-27,]),'TYPE':([0,3,8,9,11,16,27,28,29,],[1,1,10,10,-7,-6,-15,-3,-8,]),'LPAREN':([4,26,36,37,41,46,47,48,49,],[6,37,37,37,37,37,37,37,37,]),'COMMA':([20,21,30,31,],[32,33,-14,-13,]),'RBRACE':([9,11,15,16,17,27,29,],[-4,-7,28,-6,-5,-15,-8,]),'TIMES':([8,9,10,11,12,16,19,22,23,24,26,27,29,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,],[12,12,19,-7,22,-6,19,22,22,-28,22,-15,-8,19,19,-26,-27,22,22,-24,-25,48,22,48,48,22,22,22,22,-22,-23,48,-20,-21,48,]),'NUMBER':([26,36,37,41,46,47,48,49,],[38,38,38,38,38,38,38,38,]),'NAME':([1,8,9,10,11,12,16,19,22,23,26,27,29,32,33,36,37,41,46,47,48,49,],[4,13,13,20,-7,24,-6,30,24,24,24,-15,-8,20,20,24,24,24,24,24,24,24,]),'ADDROF':([12,22,23,26,36,37,41,46,47,48,49,],[23,23,23,23,23,23,23,23,23,23,23,]),'LBRACE':([7,],[8,]),'SEMICOLON':([14,18,20,21,24,30,31,34,35,38,39,40,42,43,44,50,51,52,53,54,55,],[27,29,-9,-11,-28,-14,-13,-26,-27,-24,-25,-17,-10,-12,-16,-22,-23,-19,-20,-21,-18,]),'$end':([2,3,5,28,],[0,-1,-2,-3,]),'MINUS':([24,26,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,],[-28,41,-26,-27,41,41,-24,-25,46,41,46,46,41,41,41,41,-22,-23,-19,-20,-21,-18,]),'RPAREN':([6,24,34,35,38,39,45,50,51,52,53,54,55,],[7,-28,-26,-27,-24,-25,51,-22,-23,-19,-20,-21,-18,]),'DIVIDE':([24,34,35,38,39,40,44,45,50,51,52,53,54,55,],[-28,-26,-27,-24,-25,47,47,47,-22,-23,47,-20,-21,47,]),'PLUS':([24,34,35,38,39,40,44,45,50,51,52,53,54,55,],[-28,-26,-27,-24,-25,49,49,49,-22,-23,-19,-20,-21,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([8,9,],[9,9,]),'assignment_base':([8,9,],[14,14,]),'expression':([26,36,37,41,46,47,48,49,],[40,44,45,50,52,53,54,55,]),'program':([0,3,],[2,5,]),'fbody':([8,9,],[15,17,]),'dlist1':([10,32,33,],[18,42,43,]),'declaration':([8,9,],[11,11,]),'pointervar':([12,22,23,26,36,37,41,46,47,48,49,],[25,34,35,39,39,39,39,39,39,39,39,]),'specialvar':([10,19,32,33,],[21,31,21,21,]),'assignment':([8,9,],[16,16,]),'function':([0,3,],[3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','150070001-150070018.py',124),
  ('program -> function program','program',2,'p_program','150070001-150070018.py',125),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','150070001-150070018.py',149),
  ('fbody -> statement','fbody',1,'p_fbody','150070001-150070018.py',183),
  ('fbody -> statement fbody','fbody',2,'p_fbody','150070001-150070018.py',184),
  ('statement -> assignment','statement',1,'p_statement_expr','150070001-150070018.py',201),
  ('statement -> declaration','statement',1,'p_statement_expr','150070001-150070018.py',202),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','150070001-150070018.py',207),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','150070001-150070018.py',213),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','150070001-150070018.py',214),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','150070001-150070018.py',221),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','150070001-150070018.py',222),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar','150070001-150070018.py',229),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar','150070001-150070018.py',230),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','150070001-150070018.py',235),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','150070001-150070018.py',244),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','150070001-150070018.py',245),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','150070001-150070018.py',265),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','150070001-150070018.py',266),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','150070001-150070018.py',267),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','150070001-150070018.py',284),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','150070001-150070018.py',292),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','150070001-150070018.py',299),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','150070001-150070018.py',305),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','150070001-150070018.py',311),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','150070001-150070018.py',318),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','150070001-150070018.py',324),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','150070001-150070018.py',331),
]
