
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'E1F32D59CAB4EE9C52FA6EAADA0719D1'
    
_lr_action_items = {'DIVIDE':([19,29,30,34,35,36,42,43,44,51,52,53,54,55,],[-28,-26,-27,-25,-24,45,45,45,-22,-23,-20,-21,45,45,]),'TIMES':([8,9,10,14,15,16,18,19,20,22,23,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,51,52,53,54,55,],[10,10,18,-6,28,-7,18,-28,18,18,-15,28,-26,-27,18,18,18,-25,-24,46,28,-8,28,46,46,-22,18,18,18,18,-23,-20,-21,46,46,]),'RPAREN':([6,19,29,30,34,35,43,44,51,52,53,54,55,],[7,-28,-26,-27,-25,-24,51,-22,-23,-20,-21,-19,-18,]),'NAME':([1,8,9,10,14,15,16,18,20,22,23,28,31,32,33,37,38,39,45,46,47,48,],[4,11,11,19,-6,25,-7,19,19,19,-15,41,19,19,19,25,-8,25,19,19,19,19,]),'LPAREN':([4,22,31,32,33,45,46,47,48,],[6,32,32,32,32,32,32,32,32,]),'MINUS':([19,22,29,30,31,32,33,34,35,36,42,43,44,45,46,47,48,51,52,53,54,55,],[-28,33,-26,-27,33,33,33,-25,-24,47,47,47,-22,33,33,33,33,-23,-20,-21,-19,-18,]),'ADDROF':([10,18,20,22,31,32,33,45,46,47,48,],[20,20,20,20,20,20,20,20,20,20,20,]),'SEMICOLON':([12,19,25,26,27,29,30,34,35,36,40,41,42,44,49,50,51,52,53,54,55,],[23,-28,-9,38,-11,-26,-27,-25,-24,-17,-13,-14,-16,-22,-10,-12,-23,-20,-21,-19,-18,]),'PLUS':([19,29,30,34,35,36,42,43,44,51,52,53,54,55,],[-28,-26,-27,-25,-24,48,48,48,-22,-23,-20,-21,-19,-18,]),'LBRACE':([7,],[8,]),'TYPE':([0,2,8,9,14,16,23,24,38,],[1,1,15,15,-6,-7,-15,-3,-8,]),'RBRACE':([9,13,14,16,17,23,38,],[-4,24,-6,-7,-5,-15,-8,]),'COMMA':([25,27,40,41,],[37,39,-13,-14,]),'NUMBER':([22,31,32,33,45,46,47,48,],[35,35,35,35,35,35,35,35,]),'EQUALS':([11,19,21,29,30,],[22,-28,31,-26,-27,]),'$end':([2,3,5,24,],[-1,0,-2,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([8,9,],[9,9,]),'expression':([22,31,32,33,45,46,47,48,],[36,42,43,44,52,53,54,55,]),'specialvar':([15,28,37,39,],[27,40,27,27,]),'assignment_base':([8,9,],[12,12,]),'function':([0,2,],[2,2,]),'dlist1':([15,37,39,],[26,49,50,]),'pointervar':([10,18,20,22,31,32,33,45,46,47,48,],[21,29,30,34,34,34,34,34,34,34,34,]),'program':([0,2,],[3,5,]),'fbody':([8,9,],[13,17,]),'assignment':([8,9,],[14,14,]),'declaration':([8,9,],[16,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','150070001-150070018.py',124),
  ('program -> function program','program',2,'p_program','150070001-150070018.py',125),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','150070001-150070018.py',149),
  ('fbody -> statement','fbody',1,'p_fbody','150070001-150070018.py',172),
  ('fbody -> statement fbody','fbody',2,'p_fbody','150070001-150070018.py',173),
  ('statement -> assignment','statement',1,'p_statement_expr','150070001-150070018.py',190),
  ('statement -> declaration','statement',1,'p_statement_expr','150070001-150070018.py',191),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','150070001-150070018.py',196),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','150070001-150070018.py',202),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','150070001-150070018.py',203),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','150070001-150070018.py',210),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','150070001-150070018.py',211),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar','150070001-150070018.py',218),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar','150070001-150070018.py',219),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','150070001-150070018.py',224),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','150070001-150070018.py',233),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','150070001-150070018.py',234),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','150070001-150070018.py',254),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','150070001-150070018.py',255),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','150070001-150070018.py',256),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','150070001-150070018.py',273),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','150070001-150070018.py',281),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','150070001-150070018.py',288),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','150070001-150070018.py',294),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','150070001-150070018.py',300),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','150070001-150070018.py',307),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','150070001-150070018.py',313),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','150070001-150070018.py',320),
]
