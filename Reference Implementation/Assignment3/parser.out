Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     program -> function program
Rule 3     function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE
Rule 4     fbody -> allstatement
Rule 5     fbody -> allstatement fbody
Rule 6     allstatement -> statement
Rule 7     allstatement -> unmatchedstatement
Rule 8     statement -> assignment
Rule 9     statement -> declaration
Rule 10    statement -> whileblock
Rule 11    statement -> ifblock
Rule 12    unmatchedstatement -> IF LPAREN conditional RPAREN allstatement
Rule 13    unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
Rule 14    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
Rule 15    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 16    ifblock -> IF LPAREN conditional RPAREN statement ELSE statement
Rule 17    ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
Rule 18    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
Rule 19    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
Rule 20    ifblock -> IF LPAREN conditional RPAREN SEMICOLON
Rule 21    ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE
Rule 22    whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 23    whileblock -> WHILE LPAREN conditional RPAREN statement
Rule 24    conditional -> CS
Rule 25    conditional -> conditional LESSTHANEQ conditional
Rule 26    conditional -> conditional GREATERTHANEQ conditional
Rule 27    conditional -> conditional UNEQUAL conditional
Rule 28    conditional -> conditional EQUALCHECK conditional
Rule 29    conditional -> conditional LESSTHAN conditional
Rule 30    conditional -> conditional GREATERTHAN conditional
Rule 31    conditional -> conditional ANDOPERATOR conditional
Rule 32    CS -> expression
Rule 33    CS -> NOT LPAREN expression RPAREN
Rule 34    declaration -> TYPE dlist1 SEMICOLON
Rule 35    dlist1 -> NAME
Rule 36    dlist1 -> NAME COMMA dlist1
Rule 37    dlist1 -> specialvar
Rule 38    dlist1 -> specialvar COMMA dlist1
Rule 39    specialvar -> TIMES specialvar
Rule 40    specialvar -> TIMES NAME
Rule 41    assignment -> assignment_base SEMICOLON
Rule 42    assignment_base -> TIMES pointervar EQUALS expression
Rule 43    assignment_base -> NAME EQUALS expression
Rule 44    expression -> expression PLUS expression
Rule 45    expression -> expression MINUS expression
Rule 46    expression -> expression DIVIDE expression
Rule 47    expression -> expression TIMES expression
Rule 48    expression -> MINUS expression
Rule 49    expression -> LPAREN expression RPAREN
Rule 50    expression -> NUMBER
Rule 51    expression -> pointervar
Rule 52    pointervar -> TIMES pointervar
Rule 53    pointervar -> ANDOPERATOR pointervar
Rule 54    pointervar -> NAME

Terminals, with rules where they appear

ANDOPERATOR          : 31 53
COMMA                : 36 38
DIVIDE               : 46
ELSE                 : 13 14 16 17 18 19
EQUALCHECK           : 28
EQUALS               : 42 43
GREATERTHAN          : 30
GREATERTHANEQ        : 26
IF                   : 12 13 14 15 16 17 18 19 20 21
LBRACE               : 3 14 15 17 18 18 19 21 22
LESSTHAN             : 29
LESSTHANEQ           : 25
LPAREN               : 3 12 13 14 15 16 17 18 19 20 21 22 23 33 49
MINUS                : 45 48
NAME                 : 3 35 36 40 43 54
NOT                  : 33
NUMBER               : 50
PLUS                 : 44
RBRACE               : 3 14 15 17 18 18 19 21 22
RPAREN               : 3 12 13 14 15 16 17 18 19 20 21 22 23 33 49
SEMICOLON            : 20 34 41
TIMES                : 39 40 42 47 52
TYPE                 : 3 34
UNEQUAL              : 27
WHILE                : 22 23
error                : 

Nonterminals, with rules where they appear

CS                   : 24
allstatement         : 4 5 12
assignment           : 8
assignment_base      : 41
conditional          : 12 13 14 15 16 17 18 19 20 21 22 23 25 25 26 26 27 27 28 28 29 29 30 30 31 31
declaration          : 9
dlist1               : 34 36 38
expression           : 32 33 42 43 44 44 45 45 46 46 47 47 48 49
fbody                : 3 5 14 15 17 18 18 19 22
function             : 1 2
ifblock              : 11
pointervar           : 42 51 52 53
program              : 2 0
specialvar           : 37 38 39
statement            : 6 13 16 16 17 19 23
unmatchedstatement   : 7 13 14
whileblock           : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    TYPE            shift and go to state 2

    function                       shift and go to state 1
    program                        shift and go to state 3

state 1

    (1) program -> function .
    (2) program -> function . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    $end            reduce using rule 1 (program -> function .)
    TYPE            shift and go to state 2

    function                       shift and go to state 1
    program                        shift and go to state 4

state 2

    (3) function -> TYPE . NAME LPAREN RPAREN LBRACE fbody RBRACE

    NAME            shift and go to state 5


state 3

    (0) S' -> program .



state 4

    (2) program -> function program .

    $end            reduce using rule 2 (program -> function program .)


state 5

    (3) function -> TYPE NAME . LPAREN RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 6


state 6

    (3) function -> TYPE NAME LPAREN . RPAREN LBRACE fbody RBRACE

    RPAREN          shift and go to state 7


state 7

    (3) function -> TYPE NAME LPAREN RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 8


state 8

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 15
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 9
    allstatement                   shift and go to state 19
    assignment                     shift and go to state 12
    fbody                          shift and go to state 14
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    unmatchedstatement             shift and go to state 20
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 9

    (6) allstatement -> statement .

    IF              reduce using rule 6 (allstatement -> statement .)
    TYPE            reduce using rule 6 (allstatement -> statement .)
    WHILE           reduce using rule 6 (allstatement -> statement .)
    TIMES           reduce using rule 6 (allstatement -> statement .)
    NAME            reduce using rule 6 (allstatement -> statement .)
    RBRACE          reduce using rule 6 (allstatement -> statement .)


state 10

    (42) assignment_base -> TIMES . pointervar EQUALS expression
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 26

state 11

    (22) whileblock -> WHILE . LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> WHILE . LPAREN conditional RPAREN statement

    LPAREN          shift and go to state 27


state 12

    (8) statement -> assignment .

    ELSE            reduce using rule 8 (statement -> assignment .)
    IF              reduce using rule 8 (statement -> assignment .)
    TYPE            reduce using rule 8 (statement -> assignment .)
    WHILE           reduce using rule 8 (statement -> assignment .)
    TIMES           reduce using rule 8 (statement -> assignment .)
    NAME            reduce using rule 8 (statement -> assignment .)
    RBRACE          reduce using rule 8 (statement -> assignment .)


state 13

    (43) assignment_base -> NAME . EQUALS expression

    EQUALS          shift and go to state 28


state 14

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 29


state 15

    (12) unmatchedstatement -> IF . LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> IF . LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> IF . LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> IF . LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF . LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> IF . LPAREN conditional RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 30


state 16

    (34) declaration -> TYPE . dlist1 SEMICOLON
    (35) dlist1 -> . NAME
    (36) dlist1 -> . NAME COMMA dlist1
    (37) dlist1 -> . specialvar
    (38) dlist1 -> . specialvar COMMA dlist1
    (39) specialvar -> . TIMES specialvar
    (40) specialvar -> . TIMES NAME

    NAME            shift and go to state 34
    TIMES           shift and go to state 32

    dlist1                         shift and go to state 31
    specialvar                     shift and go to state 33

state 17

    (9) statement -> declaration .

    ELSE            reduce using rule 9 (statement -> declaration .)
    IF              reduce using rule 9 (statement -> declaration .)
    TYPE            reduce using rule 9 (statement -> declaration .)
    WHILE           reduce using rule 9 (statement -> declaration .)
    TIMES           reduce using rule 9 (statement -> declaration .)
    NAME            reduce using rule 9 (statement -> declaration .)
    RBRACE          reduce using rule 9 (statement -> declaration .)


state 18

    (10) statement -> whileblock .

    ELSE            reduce using rule 10 (statement -> whileblock .)
    IF              reduce using rule 10 (statement -> whileblock .)
    TYPE            reduce using rule 10 (statement -> whileblock .)
    WHILE           reduce using rule 10 (statement -> whileblock .)
    TIMES           reduce using rule 10 (statement -> whileblock .)
    NAME            reduce using rule 10 (statement -> whileblock .)
    RBRACE          reduce using rule 10 (statement -> whileblock .)


state 19

    (4) fbody -> allstatement .
    (5) fbody -> allstatement . fbody
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 4 (fbody -> allstatement .)
    IF              shift and go to state 15
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 9
    allstatement                   shift and go to state 19
    assignment                     shift and go to state 12
    fbody                          shift and go to state 35
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    unmatchedstatement             shift and go to state 20
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 20

    (7) allstatement -> unmatchedstatement .

    IF              reduce using rule 7 (allstatement -> unmatchedstatement .)
    TYPE            reduce using rule 7 (allstatement -> unmatchedstatement .)
    WHILE           reduce using rule 7 (allstatement -> unmatchedstatement .)
    TIMES           reduce using rule 7 (allstatement -> unmatchedstatement .)
    NAME            reduce using rule 7 (allstatement -> unmatchedstatement .)
    RBRACE          reduce using rule 7 (allstatement -> unmatchedstatement .)


state 21

    (41) assignment -> assignment_base . SEMICOLON

    SEMICOLON       shift and go to state 36


state 22

    (11) statement -> ifblock .

    ELSE            reduce using rule 11 (statement -> ifblock .)
    IF              reduce using rule 11 (statement -> ifblock .)
    TYPE            reduce using rule 11 (statement -> ifblock .)
    WHILE           reduce using rule 11 (statement -> ifblock .)
    TIMES           reduce using rule 11 (statement -> ifblock .)
    NAME            reduce using rule 11 (statement -> ifblock .)
    RBRACE          reduce using rule 11 (statement -> ifblock .)


state 23

    (53) pointervar -> ANDOPERATOR . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 37

state 24

    (54) pointervar -> NAME .

    RPAREN          reduce using rule 54 (pointervar -> NAME .)
    PLUS            reduce using rule 54 (pointervar -> NAME .)
    MINUS           reduce using rule 54 (pointervar -> NAME .)
    DIVIDE          reduce using rule 54 (pointervar -> NAME .)
    TIMES           reduce using rule 54 (pointervar -> NAME .)
    EQUALS          reduce using rule 54 (pointervar -> NAME .)
    LESSTHANEQ      reduce using rule 54 (pointervar -> NAME .)
    GREATERTHANEQ   reduce using rule 54 (pointervar -> NAME .)
    UNEQUAL         reduce using rule 54 (pointervar -> NAME .)
    EQUALCHECK      reduce using rule 54 (pointervar -> NAME .)
    LESSTHAN        reduce using rule 54 (pointervar -> NAME .)
    GREATERTHAN     reduce using rule 54 (pointervar -> NAME .)
    ANDOPERATOR     reduce using rule 54 (pointervar -> NAME .)
    SEMICOLON       reduce using rule 54 (pointervar -> NAME .)


state 25

    (52) pointervar -> TIMES . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 38

state 26

    (42) assignment_base -> TIMES pointervar . EQUALS expression

    EQUALS          shift and go to state 39


state 27

    (22) whileblock -> WHILE LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> WHILE LPAREN . conditional RPAREN statement
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) CS -> . expression
    (33) CS -> . NOT LPAREN expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    NOT             shift and go to state 43
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    CS                             shift and go to state 46
    conditional                    shift and go to state 44
    expression                     shift and go to state 47
    pointervar                     shift and go to state 45

state 28

    (43) assignment_base -> NAME EQUALS . expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 45
    expression                     shift and go to state 48

state 29

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .

    TYPE            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)
    $end            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)


state 30

    (12) unmatchedstatement -> IF LPAREN . conditional RPAREN allstatement
    (13) unmatchedstatement -> IF LPAREN . conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (16) ifblock -> IF LPAREN . conditional RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN . conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN . conditional RPAREN SEMICOLON
    (21) ifblock -> IF LPAREN . conditional RPAREN LBRACE RBRACE
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) CS -> . expression
    (33) CS -> . NOT LPAREN expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    NOT             shift and go to state 43
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    conditional                    shift and go to state 49
    CS                             shift and go to state 46
    expression                     shift and go to state 47
    pointervar                     shift and go to state 45

state 31

    (34) declaration -> TYPE dlist1 . SEMICOLON

    SEMICOLON       shift and go to state 50


state 32

    (39) specialvar -> TIMES . specialvar
    (40) specialvar -> TIMES . NAME
    (39) specialvar -> . TIMES specialvar
    (40) specialvar -> . TIMES NAME

    NAME            shift and go to state 52
    TIMES           shift and go to state 32

    specialvar                     shift and go to state 51

state 33

    (37) dlist1 -> specialvar .
    (38) dlist1 -> specialvar . COMMA dlist1

    SEMICOLON       reduce using rule 37 (dlist1 -> specialvar .)
    COMMA           shift and go to state 53


state 34

    (35) dlist1 -> NAME .
    (36) dlist1 -> NAME . COMMA dlist1

    SEMICOLON       reduce using rule 35 (dlist1 -> NAME .)
    COMMA           shift and go to state 54


state 35

    (5) fbody -> allstatement fbody .

    RBRACE          reduce using rule 5 (fbody -> allstatement fbody .)


state 36

    (41) assignment -> assignment_base SEMICOLON .

    IF              reduce using rule 41 (assignment -> assignment_base SEMICOLON .)
    TYPE            reduce using rule 41 (assignment -> assignment_base SEMICOLON .)
    WHILE           reduce using rule 41 (assignment -> assignment_base SEMICOLON .)
    TIMES           reduce using rule 41 (assignment -> assignment_base SEMICOLON .)
    NAME            reduce using rule 41 (assignment -> assignment_base SEMICOLON .)
    RBRACE          reduce using rule 41 (assignment -> assignment_base SEMICOLON .)
    ELSE            reduce using rule 41 (assignment -> assignment_base SEMICOLON .)


state 37

    (53) pointervar -> ANDOPERATOR pointervar .

    RPAREN          reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    PLUS            reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    MINUS           reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    DIVIDE          reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    TIMES           reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    EQUALS          reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    LESSTHANEQ      reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    GREATERTHANEQ   reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    UNEQUAL         reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    EQUALCHECK      reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    LESSTHAN        reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    GREATERTHAN     reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    ANDOPERATOR     reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)
    SEMICOLON       reduce using rule 53 (pointervar -> ANDOPERATOR pointervar .)


state 38

    (52) pointervar -> TIMES pointervar .

    RPAREN          reduce using rule 52 (pointervar -> TIMES pointervar .)
    PLUS            reduce using rule 52 (pointervar -> TIMES pointervar .)
    MINUS           reduce using rule 52 (pointervar -> TIMES pointervar .)
    DIVIDE          reduce using rule 52 (pointervar -> TIMES pointervar .)
    TIMES           reduce using rule 52 (pointervar -> TIMES pointervar .)
    EQUALS          reduce using rule 52 (pointervar -> TIMES pointervar .)
    LESSTHANEQ      reduce using rule 52 (pointervar -> TIMES pointervar .)
    GREATERTHANEQ   reduce using rule 52 (pointervar -> TIMES pointervar .)
    UNEQUAL         reduce using rule 52 (pointervar -> TIMES pointervar .)
    EQUALCHECK      reduce using rule 52 (pointervar -> TIMES pointervar .)
    LESSTHAN        reduce using rule 52 (pointervar -> TIMES pointervar .)
    GREATERTHAN     reduce using rule 52 (pointervar -> TIMES pointervar .)
    ANDOPERATOR     reduce using rule 52 (pointervar -> TIMES pointervar .)
    SEMICOLON       reduce using rule 52 (pointervar -> TIMES pointervar .)


state 39

    (42) assignment_base -> TIMES pointervar EQUALS . expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    expression                     shift and go to state 55
    pointervar                     shift and go to state 45

state 40

    (50) expression -> NUMBER .

    PLUS            reduce using rule 50 (expression -> NUMBER .)
    MINUS           reduce using rule 50 (expression -> NUMBER .)
    DIVIDE          reduce using rule 50 (expression -> NUMBER .)
    TIMES           reduce using rule 50 (expression -> NUMBER .)
    RPAREN          reduce using rule 50 (expression -> NUMBER .)
    LESSTHANEQ      reduce using rule 50 (expression -> NUMBER .)
    GREATERTHANEQ   reduce using rule 50 (expression -> NUMBER .)
    UNEQUAL         reduce using rule 50 (expression -> NUMBER .)
    EQUALCHECK      reduce using rule 50 (expression -> NUMBER .)
    LESSTHAN        reduce using rule 50 (expression -> NUMBER .)
    GREATERTHAN     reduce using rule 50 (expression -> NUMBER .)
    ANDOPERATOR     reduce using rule 50 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 50 (expression -> NUMBER .)


state 41

    (48) expression -> MINUS . expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 45
    expression                     shift and go to state 56

state 42

    (49) expression -> LPAREN . expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 45
    expression                     shift and go to state 57

state 43

    (33) CS -> NOT . LPAREN expression RPAREN

    LPAREN          shift and go to state 58


state 44

    (22) whileblock -> WHILE LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (23) whileblock -> WHILE LPAREN conditional . RPAREN statement
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional

    RPAREN          shift and go to state 61
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 66
    UNEQUAL         shift and go to state 63
    EQUALCHECK      shift and go to state 60
    LESSTHAN        shift and go to state 62
    GREATERTHAN     shift and go to state 65
    ANDOPERATOR     shift and go to state 59


state 45

    (51) expression -> pointervar .

    PLUS            reduce using rule 51 (expression -> pointervar .)
    MINUS           reduce using rule 51 (expression -> pointervar .)
    DIVIDE          reduce using rule 51 (expression -> pointervar .)
    TIMES           reduce using rule 51 (expression -> pointervar .)
    RPAREN          reduce using rule 51 (expression -> pointervar .)
    LESSTHANEQ      reduce using rule 51 (expression -> pointervar .)
    GREATERTHANEQ   reduce using rule 51 (expression -> pointervar .)
    UNEQUAL         reduce using rule 51 (expression -> pointervar .)
    EQUALCHECK      reduce using rule 51 (expression -> pointervar .)
    LESSTHAN        reduce using rule 51 (expression -> pointervar .)
    GREATERTHAN     reduce using rule 51 (expression -> pointervar .)
    ANDOPERATOR     reduce using rule 51 (expression -> pointervar .)
    SEMICOLON       reduce using rule 51 (expression -> pointervar .)


state 46

    (24) conditional -> CS .

    LESSTHANEQ      reduce using rule 24 (conditional -> CS .)
    GREATERTHANEQ   reduce using rule 24 (conditional -> CS .)
    UNEQUAL         reduce using rule 24 (conditional -> CS .)
    EQUALCHECK      reduce using rule 24 (conditional -> CS .)
    LESSTHAN        reduce using rule 24 (conditional -> CS .)
    GREATERTHAN     reduce using rule 24 (conditional -> CS .)
    ANDOPERATOR     reduce using rule 24 (conditional -> CS .)
    RPAREN          reduce using rule 24 (conditional -> CS .)


state 47

    (32) CS -> expression .
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression

    LESSTHANEQ      reduce using rule 32 (CS -> expression .)
    GREATERTHANEQ   reduce using rule 32 (CS -> expression .)
    UNEQUAL         reduce using rule 32 (CS -> expression .)
    EQUALCHECK      reduce using rule 32 (CS -> expression .)
    LESSTHAN        reduce using rule 32 (CS -> expression .)
    GREATERTHAN     reduce using rule 32 (CS -> expression .)
    ANDOPERATOR     reduce using rule 32 (CS -> expression .)
    RPAREN          reduce using rule 32 (CS -> expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 67
    DIVIDE          shift and go to state 68
    TIMES           shift and go to state 70


state 48

    (43) assignment_base -> NAME EQUALS expression .
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 43 (assignment_base -> NAME EQUALS expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 67
    DIVIDE          shift and go to state 68
    TIMES           shift and go to state 70


state 49

    (12) unmatchedstatement -> IF LPAREN conditional . RPAREN allstatement
    (13) unmatchedstatement -> IF LPAREN conditional . RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (16) ifblock -> IF LPAREN conditional . RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN conditional . RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN conditional . RPAREN SEMICOLON
    (21) ifblock -> IF LPAREN conditional . RPAREN LBRACE RBRACE
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional

    RPAREN          shift and go to state 71
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 66
    UNEQUAL         shift and go to state 63
    EQUALCHECK      shift and go to state 60
    LESSTHAN        shift and go to state 62
    GREATERTHAN     shift and go to state 65
    ANDOPERATOR     shift and go to state 59


state 50

    (34) declaration -> TYPE dlist1 SEMICOLON .

    IF              reduce using rule 34 (declaration -> TYPE dlist1 SEMICOLON .)
    TYPE            reduce using rule 34 (declaration -> TYPE dlist1 SEMICOLON .)
    WHILE           reduce using rule 34 (declaration -> TYPE dlist1 SEMICOLON .)
    TIMES           reduce using rule 34 (declaration -> TYPE dlist1 SEMICOLON .)
    NAME            reduce using rule 34 (declaration -> TYPE dlist1 SEMICOLON .)
    RBRACE          reduce using rule 34 (declaration -> TYPE dlist1 SEMICOLON .)
    ELSE            reduce using rule 34 (declaration -> TYPE dlist1 SEMICOLON .)


state 51

    (39) specialvar -> TIMES specialvar .

    COMMA           reduce using rule 39 (specialvar -> TIMES specialvar .)
    SEMICOLON       reduce using rule 39 (specialvar -> TIMES specialvar .)


state 52

    (40) specialvar -> TIMES NAME .

    COMMA           reduce using rule 40 (specialvar -> TIMES NAME .)
    SEMICOLON       reduce using rule 40 (specialvar -> TIMES NAME .)


state 53

    (38) dlist1 -> specialvar COMMA . dlist1
    (35) dlist1 -> . NAME
    (36) dlist1 -> . NAME COMMA dlist1
    (37) dlist1 -> . specialvar
    (38) dlist1 -> . specialvar COMMA dlist1
    (39) specialvar -> . TIMES specialvar
    (40) specialvar -> . TIMES NAME

    NAME            shift and go to state 34
    TIMES           shift and go to state 32

    specialvar                     shift and go to state 33
    dlist1                         shift and go to state 72

state 54

    (36) dlist1 -> NAME COMMA . dlist1
    (35) dlist1 -> . NAME
    (36) dlist1 -> . NAME COMMA dlist1
    (37) dlist1 -> . specialvar
    (38) dlist1 -> . specialvar COMMA dlist1
    (39) specialvar -> . TIMES specialvar
    (40) specialvar -> . TIMES NAME

    NAME            shift and go to state 34
    TIMES           shift and go to state 32

    dlist1                         shift and go to state 73
    specialvar                     shift and go to state 33

state 55

    (42) assignment_base -> TIMES pointervar EQUALS expression .
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 42 (assignment_base -> TIMES pointervar EQUALS expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 67
    DIVIDE          shift and go to state 68
    TIMES           shift and go to state 70


state 56

    (48) expression -> MINUS expression .
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression

    PLUS            reduce using rule 48 (expression -> MINUS expression .)
    MINUS           reduce using rule 48 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 48 (expression -> MINUS expression .)
    TIMES           reduce using rule 48 (expression -> MINUS expression .)
    RPAREN          reduce using rule 48 (expression -> MINUS expression .)
    LESSTHANEQ      reduce using rule 48 (expression -> MINUS expression .)
    GREATERTHANEQ   reduce using rule 48 (expression -> MINUS expression .)
    UNEQUAL         reduce using rule 48 (expression -> MINUS expression .)
    EQUALCHECK      reduce using rule 48 (expression -> MINUS expression .)
    LESSTHAN        reduce using rule 48 (expression -> MINUS expression .)
    GREATERTHAN     reduce using rule 48 (expression -> MINUS expression .)
    ANDOPERATOR     reduce using rule 48 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 48 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 70 ]


state 57

    (49) expression -> LPAREN expression . RPAREN
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression

    RPAREN          shift and go to state 74
    PLUS            shift and go to state 69
    MINUS           shift and go to state 67
    DIVIDE          shift and go to state 68
    TIMES           shift and go to state 70


state 58

    (33) CS -> NOT LPAREN . expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 45
    expression                     shift and go to state 75

state 59

    (31) conditional -> conditional ANDOPERATOR . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) CS -> . expression
    (33) CS -> . NOT LPAREN expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    NOT             shift and go to state 43
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    CS                             shift and go to state 46
    conditional                    shift and go to state 76
    pointervar                     shift and go to state 45
    expression                     shift and go to state 47

state 60

    (28) conditional -> conditional EQUALCHECK . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) CS -> . expression
    (33) CS -> . NOT LPAREN expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    NOT             shift and go to state 43
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    CS                             shift and go to state 46
    conditional                    shift and go to state 77
    pointervar                     shift and go to state 45
    expression                     shift and go to state 47

state 61

    (22) whileblock -> WHILE LPAREN conditional RPAREN . LBRACE fbody RBRACE
    (23) whileblock -> WHILE LPAREN conditional RPAREN . statement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 80
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    IF              shift and go to state 79
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 78
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment                     shift and go to state 12
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 62

    (29) conditional -> conditional LESSTHAN . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) CS -> . expression
    (33) CS -> . NOT LPAREN expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    NOT             shift and go to state 43
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    CS                             shift and go to state 46
    conditional                    shift and go to state 81
    pointervar                     shift and go to state 45
    expression                     shift and go to state 47

state 63

    (27) conditional -> conditional UNEQUAL . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) CS -> . expression
    (33) CS -> . NOT LPAREN expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    NOT             shift and go to state 43
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    CS                             shift and go to state 46
    conditional                    shift and go to state 82
    pointervar                     shift and go to state 45
    expression                     shift and go to state 47

state 64

    (25) conditional -> conditional LESSTHANEQ . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) CS -> . expression
    (33) CS -> . NOT LPAREN expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    NOT             shift and go to state 43
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    CS                             shift and go to state 46
    conditional                    shift and go to state 83
    pointervar                     shift and go to state 45
    expression                     shift and go to state 47

state 65

    (30) conditional -> conditional GREATERTHAN . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) CS -> . expression
    (33) CS -> . NOT LPAREN expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    NOT             shift and go to state 43
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    CS                             shift and go to state 46
    conditional                    shift and go to state 84
    pointervar                     shift and go to state 45
    expression                     shift and go to state 47

state 66

    (26) conditional -> conditional GREATERTHANEQ . conditional
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) CS -> . expression
    (33) CS -> . NOT LPAREN expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    NOT             shift and go to state 43
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    CS                             shift and go to state 46
    conditional                    shift and go to state 85
    pointervar                     shift and go to state 45
    expression                     shift and go to state 47

state 67

    (45) expression -> expression MINUS . expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 45
    expression                     shift and go to state 86

state 68

    (46) expression -> expression DIVIDE . expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 45
    expression                     shift and go to state 87

state 69

    (44) expression -> expression PLUS . expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 45
    expression                     shift and go to state 88

state 70

    (47) expression -> expression TIMES . expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    pointervar                     shift and go to state 45
    expression                     shift and go to state 89

state 71

    (12) unmatchedstatement -> IF LPAREN conditional RPAREN . allstatement
    (13) unmatchedstatement -> IF LPAREN conditional RPAREN . statement ELSE unmatchedstatement
    (14) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE
    (16) ifblock -> IF LPAREN conditional RPAREN . statement ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN . statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN conditional RPAREN . SEMICOLON
    (21) ifblock -> IF LPAREN conditional RPAREN . LBRACE RBRACE
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 93
    SEMICOLON       shift and go to state 91
    IF              shift and go to state 15
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 90
    allstatement                   shift and go to state 92
    unmatchedstatement             shift and go to state 20
    assignment                     shift and go to state 12
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 72

    (38) dlist1 -> specialvar COMMA dlist1 .

    SEMICOLON       reduce using rule 38 (dlist1 -> specialvar COMMA dlist1 .)


state 73

    (36) dlist1 -> NAME COMMA dlist1 .

    SEMICOLON       reduce using rule 36 (dlist1 -> NAME COMMA dlist1 .)


state 74

    (49) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LESSTHANEQ      reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    ANDOPERATOR     reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 75

    (33) CS -> NOT LPAREN expression . RPAREN
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression

    RPAREN          shift and go to state 94
    PLUS            shift and go to state 69
    MINUS           shift and go to state 67
    DIVIDE          shift and go to state 68
    TIMES           shift and go to state 70


state 76

    (31) conditional -> conditional ANDOPERATOR conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional

    ANDOPERATOR     reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .)
    RPAREN          reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .)
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 66
    UNEQUAL         shift and go to state 63
    EQUALCHECK      shift and go to state 60
    LESSTHAN        shift and go to state 62
    GREATERTHAN     shift and go to state 65

  ! LESSTHANEQ      [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! UNEQUAL         [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! EQUALCHECK      [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! LESSTHAN        [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! GREATERTHAN     [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! ANDOPERATOR     [ shift and go to state 59 ]


state 77

    (28) conditional -> conditional EQUALCHECK conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional

    UNEQUAL         reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    EQUALCHECK      reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    ANDOPERATOR     reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    RPAREN          reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 66
    LESSTHAN        shift and go to state 62
    GREATERTHAN     shift and go to state 65

  ! LESSTHANEQ      [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! LESSTHAN        [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHAN     [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! UNEQUAL         [ shift and go to state 63 ]
  ! EQUALCHECK      [ shift and go to state 60 ]
  ! ANDOPERATOR     [ shift and go to state 59 ]


state 78

    (23) whileblock -> WHILE LPAREN conditional RPAREN statement .

    IF              reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    TYPE            reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    WHILE           reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    TIMES           reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    NAME            reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    RBRACE          reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)
    ELSE            reduce using rule 23 (whileblock -> WHILE LPAREN conditional RPAREN statement .)


state 79

    (16) ifblock -> IF . LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> IF . LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF . LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> IF . LPAREN conditional RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 95


state 80

    (22) whileblock -> WHILE LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 15
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 9
    allstatement                   shift and go to state 19
    unmatchedstatement             shift and go to state 20
    fbody                          shift and go to state 96
    assignment                     shift and go to state 12
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 81

    (29) conditional -> conditional LESSTHAN conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional

    LESSTHANEQ      reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHANEQ   reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    UNEQUAL         reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    EQUALCHECK      reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    LESSTHAN        reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHAN     reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    ANDOPERATOR     reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    RPAREN          reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 64 ]
  ! GREATERTHANEQ   [ shift and go to state 66 ]
  ! UNEQUAL         [ shift and go to state 63 ]
  ! EQUALCHECK      [ shift and go to state 60 ]
  ! LESSTHAN        [ shift and go to state 62 ]
  ! GREATERTHAN     [ shift and go to state 65 ]
  ! ANDOPERATOR     [ shift and go to state 59 ]


state 82

    (27) conditional -> conditional UNEQUAL conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional

    UNEQUAL         reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    EQUALCHECK      reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    ANDOPERATOR     reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    RPAREN          reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 66
    LESSTHAN        shift and go to state 62
    GREATERTHAN     shift and go to state 65

  ! LESSTHANEQ      [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! LESSTHAN        [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHAN     [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! UNEQUAL         [ shift and go to state 63 ]
  ! EQUALCHECK      [ shift and go to state 60 ]
  ! ANDOPERATOR     [ shift and go to state 59 ]


state 83

    (25) conditional -> conditional LESSTHANEQ conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional

    LESSTHANEQ      reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    UNEQUAL         reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    EQUALCHECK      reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    LESSTHAN        reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHAN     reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    ANDOPERATOR     reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    RPAREN          reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 64 ]
  ! GREATERTHANEQ   [ shift and go to state 66 ]
  ! UNEQUAL         [ shift and go to state 63 ]
  ! EQUALCHECK      [ shift and go to state 60 ]
  ! LESSTHAN        [ shift and go to state 62 ]
  ! GREATERTHAN     [ shift and go to state 65 ]
  ! ANDOPERATOR     [ shift and go to state 59 ]


state 84

    (30) conditional -> conditional GREATERTHAN conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional

    LESSTHANEQ      reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHANEQ   reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    UNEQUAL         reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    EQUALCHECK      reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    LESSTHAN        reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHAN     reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    ANDOPERATOR     reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    RPAREN          reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 64 ]
  ! GREATERTHANEQ   [ shift and go to state 66 ]
  ! UNEQUAL         [ shift and go to state 63 ]
  ! EQUALCHECK      [ shift and go to state 60 ]
  ! LESSTHAN        [ shift and go to state 62 ]
  ! GREATERTHAN     [ shift and go to state 65 ]
  ! ANDOPERATOR     [ shift and go to state 59 ]


state 85

    (26) conditional -> conditional GREATERTHANEQ conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional

    LESSTHANEQ      reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    UNEQUAL         reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    EQUALCHECK      reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    LESSTHAN        reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHAN     reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    ANDOPERATOR     reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    RPAREN          reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 64 ]
  ! GREATERTHANEQ   [ shift and go to state 66 ]
  ! UNEQUAL         [ shift and go to state 63 ]
  ! EQUALCHECK      [ shift and go to state 60 ]
  ! LESSTHAN        [ shift and go to state 62 ]
  ! GREATERTHAN     [ shift and go to state 65 ]
  ! ANDOPERATOR     [ shift and go to state 59 ]


state 86

    (45) expression -> expression MINUS expression .
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression

    PLUS            reduce using rule 45 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 45 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 45 (expression -> expression MINUS expression .)
    LESSTHANEQ      reduce using rule 45 (expression -> expression MINUS expression .)
    GREATERTHANEQ   reduce using rule 45 (expression -> expression MINUS expression .)
    UNEQUAL         reduce using rule 45 (expression -> expression MINUS expression .)
    EQUALCHECK      reduce using rule 45 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 45 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 45 (expression -> expression MINUS expression .)
    ANDOPERATOR     reduce using rule 45 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 68
    TIMES           shift and go to state 70

  ! DIVIDE          [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 67 ]


state 87

    (46) expression -> expression DIVIDE expression .
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression

    PLUS            reduce using rule 46 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 46 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 46 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 46 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 46 (expression -> expression DIVIDE expression .)
    LESSTHANEQ      reduce using rule 46 (expression -> expression DIVIDE expression .)
    GREATERTHANEQ   reduce using rule 46 (expression -> expression DIVIDE expression .)
    UNEQUAL         reduce using rule 46 (expression -> expression DIVIDE expression .)
    EQUALCHECK      reduce using rule 46 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 46 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 46 (expression -> expression DIVIDE expression .)
    ANDOPERATOR     reduce using rule 46 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 70 ]


state 88

    (44) expression -> expression PLUS expression .
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression

    PLUS            reduce using rule 44 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 44 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 44 (expression -> expression PLUS expression .)
    LESSTHANEQ      reduce using rule 44 (expression -> expression PLUS expression .)
    GREATERTHANEQ   reduce using rule 44 (expression -> expression PLUS expression .)
    UNEQUAL         reduce using rule 44 (expression -> expression PLUS expression .)
    EQUALCHECK      reduce using rule 44 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 44 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 44 (expression -> expression PLUS expression .)
    ANDOPERATOR     reduce using rule 44 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 68
    TIMES           shift and go to state 70

  ! DIVIDE          [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 67 ]


state 89

    (47) expression -> expression TIMES expression .
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression

    PLUS            reduce using rule 47 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 47 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 47 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 47 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 47 (expression -> expression TIMES expression .)
    LESSTHANEQ      reduce using rule 47 (expression -> expression TIMES expression .)
    GREATERTHANEQ   reduce using rule 47 (expression -> expression TIMES expression .)
    UNEQUAL         reduce using rule 47 (expression -> expression TIMES expression .)
    EQUALCHECK      reduce using rule 47 (expression -> expression TIMES expression .)
    LESSTHAN        reduce using rule 47 (expression -> expression TIMES expression .)
    GREATERTHAN     reduce using rule 47 (expression -> expression TIMES expression .)
    ANDOPERATOR     reduce using rule 47 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 70 ]


state 90

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement . ELSE unmatchedstatement
    (16) ifblock -> IF LPAREN conditional RPAREN statement . ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN statement . ELSE LBRACE fbody RBRACE
    (6) allstatement -> statement .

    ELSE            shift and go to state 97
    IF              reduce using rule 6 (allstatement -> statement .)
    TYPE            reduce using rule 6 (allstatement -> statement .)
    WHILE           reduce using rule 6 (allstatement -> statement .)
    TIMES           reduce using rule 6 (allstatement -> statement .)
    NAME            reduce using rule 6 (allstatement -> statement .)
    RBRACE          reduce using rule 6 (allstatement -> statement .)


state 91

    (20) ifblock -> IF LPAREN conditional RPAREN SEMICOLON .

    IF              reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    TYPE            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    WHILE           reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    TIMES           reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    NAME            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    RBRACE          reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)
    ELSE            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN SEMICOLON .)


state 92

    (12) unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .

    IF              reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TYPE            reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    WHILE           reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TIMES           reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    NAME            reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    RBRACE          reduce using rule 12 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)


state 93

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE statement
    (21) ifblock -> IF LPAREN conditional RPAREN LBRACE . RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    RBRACE          shift and go to state 99
    IF              shift and go to state 15
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 9
    unmatchedstatement             shift and go to state 20
    allstatement                   shift and go to state 19
    fbody                          shift and go to state 98
    assignment                     shift and go to state 12
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 94

    (33) CS -> NOT LPAREN expression RPAREN .

    LESSTHANEQ      reduce using rule 33 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 33 (CS -> NOT LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 33 (CS -> NOT LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 33 (CS -> NOT LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 33 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 33 (CS -> NOT LPAREN expression RPAREN .)
    ANDOPERATOR     reduce using rule 33 (CS -> NOT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 33 (CS -> NOT LPAREN expression RPAREN .)


state 95

    (16) ifblock -> IF LPAREN . conditional RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN . conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN . conditional RPAREN SEMICOLON
    (21) ifblock -> IF LPAREN . conditional RPAREN LBRACE RBRACE
    (24) conditional -> . CS
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) CS -> . expression
    (33) CS -> . NOT LPAREN expression RPAREN
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . pointervar
    (52) pointervar -> . TIMES pointervar
    (53) pointervar -> . ANDOPERATOR pointervar
    (54) pointervar -> . NAME

    NOT             shift and go to state 43
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 40
    TIMES           shift and go to state 25
    ANDOPERATOR     shift and go to state 23
    NAME            shift and go to state 24

    CS                             shift and go to state 46
    conditional                    shift and go to state 100
    expression                     shift and go to state 47
    pointervar                     shift and go to state 45

state 96

    (22) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 101


state 97

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE . unmatchedstatement
    (16) ifblock -> IF LPAREN conditional RPAREN statement ELSE . statement
    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE . LBRACE fbody RBRACE
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 104
    IF              shift and go to state 15
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 102
    unmatchedstatement             shift and go to state 103
    assignment                     shift and go to state 12
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 98

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE statement

    RBRACE          shift and go to state 105


state 99

    (21) ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .

    IF              reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    TYPE            reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    WHILE           reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    TIMES           reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    NAME            reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    RBRACE          reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)
    ELSE            reduce using rule 21 (ifblock -> IF LPAREN conditional RPAREN LBRACE RBRACE .)


state 100

    (16) ifblock -> IF LPAREN conditional . RPAREN statement ELSE statement
    (17) ifblock -> IF LPAREN conditional . RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN conditional . RPAREN SEMICOLON
    (21) ifblock -> IF LPAREN conditional . RPAREN LBRACE RBRACE
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional

    RPAREN          shift and go to state 106
    LESSTHANEQ      shift and go to state 64
    GREATERTHANEQ   shift and go to state 66
    UNEQUAL         shift and go to state 63
    EQUALCHECK      shift and go to state 60
    LESSTHAN        shift and go to state 62
    GREATERTHAN     shift and go to state 65
    ANDOPERATOR     shift and go to state 59


state 101

    (22) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .

    IF              reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    ELSE            reduce using rule 22 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 102

    (16) ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .

    IF              reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TYPE            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    WHILE           reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TIMES           reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    NAME            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    ELSE            reduce using rule 16 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)


state 103

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .

    IF              reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TYPE            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    WHILE           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TIMES           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    NAME            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    RBRACE          reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)


state 104

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 15
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 9
    allstatement                   shift and go to state 19
    unmatchedstatement             shift and go to state 20
    fbody                          shift and go to state 107
    assignment                     shift and go to state 12
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 105

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE statement

    ELSE            shift and go to state 108
    IF              reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 106

    (16) ifblock -> IF LPAREN conditional RPAREN . statement ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN . statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> IF LPAREN conditional RPAREN . SEMICOLON
    (21) ifblock -> IF LPAREN conditional RPAREN . LBRACE RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 110
    SEMICOLON       shift and go to state 91
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    IF              shift and go to state 79
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 109
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment                     shift and go to state 12
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 107

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 111


state 108

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . unmatchedstatement
    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . statement
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 114
    IF              shift and go to state 15
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 112
    unmatchedstatement             shift and go to state 113
    assignment                     shift and go to state 12
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 109

    (16) ifblock -> IF LPAREN conditional RPAREN statement . ELSE statement
    (17) ifblock -> IF LPAREN conditional RPAREN statement . ELSE LBRACE fbody RBRACE

    ELSE            shift and go to state 115


state 110

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE statement
    (21) ifblock -> IF LPAREN conditional RPAREN LBRACE . RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    RBRACE          shift and go to state 99
    IF              shift and go to state 15
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 9
    allstatement                   shift and go to state 19
    unmatchedstatement             shift and go to state 20
    fbody                          shift and go to state 116
    assignment                     shift and go to state 12
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 111

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .

    IF              reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    ELSE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)


state 112

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .

    IF              reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TYPE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    WHILE           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TIMES           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    NAME            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    RBRACE          reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    ELSE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)


state 113

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .

    IF              reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TYPE            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    WHILE           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TIMES           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    NAME            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    RBRACE          reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)


state 114

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement
    (5) fbody -> . allstatement fbody
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    IF              shift and go to state 15
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 9
    allstatement                   shift and go to state 19
    unmatchedstatement             shift and go to state 20
    fbody                          shift and go to state 117
    assignment                     shift and go to state 12
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 115

    (16) ifblock -> IF LPAREN conditional RPAREN statement ELSE . statement
    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE . LBRACE fbody RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 104
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    IF              shift and go to state 79
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 102
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment                     shift and go to state 12
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22

state 116

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE statement

    RBRACE          shift and go to state 118


state 117

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 119


state 118

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE statement

    ELSE            shift and go to state 120


state 119

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .

    IF              reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    ELSE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)


state 120

    (18) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . statement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (41) assignment -> . assignment_base SEMICOLON
    (34) declaration -> . TYPE dlist1 SEMICOLON
    (22) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (23) whileblock -> . WHILE LPAREN conditional RPAREN statement
    (16) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (18) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (20) ifblock -> . IF LPAREN conditional RPAREN SEMICOLON
    (21) ifblock -> . IF LPAREN conditional RPAREN LBRACE RBRACE
    (42) assignment_base -> . TIMES pointervar EQUALS expression
    (43) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 114
    TYPE            shift and go to state 16
    WHILE           shift and go to state 11
    IF              shift and go to state 79
    TIMES           shift and go to state 10
    NAME            shift and go to state 13

    statement                      shift and go to state 112
    declaration                    shift and go to state 17
    whileblock                     shift and go to state 18
    assignment                     shift and go to state 12
    assignment_base                shift and go to state 21
    ifblock                        shift and go to state 22
