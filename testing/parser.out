Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     program -> function program
Rule 3     function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE
Rule 4     fbody -> allstatement fbody
Rule 5     fbody -> <empty>
Rule 6     allstatement -> statement
Rule 7     allstatement -> unmatchedstatement
Rule 8     statement -> assignment
Rule 9     statement -> declaration
Rule 10    statement -> whileblock
Rule 11    statement -> ifblock
Rule 12    statement -> SEMICOLON
Rule 13    unmatchedstatement -> IF LPAREN conditional RPAREN allstatement
Rule 14    unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
Rule 15    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
Rule 16    unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 17    ifblock -> IF LPAREN conditional RPAREN statement ELSE statement
Rule 18    ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
Rule 19    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
Rule 20    ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
Rule 21    whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
Rule 22    conditional -> LPAREN conditional RPAREN
Rule 23    conditional -> conditionbase
Rule 24    conditional -> NOT LPAREN conditional RPAREN
Rule 25    conditional -> conditional LESSTHANEQ conditional
Rule 26    conditional -> conditional GREATERTHANEQ conditional
Rule 27    conditional -> conditional UNEQUAL conditional
Rule 28    conditional -> conditional EQUALCHECK conditional
Rule 29    conditional -> conditional LESSTHAN conditional
Rule 30    conditional -> conditional GREATERTHAN conditional
Rule 31    conditional -> conditional ANDOPERATOR conditional
Rule 32    conditional -> conditional OROPERATOR conditional
Rule 33    conditionbase -> CS LESSTHANEQ CS
Rule 34    conditionbase -> CS GREATERTHANEQ CS
Rule 35    conditionbase -> CS UNEQUAL CS
Rule 36    conditionbase -> CS EQUALCHECK CS
Rule 37    conditionbase -> CS LESSTHAN CS
Rule 38    conditionbase -> CS GREATERTHAN CS
Rule 39    CS -> expression
Rule 40    CS -> NOT LPAREN expression RPAREN
Rule 41    declaration -> TYPE dlist1 SEMICOLON
Rule 42    dlist1 -> NAME
Rule 43    dlist1 -> NAME COMMA dlist1
Rule 44    dlist1 -> specialvar
Rule 45    dlist1 -> specialvar COMMA dlist1
Rule 46    specialvar -> TIMES specialvar
Rule 47    specialvar -> TIMES NAME
Rule 48    assignment -> assignment_base SEMICOLON
Rule 49    assignment_base -> TIMES pointervar EQUALS expression
Rule 50    assignment_base -> NAME EQUALS expression
Rule 51    expression -> expression PLUS expression
Rule 52    expression -> expression MINUS expression
Rule 53    expression -> expression DIVIDE expression
Rule 54    expression -> expression TIMES expression
Rule 55    expression -> MINUS expression
Rule 56    expression -> LPAREN expression RPAREN
Rule 57    expression -> NUMBER
Rule 58    expression -> pointervar
Rule 59    pointervar -> TIMES pointervar
Rule 60    pointervar -> ADDROF pointervar
Rule 61    pointervar -> NAME

Terminals, with rules where they appear

ADDROF               : 60
ANDOPERATOR          : 31
COMMA                : 43 45
DIVIDE               : 53
ELSE                 : 14 15 17 18 19 20
EQUALCHECK           : 28 36
EQUALS               : 49 50
GREATERTHAN          : 30 38
GREATERTHANEQ        : 26 34
IF                   : 13 14 15 16 17 18 19 20
LBRACE               : 3 15 16 18 19 19 20 21
LESSTHAN             : 29 37
LESSTHANEQ           : 25 33
LPAREN               : 3 13 14 15 16 17 18 19 20 21 22 24 40 56
MINUS                : 52 55
NAME                 : 3 42 43 47 50 61
NOT                  : 24 40
NUMBER               : 57
OROPERATOR           : 32
PLUS                 : 51
RBRACE               : 3 15 16 18 19 19 20 21
RPAREN               : 3 13 14 15 16 17 18 19 20 21 22 24 40 56
SEMICOLON            : 12 41 48
TIMES                : 46 47 49 54 59
TYPE                 : 3 41
UNEQUAL              : 27 35
WHILE                : 21
error                : 

Nonterminals, with rules where they appear

CS                   : 33 33 34 34 35 35 36 36 37 37 38 38
allstatement         : 4 13
assignment           : 8
assignment_base      : 48
conditional          : 13 14 15 16 17 18 19 20 21 22 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32
conditionbase        : 23
declaration          : 9
dlist1               : 41 43 45
expression           : 39 40 49 50 51 51 52 52 53 53 54 54 55 56
fbody                : 3 4 15 16 18 19 19 20 21
function             : 1 2
ifblock              : 11
pointervar           : 49 58 59 60
program              : 2 0
specialvar           : 44 45 46
statement            : 6 14 17 17 18 20
unmatchedstatement   : 7 14 15
whileblock           : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    TYPE            shift and go to state 3

    function                       shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> function .
    (2) program -> function . program
    (1) program -> . function
    (2) program -> . function program
    (3) function -> . TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE

    $end            reduce using rule 1 (program -> function .)
    TYPE            shift and go to state 3

    function                       shift and go to state 2
    program                        shift and go to state 4

state 3

    (3) function -> TYPE . NAME LPAREN RPAREN LBRACE fbody RBRACE

    NAME            shift and go to state 5


state 4

    (2) program -> function program .

    $end            reduce using rule 2 (program -> function program .)


state 5

    (3) function -> TYPE NAME . LPAREN RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 6


state 6

    (3) function -> TYPE NAME LPAREN . RPAREN LBRACE fbody RBRACE

    RPAREN          shift and go to state 7


state 7

    (3) function -> TYPE NAME LPAREN RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 8


state 8

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement fbody
    (5) fbody -> .
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) statement -> . SEMICOLON
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (48) assignment -> . assignment_base SEMICOLON
    (41) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (49) assignment_base -> . TIMES pointervar EQUALS expression
    (50) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 5 (fbody -> .)
    SEMICOLON       shift and go to state 21
    IF              shift and go to state 9
    TYPE            shift and go to state 19
    WHILE           shift and go to state 12
    TIMES           shift and go to state 22
    NAME            shift and go to state 20

    allstatement                   shift and go to state 15
    fbody                          shift and go to state 16
    declaration                    shift and go to state 17
    assignment_base                shift and go to state 18
    statement                      shift and go to state 13
    assignment                     shift and go to state 10
    whileblock                     shift and go to state 11
    unmatchedstatement             shift and go to state 23
    ifblock                        shift and go to state 14

state 9

    (13) unmatchedstatement -> IF . LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> IF . LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> IF . LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> IF . LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF . LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement

    LPAREN          shift and go to state 24


state 10

    (8) statement -> assignment .

    SEMICOLON       reduce using rule 8 (statement -> assignment .)
    IF              reduce using rule 8 (statement -> assignment .)
    TYPE            reduce using rule 8 (statement -> assignment .)
    WHILE           reduce using rule 8 (statement -> assignment .)
    TIMES           reduce using rule 8 (statement -> assignment .)
    NAME            reduce using rule 8 (statement -> assignment .)
    RBRACE          reduce using rule 8 (statement -> assignment .)
    ELSE            reduce using rule 8 (statement -> assignment .)


state 11

    (10) statement -> whileblock .

    SEMICOLON       reduce using rule 10 (statement -> whileblock .)
    IF              reduce using rule 10 (statement -> whileblock .)
    TYPE            reduce using rule 10 (statement -> whileblock .)
    WHILE           reduce using rule 10 (statement -> whileblock .)
    TIMES           reduce using rule 10 (statement -> whileblock .)
    NAME            reduce using rule 10 (statement -> whileblock .)
    RBRACE          reduce using rule 10 (statement -> whileblock .)
    ELSE            reduce using rule 10 (statement -> whileblock .)


state 12

    (21) whileblock -> WHILE . LPAREN conditional RPAREN LBRACE fbody RBRACE

    LPAREN          shift and go to state 25


state 13

    (6) allstatement -> statement .

    SEMICOLON       reduce using rule 6 (allstatement -> statement .)
    IF              reduce using rule 6 (allstatement -> statement .)
    TYPE            reduce using rule 6 (allstatement -> statement .)
    WHILE           reduce using rule 6 (allstatement -> statement .)
    TIMES           reduce using rule 6 (allstatement -> statement .)
    NAME            reduce using rule 6 (allstatement -> statement .)
    RBRACE          reduce using rule 6 (allstatement -> statement .)


state 14

    (11) statement -> ifblock .

    SEMICOLON       reduce using rule 11 (statement -> ifblock .)
    IF              reduce using rule 11 (statement -> ifblock .)
    TYPE            reduce using rule 11 (statement -> ifblock .)
    WHILE           reduce using rule 11 (statement -> ifblock .)
    TIMES           reduce using rule 11 (statement -> ifblock .)
    NAME            reduce using rule 11 (statement -> ifblock .)
    RBRACE          reduce using rule 11 (statement -> ifblock .)
    ELSE            reduce using rule 11 (statement -> ifblock .)


state 15

    (4) fbody -> allstatement . fbody
    (4) fbody -> . allstatement fbody
    (5) fbody -> .
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) statement -> . SEMICOLON
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (48) assignment -> . assignment_base SEMICOLON
    (41) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (49) assignment_base -> . TIMES pointervar EQUALS expression
    (50) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 5 (fbody -> .)
    SEMICOLON       shift and go to state 21
    IF              shift and go to state 9
    TYPE            shift and go to state 19
    WHILE           shift and go to state 12
    TIMES           shift and go to state 22
    NAME            shift and go to state 20

    allstatement                   shift and go to state 15
    fbody                          shift and go to state 26
    declaration                    shift and go to state 17
    assignment_base                shift and go to state 18
    statement                      shift and go to state 13
    assignment                     shift and go to state 10
    whileblock                     shift and go to state 11
    unmatchedstatement             shift and go to state 23
    ifblock                        shift and go to state 14

state 16

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 27


state 17

    (9) statement -> declaration .

    SEMICOLON       reduce using rule 9 (statement -> declaration .)
    IF              reduce using rule 9 (statement -> declaration .)
    TYPE            reduce using rule 9 (statement -> declaration .)
    WHILE           reduce using rule 9 (statement -> declaration .)
    TIMES           reduce using rule 9 (statement -> declaration .)
    NAME            reduce using rule 9 (statement -> declaration .)
    RBRACE          reduce using rule 9 (statement -> declaration .)
    ELSE            reduce using rule 9 (statement -> declaration .)


state 18

    (48) assignment -> assignment_base . SEMICOLON

    SEMICOLON       shift and go to state 28


state 19

    (41) declaration -> TYPE . dlist1 SEMICOLON
    (42) dlist1 -> . NAME
    (43) dlist1 -> . NAME COMMA dlist1
    (44) dlist1 -> . specialvar
    (45) dlist1 -> . specialvar COMMA dlist1
    (46) specialvar -> . TIMES specialvar
    (47) specialvar -> . TIMES NAME

    NAME            shift and go to state 31
    TIMES           shift and go to state 32

    dlist1                         shift and go to state 29
    specialvar                     shift and go to state 30

state 20

    (50) assignment_base -> NAME . EQUALS expression

    EQUALS          shift and go to state 33


state 21

    (12) statement -> SEMICOLON .

    SEMICOLON       reduce using rule 12 (statement -> SEMICOLON .)
    IF              reduce using rule 12 (statement -> SEMICOLON .)
    TYPE            reduce using rule 12 (statement -> SEMICOLON .)
    WHILE           reduce using rule 12 (statement -> SEMICOLON .)
    TIMES           reduce using rule 12 (statement -> SEMICOLON .)
    NAME            reduce using rule 12 (statement -> SEMICOLON .)
    RBRACE          reduce using rule 12 (statement -> SEMICOLON .)
    ELSE            reduce using rule 12 (statement -> SEMICOLON .)


state 22

    (49) assignment_base -> TIMES . pointervar EQUALS expression
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 36

state 23

    (7) allstatement -> unmatchedstatement .

    SEMICOLON       reduce using rule 7 (allstatement -> unmatchedstatement .)
    IF              reduce using rule 7 (allstatement -> unmatchedstatement .)
    TYPE            reduce using rule 7 (allstatement -> unmatchedstatement .)
    WHILE           reduce using rule 7 (allstatement -> unmatchedstatement .)
    TIMES           reduce using rule 7 (allstatement -> unmatchedstatement .)
    NAME            reduce using rule 7 (allstatement -> unmatchedstatement .)
    RBRACE          reduce using rule 7 (allstatement -> unmatchedstatement .)


state 24

    (13) unmatchedstatement -> IF LPAREN . conditional RPAREN allstatement
    (14) unmatchedstatement -> IF LPAREN . conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> IF LPAREN . conditional RPAREN statement ELSE statement
    (18) ifblock -> IF LPAREN . conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN . conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 40
    CS                             shift and go to state 38
    pointervar                     shift and go to state 43
    conditional                    shift and go to state 46
    conditionbase                  shift and go to state 39

state 25

    (21) whileblock -> WHILE LPAREN . conditional RPAREN LBRACE fbody RBRACE
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 40
    CS                             shift and go to state 38
    pointervar                     shift and go to state 43
    conditional                    shift and go to state 47
    conditionbase                  shift and go to state 39

state 26

    (4) fbody -> allstatement fbody .

    RBRACE          reduce using rule 4 (fbody -> allstatement fbody .)


state 27

    (3) function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .

    TYPE            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)
    $end            reduce using rule 3 (function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE .)


state 28

    (48) assignment -> assignment_base SEMICOLON .

    SEMICOLON       reduce using rule 48 (assignment -> assignment_base SEMICOLON .)
    IF              reduce using rule 48 (assignment -> assignment_base SEMICOLON .)
    TYPE            reduce using rule 48 (assignment -> assignment_base SEMICOLON .)
    WHILE           reduce using rule 48 (assignment -> assignment_base SEMICOLON .)
    TIMES           reduce using rule 48 (assignment -> assignment_base SEMICOLON .)
    NAME            reduce using rule 48 (assignment -> assignment_base SEMICOLON .)
    RBRACE          reduce using rule 48 (assignment -> assignment_base SEMICOLON .)
    ELSE            reduce using rule 48 (assignment -> assignment_base SEMICOLON .)


state 29

    (41) declaration -> TYPE dlist1 . SEMICOLON

    SEMICOLON       shift and go to state 48


state 30

    (44) dlist1 -> specialvar .
    (45) dlist1 -> specialvar . COMMA dlist1

    SEMICOLON       reduce using rule 44 (dlist1 -> specialvar .)
    COMMA           shift and go to state 49


state 31

    (42) dlist1 -> NAME .
    (43) dlist1 -> NAME . COMMA dlist1

    SEMICOLON       reduce using rule 42 (dlist1 -> NAME .)
    COMMA           shift and go to state 50


state 32

    (46) specialvar -> TIMES . specialvar
    (47) specialvar -> TIMES . NAME
    (46) specialvar -> . TIMES specialvar
    (47) specialvar -> . TIMES NAME

    NAME            shift and go to state 52
    TIMES           shift and go to state 32

    specialvar                     shift and go to state 51

state 33

    (50) assignment_base -> NAME EQUALS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 53
    pointervar                     shift and go to state 43

state 34

    (60) pointervar -> ADDROF . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 55

state 35

    (61) pointervar -> NAME .

    EQUALS          reduce using rule 61 (pointervar -> NAME .)
    PLUS            reduce using rule 61 (pointervar -> NAME .)
    MINUS           reduce using rule 61 (pointervar -> NAME .)
    DIVIDE          reduce using rule 61 (pointervar -> NAME .)
    TIMES           reduce using rule 61 (pointervar -> NAME .)
    LESSTHANEQ      reduce using rule 61 (pointervar -> NAME .)
    GREATERTHANEQ   reduce using rule 61 (pointervar -> NAME .)
    UNEQUAL         reduce using rule 61 (pointervar -> NAME .)
    EQUALCHECK      reduce using rule 61 (pointervar -> NAME .)
    LESSTHAN        reduce using rule 61 (pointervar -> NAME .)
    GREATERTHAN     reduce using rule 61 (pointervar -> NAME .)
    SEMICOLON       reduce using rule 61 (pointervar -> NAME .)
    RPAREN          reduce using rule 61 (pointervar -> NAME .)
    ANDOPERATOR     reduce using rule 61 (pointervar -> NAME .)
    OROPERATOR      reduce using rule 61 (pointervar -> NAME .)


state 36

    (49) assignment_base -> TIMES pointervar . EQUALS expression

    EQUALS          shift and go to state 56


state 37

    (59) pointervar -> TIMES . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 57

state 38

    (33) conditionbase -> CS . LESSTHANEQ CS
    (34) conditionbase -> CS . GREATERTHANEQ CS
    (35) conditionbase -> CS . UNEQUAL CS
    (36) conditionbase -> CS . EQUALCHECK CS
    (37) conditionbase -> CS . LESSTHAN CS
    (38) conditionbase -> CS . GREATERTHAN CS

    LESSTHANEQ      shift and go to state 61
    GREATERTHANEQ   shift and go to state 59
    UNEQUAL         shift and go to state 60
    EQUALCHECK      shift and go to state 62
    LESSTHAN        shift and go to state 63
    GREATERTHAN     shift and go to state 58


state 39

    (23) conditional -> conditionbase .

    LESSTHANEQ      reduce using rule 23 (conditional -> conditionbase .)
    GREATERTHANEQ   reduce using rule 23 (conditional -> conditionbase .)
    UNEQUAL         reduce using rule 23 (conditional -> conditionbase .)
    EQUALCHECK      reduce using rule 23 (conditional -> conditionbase .)
    LESSTHAN        reduce using rule 23 (conditional -> conditionbase .)
    GREATERTHAN     reduce using rule 23 (conditional -> conditionbase .)
    ANDOPERATOR     reduce using rule 23 (conditional -> conditionbase .)
    OROPERATOR      reduce using rule 23 (conditional -> conditionbase .)
    RPAREN          reduce using rule 23 (conditional -> conditionbase .)


state 40

    (39) CS -> expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression

    LESSTHANEQ      reduce using rule 39 (CS -> expression .)
    GREATERTHANEQ   reduce using rule 39 (CS -> expression .)
    UNEQUAL         reduce using rule 39 (CS -> expression .)
    EQUALCHECK      reduce using rule 39 (CS -> expression .)
    LESSTHAN        reduce using rule 39 (CS -> expression .)
    GREATERTHAN     reduce using rule 39 (CS -> expression .)
    RPAREN          reduce using rule 39 (CS -> expression .)
    ANDOPERATOR     reduce using rule 39 (CS -> expression .)
    OROPERATOR      reduce using rule 39 (CS -> expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 67
    TIMES           shift and go to state 65


state 41

    (55) expression -> MINUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 68
    pointervar                     shift and go to state 43

state 42

    (24) conditional -> NOT . LPAREN conditional RPAREN
    (40) CS -> NOT . LPAREN expression RPAREN

    LPAREN          shift and go to state 69


state 43

    (58) expression -> pointervar .

    PLUS            reduce using rule 58 (expression -> pointervar .)
    MINUS           reduce using rule 58 (expression -> pointervar .)
    DIVIDE          reduce using rule 58 (expression -> pointervar .)
    TIMES           reduce using rule 58 (expression -> pointervar .)
    RPAREN          reduce using rule 58 (expression -> pointervar .)
    LESSTHANEQ      reduce using rule 58 (expression -> pointervar .)
    GREATERTHANEQ   reduce using rule 58 (expression -> pointervar .)
    UNEQUAL         reduce using rule 58 (expression -> pointervar .)
    EQUALCHECK      reduce using rule 58 (expression -> pointervar .)
    LESSTHAN        reduce using rule 58 (expression -> pointervar .)
    GREATERTHAN     reduce using rule 58 (expression -> pointervar .)
    ANDOPERATOR     reduce using rule 58 (expression -> pointervar .)
    OROPERATOR      reduce using rule 58 (expression -> pointervar .)
    SEMICOLON       reduce using rule 58 (expression -> pointervar .)


state 44

    (57) expression -> NUMBER .

    PLUS            reduce using rule 57 (expression -> NUMBER .)
    MINUS           reduce using rule 57 (expression -> NUMBER .)
    DIVIDE          reduce using rule 57 (expression -> NUMBER .)
    TIMES           reduce using rule 57 (expression -> NUMBER .)
    RPAREN          reduce using rule 57 (expression -> NUMBER .)
    LESSTHANEQ      reduce using rule 57 (expression -> NUMBER .)
    GREATERTHANEQ   reduce using rule 57 (expression -> NUMBER .)
    UNEQUAL         reduce using rule 57 (expression -> NUMBER .)
    EQUALCHECK      reduce using rule 57 (expression -> NUMBER .)
    LESSTHAN        reduce using rule 57 (expression -> NUMBER .)
    GREATERTHAN     reduce using rule 57 (expression -> NUMBER .)
    ANDOPERATOR     reduce using rule 57 (expression -> NUMBER .)
    OROPERATOR      reduce using rule 57 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 57 (expression -> NUMBER .)


state 45

    (22) conditional -> LPAREN . conditional RPAREN
    (56) expression -> LPAREN . expression RPAREN
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    CS                             shift and go to state 38
    expression                     shift and go to state 70
    conditional                    shift and go to state 71
    conditionbase                  shift and go to state 39

state 46

    (13) unmatchedstatement -> IF LPAREN conditional . RPAREN allstatement
    (14) unmatchedstatement -> IF LPAREN conditional . RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (17) ifblock -> IF LPAREN conditional . RPAREN statement ELSE statement
    (18) ifblock -> IF LPAREN conditional . RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional . RPAREN LBRACE fbody RBRACE ELSE statement
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    RPAREN          shift and go to state 75
    LESSTHANEQ      shift and go to state 76
    GREATERTHANEQ   shift and go to state 72
    UNEQUAL         shift and go to state 73
    EQUALCHECK      shift and go to state 78
    LESSTHAN        shift and go to state 77
    GREATERTHAN     shift and go to state 74
    ANDOPERATOR     shift and go to state 79
    OROPERATOR      shift and go to state 80


state 47

    (21) whileblock -> WHILE LPAREN conditional . RPAREN LBRACE fbody RBRACE
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    RPAREN          shift and go to state 81
    LESSTHANEQ      shift and go to state 76
    GREATERTHANEQ   shift and go to state 72
    UNEQUAL         shift and go to state 73
    EQUALCHECK      shift and go to state 78
    LESSTHAN        shift and go to state 77
    GREATERTHAN     shift and go to state 74
    ANDOPERATOR     shift and go to state 79
    OROPERATOR      shift and go to state 80


state 48

    (41) declaration -> TYPE dlist1 SEMICOLON .

    SEMICOLON       reduce using rule 41 (declaration -> TYPE dlist1 SEMICOLON .)
    IF              reduce using rule 41 (declaration -> TYPE dlist1 SEMICOLON .)
    TYPE            reduce using rule 41 (declaration -> TYPE dlist1 SEMICOLON .)
    WHILE           reduce using rule 41 (declaration -> TYPE dlist1 SEMICOLON .)
    TIMES           reduce using rule 41 (declaration -> TYPE dlist1 SEMICOLON .)
    NAME            reduce using rule 41 (declaration -> TYPE dlist1 SEMICOLON .)
    RBRACE          reduce using rule 41 (declaration -> TYPE dlist1 SEMICOLON .)
    ELSE            reduce using rule 41 (declaration -> TYPE dlist1 SEMICOLON .)


state 49

    (45) dlist1 -> specialvar COMMA . dlist1
    (42) dlist1 -> . NAME
    (43) dlist1 -> . NAME COMMA dlist1
    (44) dlist1 -> . specialvar
    (45) dlist1 -> . specialvar COMMA dlist1
    (46) specialvar -> . TIMES specialvar
    (47) specialvar -> . TIMES NAME

    NAME            shift and go to state 31
    TIMES           shift and go to state 32

    dlist1                         shift and go to state 82
    specialvar                     shift and go to state 30

state 50

    (43) dlist1 -> NAME COMMA . dlist1
    (42) dlist1 -> . NAME
    (43) dlist1 -> . NAME COMMA dlist1
    (44) dlist1 -> . specialvar
    (45) dlist1 -> . specialvar COMMA dlist1
    (46) specialvar -> . TIMES specialvar
    (47) specialvar -> . TIMES NAME

    NAME            shift and go to state 31
    TIMES           shift and go to state 32

    dlist1                         shift and go to state 83
    specialvar                     shift and go to state 30

state 51

    (46) specialvar -> TIMES specialvar .

    COMMA           reduce using rule 46 (specialvar -> TIMES specialvar .)
    SEMICOLON       reduce using rule 46 (specialvar -> TIMES specialvar .)


state 52

    (47) specialvar -> TIMES NAME .

    COMMA           reduce using rule 47 (specialvar -> TIMES NAME .)
    SEMICOLON       reduce using rule 47 (specialvar -> TIMES NAME .)


state 53

    (50) assignment_base -> NAME EQUALS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 50 (assignment_base -> NAME EQUALS expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 67
    TIMES           shift and go to state 65


state 54

    (56) expression -> LPAREN . expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 84
    pointervar                     shift and go to state 43

state 55

    (60) pointervar -> ADDROF pointervar .

    EQUALS          reduce using rule 60 (pointervar -> ADDROF pointervar .)
    PLUS            reduce using rule 60 (pointervar -> ADDROF pointervar .)
    MINUS           reduce using rule 60 (pointervar -> ADDROF pointervar .)
    DIVIDE          reduce using rule 60 (pointervar -> ADDROF pointervar .)
    TIMES           reduce using rule 60 (pointervar -> ADDROF pointervar .)
    LESSTHANEQ      reduce using rule 60 (pointervar -> ADDROF pointervar .)
    GREATERTHANEQ   reduce using rule 60 (pointervar -> ADDROF pointervar .)
    UNEQUAL         reduce using rule 60 (pointervar -> ADDROF pointervar .)
    EQUALCHECK      reduce using rule 60 (pointervar -> ADDROF pointervar .)
    LESSTHAN        reduce using rule 60 (pointervar -> ADDROF pointervar .)
    GREATERTHAN     reduce using rule 60 (pointervar -> ADDROF pointervar .)
    SEMICOLON       reduce using rule 60 (pointervar -> ADDROF pointervar .)
    RPAREN          reduce using rule 60 (pointervar -> ADDROF pointervar .)
    ANDOPERATOR     reduce using rule 60 (pointervar -> ADDROF pointervar .)
    OROPERATOR      reduce using rule 60 (pointervar -> ADDROF pointervar .)


state 56

    (49) assignment_base -> TIMES pointervar EQUALS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 85
    pointervar                     shift and go to state 43

state 57

    (59) pointervar -> TIMES pointervar .

    EQUALS          reduce using rule 59 (pointervar -> TIMES pointervar .)
    PLUS            reduce using rule 59 (pointervar -> TIMES pointervar .)
    MINUS           reduce using rule 59 (pointervar -> TIMES pointervar .)
    DIVIDE          reduce using rule 59 (pointervar -> TIMES pointervar .)
    TIMES           reduce using rule 59 (pointervar -> TIMES pointervar .)
    LESSTHANEQ      reduce using rule 59 (pointervar -> TIMES pointervar .)
    GREATERTHANEQ   reduce using rule 59 (pointervar -> TIMES pointervar .)
    UNEQUAL         reduce using rule 59 (pointervar -> TIMES pointervar .)
    EQUALCHECK      reduce using rule 59 (pointervar -> TIMES pointervar .)
    LESSTHAN        reduce using rule 59 (pointervar -> TIMES pointervar .)
    GREATERTHAN     reduce using rule 59 (pointervar -> TIMES pointervar .)
    SEMICOLON       reduce using rule 59 (pointervar -> TIMES pointervar .)
    RPAREN          reduce using rule 59 (pointervar -> TIMES pointervar .)
    ANDOPERATOR     reduce using rule 59 (pointervar -> TIMES pointervar .)
    OROPERATOR      reduce using rule 59 (pointervar -> TIMES pointervar .)


state 58

    (38) conditionbase -> CS GREATERTHAN . CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    NOT             shift and go to state 86
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 87

state 59

    (34) conditionbase -> CS GREATERTHANEQ . CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    NOT             shift and go to state 86
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 88

state 60

    (35) conditionbase -> CS UNEQUAL . CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    NOT             shift and go to state 86
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 89

state 61

    (33) conditionbase -> CS LESSTHANEQ . CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    NOT             shift and go to state 86
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 90

state 62

    (36) conditionbase -> CS EQUALCHECK . CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    NOT             shift and go to state 86
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 91

state 63

    (37) conditionbase -> CS LESSTHAN . CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    NOT             shift and go to state 86
    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 92

state 64

    (51) expression -> expression PLUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 93
    pointervar                     shift and go to state 43

state 65

    (54) expression -> expression TIMES . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 94
    pointervar                     shift and go to state 43

state 66

    (52) expression -> expression MINUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 95
    pointervar                     shift and go to state 43

state 67

    (53) expression -> expression DIVIDE . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 96
    pointervar                     shift and go to state 43

state 68

    (55) expression -> MINUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression

    PLUS            reduce using rule 55 (expression -> MINUS expression .)
    MINUS           reduce using rule 55 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 55 (expression -> MINUS expression .)
    TIMES           reduce using rule 55 (expression -> MINUS expression .)
    RPAREN          reduce using rule 55 (expression -> MINUS expression .)
    LESSTHANEQ      reduce using rule 55 (expression -> MINUS expression .)
    GREATERTHANEQ   reduce using rule 55 (expression -> MINUS expression .)
    UNEQUAL         reduce using rule 55 (expression -> MINUS expression .)
    EQUALCHECK      reduce using rule 55 (expression -> MINUS expression .)
    LESSTHAN        reduce using rule 55 (expression -> MINUS expression .)
    GREATERTHAN     reduce using rule 55 (expression -> MINUS expression .)
    ANDOPERATOR     reduce using rule 55 (expression -> MINUS expression .)
    OROPERATOR      reduce using rule 55 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 55 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 67 ]
  ! TIMES           [ shift and go to state 65 ]


state 69

    (24) conditional -> NOT LPAREN . conditional RPAREN
    (40) CS -> NOT LPAREN . expression RPAREN
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    CS                             shift and go to state 38
    expression                     shift and go to state 97
    conditional                    shift and go to state 98
    conditionbase                  shift and go to state 39

state 70

    (56) expression -> LPAREN expression . RPAREN
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression
    (39) CS -> expression .

    RPAREN          shift and go to state 99
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 67
    TIMES           shift and go to state 65
    LESSTHANEQ      reduce using rule 39 (CS -> expression .)
    GREATERTHANEQ   reduce using rule 39 (CS -> expression .)
    UNEQUAL         reduce using rule 39 (CS -> expression .)
    EQUALCHECK      reduce using rule 39 (CS -> expression .)
    LESSTHAN        reduce using rule 39 (CS -> expression .)
    GREATERTHAN     reduce using rule 39 (CS -> expression .)


state 71

    (22) conditional -> LPAREN conditional . RPAREN
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    RPAREN          shift and go to state 100
    LESSTHANEQ      shift and go to state 76
    GREATERTHANEQ   shift and go to state 72
    UNEQUAL         shift and go to state 73
    EQUALCHECK      shift and go to state 78
    LESSTHAN        shift and go to state 77
    GREATERTHAN     shift and go to state 74
    ANDOPERATOR     shift and go to state 79
    OROPERATOR      shift and go to state 80


state 72

    (26) conditional -> conditional GREATERTHANEQ . conditional
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 38
    conditional                    shift and go to state 101
    conditionbase                  shift and go to state 39

state 73

    (27) conditional -> conditional UNEQUAL . conditional
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 38
    conditional                    shift and go to state 102
    conditionbase                  shift and go to state 39

state 74

    (30) conditional -> conditional GREATERTHAN . conditional
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 38
    conditional                    shift and go to state 103
    conditionbase                  shift and go to state 39

state 75

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN . allstatement
    (14) unmatchedstatement -> IF LPAREN conditional RPAREN . statement ELSE unmatchedstatement
    (15) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE
    (17) ifblock -> IF LPAREN conditional RPAREN . statement ELSE statement
    (18) ifblock -> IF LPAREN conditional RPAREN . statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional RPAREN . LBRACE fbody RBRACE ELSE statement
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) statement -> . SEMICOLON
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (48) assignment -> . assignment_base SEMICOLON
    (41) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (49) assignment_base -> . TIMES pointervar EQUALS expression
    (50) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 104
    SEMICOLON       shift and go to state 21
    IF              shift and go to state 9
    TYPE            shift and go to state 19
    WHILE           shift and go to state 12
    TIMES           shift and go to state 22
    NAME            shift and go to state 20

    allstatement                   shift and go to state 106
    declaration                    shift and go to state 17
    assignment_base                shift and go to state 18
    statement                      shift and go to state 105
    assignment                     shift and go to state 10
    whileblock                     shift and go to state 11
    unmatchedstatement             shift and go to state 23
    ifblock                        shift and go to state 14

state 76

    (25) conditional -> conditional LESSTHANEQ . conditional
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 38
    conditional                    shift and go to state 107
    conditionbase                  shift and go to state 39

state 77

    (29) conditional -> conditional LESSTHAN . conditional
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 38
    conditional                    shift and go to state 108
    conditionbase                  shift and go to state 39

state 78

    (28) conditional -> conditional EQUALCHECK . conditional
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 38
    conditional                    shift and go to state 109
    conditionbase                  shift and go to state 39

state 79

    (31) conditional -> conditional ANDOPERATOR . conditional
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 38
    conditional                    shift and go to state 110
    conditionbase                  shift and go to state 39

state 80

    (32) conditional -> conditional OROPERATOR . conditional
    (22) conditional -> . LPAREN conditional RPAREN
    (23) conditional -> . conditionbase
    (24) conditional -> . NOT LPAREN conditional RPAREN
    (25) conditional -> . conditional LESSTHANEQ conditional
    (26) conditional -> . conditional GREATERTHANEQ conditional
    (27) conditional -> . conditional UNEQUAL conditional
    (28) conditional -> . conditional EQUALCHECK conditional
    (29) conditional -> . conditional LESSTHAN conditional
    (30) conditional -> . conditional GREATERTHAN conditional
    (31) conditional -> . conditional ANDOPERATOR conditional
    (32) conditional -> . conditional OROPERATOR conditional
    (33) conditionbase -> . CS LESSTHANEQ CS
    (34) conditionbase -> . CS GREATERTHANEQ CS
    (35) conditionbase -> . CS UNEQUAL CS
    (36) conditionbase -> . CS EQUALCHECK CS
    (37) conditionbase -> . CS LESSTHAN CS
    (38) conditionbase -> . CS GREATERTHAN CS
    (39) CS -> . expression
    (40) CS -> . NOT LPAREN expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    LPAREN          shift and go to state 45
    NOT             shift and go to state 42
    MINUS           shift and go to state 41
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    pointervar                     shift and go to state 43
    expression                     shift and go to state 40
    CS                             shift and go to state 38
    conditional                    shift and go to state 111
    conditionbase                  shift and go to state 39

state 81

    (21) whileblock -> WHILE LPAREN conditional RPAREN . LBRACE fbody RBRACE

    LBRACE          shift and go to state 112


state 82

    (45) dlist1 -> specialvar COMMA dlist1 .

    SEMICOLON       reduce using rule 45 (dlist1 -> specialvar COMMA dlist1 .)


state 83

    (43) dlist1 -> NAME COMMA dlist1 .

    SEMICOLON       reduce using rule 43 (dlist1 -> NAME COMMA dlist1 .)


state 84

    (56) expression -> LPAREN expression . RPAREN
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression

    RPAREN          shift and go to state 99
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 67
    TIMES           shift and go to state 65


state 85

    (49) assignment_base -> TIMES pointervar EQUALS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression

    SEMICOLON       reduce using rule 49 (assignment_base -> TIMES pointervar EQUALS expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 67
    TIMES           shift and go to state 65


state 86

    (40) CS -> NOT . LPAREN expression RPAREN

    LPAREN          shift and go to state 113


state 87

    (38) conditionbase -> CS GREATERTHAN CS .

    LESSTHANEQ      reduce using rule 38 (conditionbase -> CS GREATERTHAN CS .)
    GREATERTHANEQ   reduce using rule 38 (conditionbase -> CS GREATERTHAN CS .)
    UNEQUAL         reduce using rule 38 (conditionbase -> CS GREATERTHAN CS .)
    EQUALCHECK      reduce using rule 38 (conditionbase -> CS GREATERTHAN CS .)
    LESSTHAN        reduce using rule 38 (conditionbase -> CS GREATERTHAN CS .)
    GREATERTHAN     reduce using rule 38 (conditionbase -> CS GREATERTHAN CS .)
    ANDOPERATOR     reduce using rule 38 (conditionbase -> CS GREATERTHAN CS .)
    OROPERATOR      reduce using rule 38 (conditionbase -> CS GREATERTHAN CS .)
    RPAREN          reduce using rule 38 (conditionbase -> CS GREATERTHAN CS .)


state 88

    (34) conditionbase -> CS GREATERTHANEQ CS .

    LESSTHANEQ      reduce using rule 34 (conditionbase -> CS GREATERTHANEQ CS .)
    GREATERTHANEQ   reduce using rule 34 (conditionbase -> CS GREATERTHANEQ CS .)
    UNEQUAL         reduce using rule 34 (conditionbase -> CS GREATERTHANEQ CS .)
    EQUALCHECK      reduce using rule 34 (conditionbase -> CS GREATERTHANEQ CS .)
    LESSTHAN        reduce using rule 34 (conditionbase -> CS GREATERTHANEQ CS .)
    GREATERTHAN     reduce using rule 34 (conditionbase -> CS GREATERTHANEQ CS .)
    ANDOPERATOR     reduce using rule 34 (conditionbase -> CS GREATERTHANEQ CS .)
    OROPERATOR      reduce using rule 34 (conditionbase -> CS GREATERTHANEQ CS .)
    RPAREN          reduce using rule 34 (conditionbase -> CS GREATERTHANEQ CS .)


state 89

    (35) conditionbase -> CS UNEQUAL CS .

    LESSTHANEQ      reduce using rule 35 (conditionbase -> CS UNEQUAL CS .)
    GREATERTHANEQ   reduce using rule 35 (conditionbase -> CS UNEQUAL CS .)
    UNEQUAL         reduce using rule 35 (conditionbase -> CS UNEQUAL CS .)
    EQUALCHECK      reduce using rule 35 (conditionbase -> CS UNEQUAL CS .)
    LESSTHAN        reduce using rule 35 (conditionbase -> CS UNEQUAL CS .)
    GREATERTHAN     reduce using rule 35 (conditionbase -> CS UNEQUAL CS .)
    ANDOPERATOR     reduce using rule 35 (conditionbase -> CS UNEQUAL CS .)
    OROPERATOR      reduce using rule 35 (conditionbase -> CS UNEQUAL CS .)
    RPAREN          reduce using rule 35 (conditionbase -> CS UNEQUAL CS .)


state 90

    (33) conditionbase -> CS LESSTHANEQ CS .

    LESSTHANEQ      reduce using rule 33 (conditionbase -> CS LESSTHANEQ CS .)
    GREATERTHANEQ   reduce using rule 33 (conditionbase -> CS LESSTHANEQ CS .)
    UNEQUAL         reduce using rule 33 (conditionbase -> CS LESSTHANEQ CS .)
    EQUALCHECK      reduce using rule 33 (conditionbase -> CS LESSTHANEQ CS .)
    LESSTHAN        reduce using rule 33 (conditionbase -> CS LESSTHANEQ CS .)
    GREATERTHAN     reduce using rule 33 (conditionbase -> CS LESSTHANEQ CS .)
    ANDOPERATOR     reduce using rule 33 (conditionbase -> CS LESSTHANEQ CS .)
    OROPERATOR      reduce using rule 33 (conditionbase -> CS LESSTHANEQ CS .)
    RPAREN          reduce using rule 33 (conditionbase -> CS LESSTHANEQ CS .)


state 91

    (36) conditionbase -> CS EQUALCHECK CS .

    LESSTHANEQ      reduce using rule 36 (conditionbase -> CS EQUALCHECK CS .)
    GREATERTHANEQ   reduce using rule 36 (conditionbase -> CS EQUALCHECK CS .)
    UNEQUAL         reduce using rule 36 (conditionbase -> CS EQUALCHECK CS .)
    EQUALCHECK      reduce using rule 36 (conditionbase -> CS EQUALCHECK CS .)
    LESSTHAN        reduce using rule 36 (conditionbase -> CS EQUALCHECK CS .)
    GREATERTHAN     reduce using rule 36 (conditionbase -> CS EQUALCHECK CS .)
    ANDOPERATOR     reduce using rule 36 (conditionbase -> CS EQUALCHECK CS .)
    OROPERATOR      reduce using rule 36 (conditionbase -> CS EQUALCHECK CS .)
    RPAREN          reduce using rule 36 (conditionbase -> CS EQUALCHECK CS .)


state 92

    (37) conditionbase -> CS LESSTHAN CS .

    LESSTHANEQ      reduce using rule 37 (conditionbase -> CS LESSTHAN CS .)
    GREATERTHANEQ   reduce using rule 37 (conditionbase -> CS LESSTHAN CS .)
    UNEQUAL         reduce using rule 37 (conditionbase -> CS LESSTHAN CS .)
    EQUALCHECK      reduce using rule 37 (conditionbase -> CS LESSTHAN CS .)
    LESSTHAN        reduce using rule 37 (conditionbase -> CS LESSTHAN CS .)
    GREATERTHAN     reduce using rule 37 (conditionbase -> CS LESSTHAN CS .)
    ANDOPERATOR     reduce using rule 37 (conditionbase -> CS LESSTHAN CS .)
    OROPERATOR      reduce using rule 37 (conditionbase -> CS LESSTHAN CS .)
    RPAREN          reduce using rule 37 (conditionbase -> CS LESSTHAN CS .)


state 93

    (51) expression -> expression PLUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression

    PLUS            reduce using rule 51 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 51 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 51 (expression -> expression PLUS expression .)
    LESSTHANEQ      reduce using rule 51 (expression -> expression PLUS expression .)
    GREATERTHANEQ   reduce using rule 51 (expression -> expression PLUS expression .)
    UNEQUAL         reduce using rule 51 (expression -> expression PLUS expression .)
    EQUALCHECK      reduce using rule 51 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 51 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 51 (expression -> expression PLUS expression .)
    ANDOPERATOR     reduce using rule 51 (expression -> expression PLUS expression .)
    OROPERATOR      reduce using rule 51 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 51 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 67
    TIMES           shift and go to state 65

  ! DIVIDE          [ reduce using rule 51 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 66 ]


state 94

    (54) expression -> expression TIMES expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression

    PLUS            reduce using rule 54 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 54 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 54 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 54 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 54 (expression -> expression TIMES expression .)
    LESSTHANEQ      reduce using rule 54 (expression -> expression TIMES expression .)
    GREATERTHANEQ   reduce using rule 54 (expression -> expression TIMES expression .)
    UNEQUAL         reduce using rule 54 (expression -> expression TIMES expression .)
    EQUALCHECK      reduce using rule 54 (expression -> expression TIMES expression .)
    LESSTHAN        reduce using rule 54 (expression -> expression TIMES expression .)
    GREATERTHAN     reduce using rule 54 (expression -> expression TIMES expression .)
    ANDOPERATOR     reduce using rule 54 (expression -> expression TIMES expression .)
    OROPERATOR      reduce using rule 54 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 54 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 67 ]
  ! TIMES           [ shift and go to state 65 ]


state 95

    (52) expression -> expression MINUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression

    PLUS            reduce using rule 52 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 52 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 52 (expression -> expression MINUS expression .)
    LESSTHANEQ      reduce using rule 52 (expression -> expression MINUS expression .)
    GREATERTHANEQ   reduce using rule 52 (expression -> expression MINUS expression .)
    UNEQUAL         reduce using rule 52 (expression -> expression MINUS expression .)
    EQUALCHECK      reduce using rule 52 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 52 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 52 (expression -> expression MINUS expression .)
    ANDOPERATOR     reduce using rule 52 (expression -> expression MINUS expression .)
    OROPERATOR      reduce using rule 52 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 52 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 67
    TIMES           shift and go to state 65

  ! DIVIDE          [ reduce using rule 52 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 66 ]


state 96

    (53) expression -> expression DIVIDE expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression

    PLUS            reduce using rule 53 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 53 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 53 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 53 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 53 (expression -> expression DIVIDE expression .)
    LESSTHANEQ      reduce using rule 53 (expression -> expression DIVIDE expression .)
    GREATERTHANEQ   reduce using rule 53 (expression -> expression DIVIDE expression .)
    UNEQUAL         reduce using rule 53 (expression -> expression DIVIDE expression .)
    EQUALCHECK      reduce using rule 53 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 53 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 53 (expression -> expression DIVIDE expression .)
    ANDOPERATOR     reduce using rule 53 (expression -> expression DIVIDE expression .)
    OROPERATOR      reduce using rule 53 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 53 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 67 ]
  ! TIMES           [ shift and go to state 65 ]


state 97

    (40) CS -> NOT LPAREN expression . RPAREN
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression
    (39) CS -> expression .

    RPAREN          shift and go to state 114
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 67
    TIMES           shift and go to state 65
    LESSTHANEQ      reduce using rule 39 (CS -> expression .)
    GREATERTHANEQ   reduce using rule 39 (CS -> expression .)
    UNEQUAL         reduce using rule 39 (CS -> expression .)
    EQUALCHECK      reduce using rule 39 (CS -> expression .)
    LESSTHAN        reduce using rule 39 (CS -> expression .)
    GREATERTHAN     reduce using rule 39 (CS -> expression .)


state 98

    (24) conditional -> NOT LPAREN conditional . RPAREN
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    RPAREN          shift and go to state 115
    LESSTHANEQ      shift and go to state 76
    GREATERTHANEQ   shift and go to state 72
    UNEQUAL         shift and go to state 73
    EQUALCHECK      shift and go to state 78
    LESSTHAN        shift and go to state 77
    GREATERTHAN     shift and go to state 74
    ANDOPERATOR     shift and go to state 79
    OROPERATOR      shift and go to state 80


state 99

    (56) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    LESSTHANEQ      reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    ANDOPERATOR     reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    OROPERATOR      reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 56 (expression -> LPAREN expression RPAREN .)


state 100

    (22) conditional -> LPAREN conditional RPAREN .

    LESSTHANEQ      reduce using rule 22 (conditional -> LPAREN conditional RPAREN .)
    GREATERTHANEQ   reduce using rule 22 (conditional -> LPAREN conditional RPAREN .)
    UNEQUAL         reduce using rule 22 (conditional -> LPAREN conditional RPAREN .)
    EQUALCHECK      reduce using rule 22 (conditional -> LPAREN conditional RPAREN .)
    LESSTHAN        reduce using rule 22 (conditional -> LPAREN conditional RPAREN .)
    GREATERTHAN     reduce using rule 22 (conditional -> LPAREN conditional RPAREN .)
    ANDOPERATOR     reduce using rule 22 (conditional -> LPAREN conditional RPAREN .)
    OROPERATOR      reduce using rule 22 (conditional -> LPAREN conditional RPAREN .)
    RPAREN          reduce using rule 22 (conditional -> LPAREN conditional RPAREN .)


state 101

    (26) conditional -> conditional GREATERTHANEQ conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    LESSTHANEQ      reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    UNEQUAL         reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    EQUALCHECK      reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    LESSTHAN        reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    GREATERTHAN     reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    ANDOPERATOR     reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    OROPERATOR      reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)
    RPAREN          reduce using rule 26 (conditional -> conditional GREATERTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 76 ]
  ! GREATERTHANEQ   [ shift and go to state 72 ]
  ! UNEQUAL         [ shift and go to state 73 ]
  ! EQUALCHECK      [ shift and go to state 78 ]
  ! LESSTHAN        [ shift and go to state 77 ]
  ! GREATERTHAN     [ shift and go to state 74 ]
  ! ANDOPERATOR     [ shift and go to state 79 ]
  ! OROPERATOR      [ shift and go to state 80 ]


state 102

    (27) conditional -> conditional UNEQUAL conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    UNEQUAL         reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    EQUALCHECK      reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    ANDOPERATOR     reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    OROPERATOR      reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    RPAREN          reduce using rule 27 (conditional -> conditional UNEQUAL conditional .)
    LESSTHANEQ      shift and go to state 76
    GREATERTHANEQ   shift and go to state 72
    LESSTHAN        shift and go to state 77
    GREATERTHAN     shift and go to state 74

  ! LESSTHANEQ      [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! LESSTHAN        [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! GREATERTHAN     [ reduce using rule 27 (conditional -> conditional UNEQUAL conditional .) ]
  ! UNEQUAL         [ shift and go to state 73 ]
  ! EQUALCHECK      [ shift and go to state 78 ]
  ! ANDOPERATOR     [ shift and go to state 79 ]
  ! OROPERATOR      [ shift and go to state 80 ]


state 103

    (30) conditional -> conditional GREATERTHAN conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    LESSTHANEQ      reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHANEQ   reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    UNEQUAL         reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    EQUALCHECK      reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    LESSTHAN        reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    GREATERTHAN     reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    ANDOPERATOR     reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    OROPERATOR      reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)
    RPAREN          reduce using rule 30 (conditional -> conditional GREATERTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 76 ]
  ! GREATERTHANEQ   [ shift and go to state 72 ]
  ! UNEQUAL         [ shift and go to state 73 ]
  ! EQUALCHECK      [ shift and go to state 78 ]
  ! LESSTHAN        [ shift and go to state 77 ]
  ! GREATERTHAN     [ shift and go to state 74 ]
  ! ANDOPERATOR     [ shift and go to state 79 ]
  ! OROPERATOR      [ shift and go to state 80 ]


state 104

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional RPAREN LBRACE . fbody RBRACE ELSE statement
    (4) fbody -> . allstatement fbody
    (5) fbody -> .
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) statement -> . SEMICOLON
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (48) assignment -> . assignment_base SEMICOLON
    (41) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (49) assignment_base -> . TIMES pointervar EQUALS expression
    (50) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 5 (fbody -> .)
    SEMICOLON       shift and go to state 21
    IF              shift and go to state 9
    TYPE            shift and go to state 19
    WHILE           shift and go to state 12
    TIMES           shift and go to state 22
    NAME            shift and go to state 20

    allstatement                   shift and go to state 15
    fbody                          shift and go to state 116
    declaration                    shift and go to state 17
    assignment_base                shift and go to state 18
    statement                      shift and go to state 13
    assignment                     shift and go to state 10
    whileblock                     shift and go to state 11
    unmatchedstatement             shift and go to state 23
    ifblock                        shift and go to state 14

state 105

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN statement . ELSE unmatchedstatement
    (17) ifblock -> IF LPAREN conditional RPAREN statement . ELSE statement
    (18) ifblock -> IF LPAREN conditional RPAREN statement . ELSE LBRACE fbody RBRACE
    (6) allstatement -> statement .

    ELSE            shift and go to state 117
    SEMICOLON       reduce using rule 6 (allstatement -> statement .)
    IF              reduce using rule 6 (allstatement -> statement .)
    TYPE            reduce using rule 6 (allstatement -> statement .)
    WHILE           reduce using rule 6 (allstatement -> statement .)
    TIMES           reduce using rule 6 (allstatement -> statement .)
    NAME            reduce using rule 6 (allstatement -> statement .)
    RBRACE          reduce using rule 6 (allstatement -> statement .)


state 106

    (13) unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .

    SEMICOLON       reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    IF              reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TYPE            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    WHILE           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    TIMES           reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    NAME            reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)
    RBRACE          reduce using rule 13 (unmatchedstatement -> IF LPAREN conditional RPAREN allstatement .)


state 107

    (25) conditional -> conditional LESSTHANEQ conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    LESSTHANEQ      reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHANEQ   reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    UNEQUAL         reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    EQUALCHECK      reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    LESSTHAN        reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    GREATERTHAN     reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    ANDOPERATOR     reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    OROPERATOR      reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)
    RPAREN          reduce using rule 25 (conditional -> conditional LESSTHANEQ conditional .)

  ! LESSTHANEQ      [ shift and go to state 76 ]
  ! GREATERTHANEQ   [ shift and go to state 72 ]
  ! UNEQUAL         [ shift and go to state 73 ]
  ! EQUALCHECK      [ shift and go to state 78 ]
  ! LESSTHAN        [ shift and go to state 77 ]
  ! GREATERTHAN     [ shift and go to state 74 ]
  ! ANDOPERATOR     [ shift and go to state 79 ]
  ! OROPERATOR      [ shift and go to state 80 ]


state 108

    (29) conditional -> conditional LESSTHAN conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    LESSTHANEQ      reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHANEQ   reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    UNEQUAL         reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    EQUALCHECK      reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    LESSTHAN        reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    GREATERTHAN     reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    ANDOPERATOR     reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    OROPERATOR      reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)
    RPAREN          reduce using rule 29 (conditional -> conditional LESSTHAN conditional .)

  ! LESSTHANEQ      [ shift and go to state 76 ]
  ! GREATERTHANEQ   [ shift and go to state 72 ]
  ! UNEQUAL         [ shift and go to state 73 ]
  ! EQUALCHECK      [ shift and go to state 78 ]
  ! LESSTHAN        [ shift and go to state 77 ]
  ! GREATERTHAN     [ shift and go to state 74 ]
  ! ANDOPERATOR     [ shift and go to state 79 ]
  ! OROPERATOR      [ shift and go to state 80 ]


state 109

    (28) conditional -> conditional EQUALCHECK conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    UNEQUAL         reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    EQUALCHECK      reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    ANDOPERATOR     reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    OROPERATOR      reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    RPAREN          reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .)
    LESSTHANEQ      shift and go to state 76
    GREATERTHANEQ   shift and go to state 72
    LESSTHAN        shift and go to state 77
    GREATERTHAN     shift and go to state 74

  ! LESSTHANEQ      [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! LESSTHAN        [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! GREATERTHAN     [ reduce using rule 28 (conditional -> conditional EQUALCHECK conditional .) ]
  ! UNEQUAL         [ shift and go to state 73 ]
  ! EQUALCHECK      [ shift and go to state 78 ]
  ! ANDOPERATOR     [ shift and go to state 79 ]
  ! OROPERATOR      [ shift and go to state 80 ]


state 110

    (31) conditional -> conditional ANDOPERATOR conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    ANDOPERATOR     reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .)
    OROPERATOR      reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .)
    RPAREN          reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .)
    LESSTHANEQ      shift and go to state 76
    GREATERTHANEQ   shift and go to state 72
    UNEQUAL         shift and go to state 73
    EQUALCHECK      shift and go to state 78
    LESSTHAN        shift and go to state 77
    GREATERTHAN     shift and go to state 74

  ! LESSTHANEQ      [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! UNEQUAL         [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! EQUALCHECK      [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! LESSTHAN        [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! GREATERTHAN     [ reduce using rule 31 (conditional -> conditional ANDOPERATOR conditional .) ]
  ! ANDOPERATOR     [ shift and go to state 79 ]
  ! OROPERATOR      [ shift and go to state 80 ]


state 111

    (32) conditional -> conditional OROPERATOR conditional .
    (25) conditional -> conditional . LESSTHANEQ conditional
    (26) conditional -> conditional . GREATERTHANEQ conditional
    (27) conditional -> conditional . UNEQUAL conditional
    (28) conditional -> conditional . EQUALCHECK conditional
    (29) conditional -> conditional . LESSTHAN conditional
    (30) conditional -> conditional . GREATERTHAN conditional
    (31) conditional -> conditional . ANDOPERATOR conditional
    (32) conditional -> conditional . OROPERATOR conditional

    OROPERATOR      reduce using rule 32 (conditional -> conditional OROPERATOR conditional .)
    RPAREN          reduce using rule 32 (conditional -> conditional OROPERATOR conditional .)
    LESSTHANEQ      shift and go to state 76
    GREATERTHANEQ   shift and go to state 72
    UNEQUAL         shift and go to state 73
    EQUALCHECK      shift and go to state 78
    LESSTHAN        shift and go to state 77
    GREATERTHAN     shift and go to state 74
    ANDOPERATOR     shift and go to state 79

  ! LESSTHANEQ      [ reduce using rule 32 (conditional -> conditional OROPERATOR conditional .) ]
  ! GREATERTHANEQ   [ reduce using rule 32 (conditional -> conditional OROPERATOR conditional .) ]
  ! UNEQUAL         [ reduce using rule 32 (conditional -> conditional OROPERATOR conditional .) ]
  ! EQUALCHECK      [ reduce using rule 32 (conditional -> conditional OROPERATOR conditional .) ]
  ! LESSTHAN        [ reduce using rule 32 (conditional -> conditional OROPERATOR conditional .) ]
  ! GREATERTHAN     [ reduce using rule 32 (conditional -> conditional OROPERATOR conditional .) ]
  ! ANDOPERATOR     [ reduce using rule 32 (conditional -> conditional OROPERATOR conditional .) ]
  ! OROPERATOR      [ shift and go to state 80 ]


state 112

    (21) whileblock -> WHILE LPAREN conditional RPAREN LBRACE . fbody RBRACE
    (4) fbody -> . allstatement fbody
    (5) fbody -> .
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) statement -> . SEMICOLON
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (48) assignment -> . assignment_base SEMICOLON
    (41) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (49) assignment_base -> . TIMES pointervar EQUALS expression
    (50) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 5 (fbody -> .)
    SEMICOLON       shift and go to state 21
    IF              shift and go to state 9
    TYPE            shift and go to state 19
    WHILE           shift and go to state 12
    TIMES           shift and go to state 22
    NAME            shift and go to state 20

    allstatement                   shift and go to state 15
    fbody                          shift and go to state 118
    declaration                    shift and go to state 17
    assignment_base                shift and go to state 18
    statement                      shift and go to state 13
    assignment                     shift and go to state 10
    whileblock                     shift and go to state 11
    unmatchedstatement             shift and go to state 23
    ifblock                        shift and go to state 14

state 113

    (40) CS -> NOT LPAREN . expression RPAREN
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . pointervar
    (59) pointervar -> . TIMES pointervar
    (60) pointervar -> . ADDROF pointervar
    (61) pointervar -> . NAME

    MINUS           shift and go to state 41
    LPAREN          shift and go to state 54
    NUMBER          shift and go to state 44
    TIMES           shift and go to state 37
    ADDROF          shift and go to state 34
    NAME            shift and go to state 35

    expression                     shift and go to state 119
    pointervar                     shift and go to state 43

state 114

    (40) CS -> NOT LPAREN expression RPAREN .

    LESSTHANEQ      reduce using rule 40 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHANEQ   reduce using rule 40 (CS -> NOT LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 40 (CS -> NOT LPAREN expression RPAREN .)
    EQUALCHECK      reduce using rule 40 (CS -> NOT LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 40 (CS -> NOT LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 40 (CS -> NOT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 40 (CS -> NOT LPAREN expression RPAREN .)
    ANDOPERATOR     reduce using rule 40 (CS -> NOT LPAREN expression RPAREN .)
    OROPERATOR      reduce using rule 40 (CS -> NOT LPAREN expression RPAREN .)


state 115

    (24) conditional -> NOT LPAREN conditional RPAREN .

    LESSTHANEQ      reduce using rule 24 (conditional -> NOT LPAREN conditional RPAREN .)
    GREATERTHANEQ   reduce using rule 24 (conditional -> NOT LPAREN conditional RPAREN .)
    UNEQUAL         reduce using rule 24 (conditional -> NOT LPAREN conditional RPAREN .)
    EQUALCHECK      reduce using rule 24 (conditional -> NOT LPAREN conditional RPAREN .)
    LESSTHAN        reduce using rule 24 (conditional -> NOT LPAREN conditional RPAREN .)
    GREATERTHAN     reduce using rule 24 (conditional -> NOT LPAREN conditional RPAREN .)
    ANDOPERATOR     reduce using rule 24 (conditional -> NOT LPAREN conditional RPAREN .)
    OROPERATOR      reduce using rule 24 (conditional -> NOT LPAREN conditional RPAREN .)
    RPAREN          reduce using rule 24 (conditional -> NOT LPAREN conditional RPAREN .)


state 116

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody . RBRACE ELSE statement

    RBRACE          shift and go to state 120


state 117

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE . unmatchedstatement
    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE . statement
    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE . LBRACE fbody RBRACE
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) statement -> . SEMICOLON
    (48) assignment -> . assignment_base SEMICOLON
    (41) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (49) assignment_base -> . TIMES pointervar EQUALS expression
    (50) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 121
    IF              shift and go to state 9
    SEMICOLON       shift and go to state 21
    TYPE            shift and go to state 19
    WHILE           shift and go to state 12
    TIMES           shift and go to state 22
    NAME            shift and go to state 20

    declaration                    shift and go to state 17
    assignment_base                shift and go to state 18
    statement                      shift and go to state 122
    assignment                     shift and go to state 10
    whileblock                     shift and go to state 11
    unmatchedstatement             shift and go to state 123
    ifblock                        shift and go to state 14

state 118

    (21) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody . RBRACE

    RBRACE          shift and go to state 124


state 119

    (40) CS -> NOT LPAREN expression . RPAREN
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . TIMES expression

    RPAREN          shift and go to state 114
    PLUS            shift and go to state 64
    MINUS           shift and go to state 66
    DIVIDE          shift and go to state 67
    TIMES           shift and go to state 65


state 120

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE unmatchedstatement
    (16) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE . ELSE statement

    ELSE            shift and go to state 125
    SEMICOLON       reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    IF              reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 16 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 121

    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement fbody
    (5) fbody -> .
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) statement -> . SEMICOLON
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (48) assignment -> . assignment_base SEMICOLON
    (41) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (49) assignment_base -> . TIMES pointervar EQUALS expression
    (50) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 5 (fbody -> .)
    SEMICOLON       shift and go to state 21
    IF              shift and go to state 9
    TYPE            shift and go to state 19
    WHILE           shift and go to state 12
    TIMES           shift and go to state 22
    NAME            shift and go to state 20

    allstatement                   shift and go to state 15
    fbody                          shift and go to state 126
    declaration                    shift and go to state 17
    assignment_base                shift and go to state 18
    statement                      shift and go to state 13
    assignment                     shift and go to state 10
    whileblock                     shift and go to state 11
    unmatchedstatement             shift and go to state 23
    ifblock                        shift and go to state 14

state 122

    (17) ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .

    ELSE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    SEMICOLON       reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    IF              reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TYPE            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    WHILE           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    TIMES           reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    NAME            reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 17 (ifblock -> IF LPAREN conditional RPAREN statement ELSE statement .)


state 123

    (14) unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .

    SEMICOLON       reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    IF              reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TYPE            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    WHILE           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    TIMES           reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    NAME            reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)
    RBRACE          reduce using rule 14 (unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement .)


state 124

    (21) whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .

    SEMICOLON       reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    IF              reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TYPE            reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    WHILE           reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    TIMES           reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    NAME            reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)
    ELSE            reduce using rule 21 (whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE .)


state 125

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . unmatchedstatement
    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . LBRACE fbody RBRACE
    (20) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE . statement
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) statement -> . SEMICOLON
    (48) assignment -> . assignment_base SEMICOLON
    (41) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (49) assignment_base -> . TIMES pointervar EQUALS expression
    (50) assignment_base -> . NAME EQUALS expression

    LBRACE          shift and go to state 127
    IF              shift and go to state 9
    SEMICOLON       shift and go to state 21
    TYPE            shift and go to state 19
    WHILE           shift and go to state 12
    TIMES           shift and go to state 22
    NAME            shift and go to state 20

    declaration                    shift and go to state 17
    assignment_base                shift and go to state 18
    statement                      shift and go to state 128
    assignment                     shift and go to state 10
    whileblock                     shift and go to state 11
    unmatchedstatement             shift and go to state 129
    ifblock                        shift and go to state 14

state 126

    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 130


state 127

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE . fbody RBRACE
    (4) fbody -> . allstatement fbody
    (5) fbody -> .
    (6) allstatement -> . statement
    (7) allstatement -> . unmatchedstatement
    (8) statement -> . assignment
    (9) statement -> . declaration
    (10) statement -> . whileblock
    (11) statement -> . ifblock
    (12) statement -> . SEMICOLON
    (13) unmatchedstatement -> . IF LPAREN conditional RPAREN allstatement
    (14) unmatchedstatement -> . IF LPAREN conditional RPAREN statement ELSE unmatchedstatement
    (15) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement
    (16) unmatchedstatement -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE
    (48) assignment -> . assignment_base SEMICOLON
    (41) declaration -> . TYPE dlist1 SEMICOLON
    (21) whileblock -> . WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE
    (17) ifblock -> . IF LPAREN conditional RPAREN statement ELSE statement
    (18) ifblock -> . IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE
    (19) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE
    (20) ifblock -> . IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement
    (49) assignment_base -> . TIMES pointervar EQUALS expression
    (50) assignment_base -> . NAME EQUALS expression

    RBRACE          reduce using rule 5 (fbody -> .)
    SEMICOLON       shift and go to state 21
    IF              shift and go to state 9
    TYPE            shift and go to state 19
    WHILE           shift and go to state 12
    TIMES           shift and go to state 22
    NAME            shift and go to state 20

    allstatement                   shift and go to state 15
    fbody                          shift and go to state 131
    declaration                    shift and go to state 17
    assignment_base                shift and go to state 18
    statement                      shift and go to state 13
    assignment                     shift and go to state 10
    whileblock                     shift and go to state 11
    unmatchedstatement             shift and go to state 23
    ifblock                        shift and go to state 14

state 128

    (20) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .

    ELSE            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    SEMICOLON       reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    IF              reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TYPE            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    WHILE           reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    TIMES           reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    NAME            reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)
    RBRACE          reduce using rule 20 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement .)


state 129

    (15) unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .

    SEMICOLON       reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    IF              reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TYPE            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    WHILE           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    TIMES           reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    NAME            reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)
    RBRACE          reduce using rule 15 (unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement .)


state 130

    (18) ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .

    ELSE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    SEMICOLON       reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    IF              reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 18 (ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE .)


state 131

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody . RBRACE

    RBRACE          shift and go to state 132


state 132

    (19) ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .

    ELSE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    SEMICOLON       reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    IF              reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TYPE            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    WHILE           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    TIMES           reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    NAME            reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)
    RBRACE          reduce using rule 19 (ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE .)

