
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSNUMBER FLOAT TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE RETURN EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT\n\tmaster : program\n\t \n\tprogram : function \n\t\t\t\t| function program\n\t\t\t\t| declaration program\n\t\n\tprogram : prototype program\n\t\n\tprototype : TYPE NAME LPAREN paramlist RPAREN SEMICOLON\n\t\n\tprototype : TYPE specialvar LPAREN paramlist RPAREN SEMICOLON\n\t\n\tallthestars : TIMES \n\t\t\t\t| TIMES allthestars\n\t\n\tfunction : TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE\n\t\n\tfunction : TYPE specialvar LPAREN paramlist RPAREN LBRACE fbody RBRACE\n\t\n\tparamlist : \n\t\t\t| TYPE NAME paramlist2\n\t\t\t| TYPE specialvar paramlist2\n\t\n\tparamlist2 : \n\t\t\t|  COMMA TYPE NAME paramlist2\n\t\t\t|  COMMA TYPE specialvar paramlist2\n\t\n\tfbody : allstatement fbody\n\t\t\t| \n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\t\t| returnstatement\n\t\t\t| functioncall SEMICOLON\n\t\n\treturnstatement : RETURN expression SEMICOLON\n\t\n\treturnstatement : RETURN SEMICOLON\n\t\n\tfunctioncall : NAME LPAREN arguments RPAREN\n\t\n\targuments : expression \n\t\t\t\t| expression COMMA arguments\n\t\n\tstatement : SEMICOLON\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : LPAREN conditional RPAREN\n\t\n\tconditional : conditionbase\n\t\t\t\t| NOT LPAREN conditional RPAREN\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\n\tspecialvar : TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : functioncall\n\t\n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : allnumbers\n\t\n\tallnumbers : FLOAT\n\t\n\tallnumbers : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'$end':([1,2,4,7,8,13,79,83,],[-1,-2,0,-3,-4,-5,-10,-11,]),'UNEQUAL':([65,66,67,72,73,74,80,86,87,88,89,93,99,100,105,121,122,124,125,126,127,128,130,133,134,135,136,137,138,139,143,145,146,147,148,149,150,151,152,153,159,160,],[-81,-80,-85,-82,-79,-72,-85,108,-44,-60,118,-77,-84,-83,108,-60,108,-78,-74,-75,-76,-73,-30,-49,-50,-48,108,108,-51,-46,-47,-54,-59,-57,-56,-58,-55,-43,-60,108,-61,-45,]),'TYPE':([0,2,3,6,14,15,17,33,35,36,37,38,40,41,42,44,49,50,51,53,56,63,69,76,79,83,95,113,140,141,142,155,157,162,163,164,165,167,168,170,171,172,173,175,],[5,5,5,5,-62,21,21,39,-6,54,-7,54,-26,-25,-23,54,-24,-20,-21,-33,-22,-69,-29,-27,-10,-11,-28,54,-34,54,-20,54,54,-37,54,-38,-35,-42,54,54,-41,-36,-39,-40,]),'OROPERATOR':([65,66,67,72,73,74,80,86,87,88,93,99,100,105,122,124,125,126,127,128,130,133,134,135,136,137,138,139,143,145,146,147,148,149,150,151,153,159,160,],[-81,-80,-85,-82,-79,-72,-85,110,-44,-60,-77,-84,-83,110,110,-78,-74,-75,-76,-73,-30,-49,-50,-48,-52,-53,-51,-46,-47,-54,-59,-57,-56,-58,-55,-43,110,-61,-45,]),'GREATERTHAN':([65,66,67,72,73,74,80,86,87,88,89,93,99,100,105,121,122,124,125,126,127,128,130,133,134,135,136,137,138,139,143,145,146,147,148,149,150,151,152,153,159,160,],[-81,-80,-85,-82,-79,-72,-85,111,-44,-60,116,-77,-84,-83,111,-60,111,-78,-74,-75,-76,-73,-30,111,-50,111,111,111,-51,-46,-47,-54,-59,-57,-56,-58,-55,-43,-60,111,-61,-45,]),'MINUS':([46,61,64,65,66,67,68,70,72,73,74,77,78,80,82,88,90,92,93,94,96,97,98,99,100,101,103,104,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,152,158,166,],[68,68,68,-81,-80,-85,68,94,-82,-79,-72,68,68,-85,68,94,68,94,-77,68,68,68,68,-84,-83,94,94,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,94,68,-78,-74,-75,-76,-73,68,-30,94,94,68,94,]),'WHILE':([14,36,38,40,41,42,44,49,50,51,53,56,63,69,76,95,113,140,141,142,155,157,162,163,164,165,167,168,170,171,172,173,175,],[-62,57,57,-26,-25,-23,57,-24,-20,-21,-33,-22,-69,-29,-27,-28,57,-34,57,-20,57,57,-37,57,-38,-35,-42,57,57,-41,-36,-39,-40,]),'ADDROF':([46,55,61,64,68,71,75,77,78,82,90,94,96,97,98,104,106,107,108,109,110,111,112,114,115,116,117,118,119,120,123,129,158,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'ANDOPERATOR':([65,66,67,72,73,74,80,86,87,88,93,99,100,105,122,124,125,126,127,128,130,133,134,135,136,137,138,139,143,145,146,147,148,149,150,151,153,159,160,],[-81,-80,-85,-82,-79,-72,-85,109,-44,-60,-77,-84,-83,109,109,-78,-74,-75,-76,-73,-30,-49,-50,-48,-52,109,-51,-46,-47,-54,-59,-57,-56,-58,-55,-43,109,-61,-45,]),'LESSTHANEQ':([65,66,67,72,73,74,80,86,87,88,89,93,99,100,105,121,122,124,125,126,127,128,130,133,134,135,136,137,138,139,143,145,146,147,148,149,150,151,152,153,159,160,],[-81,-80,-85,-82,-79,-72,-85,112,-44,-60,115,-77,-84,-83,112,-60,112,-78,-74,-75,-76,-73,-30,112,-50,112,112,112,-51,-46,-47,-54,-59,-57,-56,-58,-55,-43,-60,112,-61,-45,]),'RPAREN':([15,17,19,20,22,26,28,29,32,34,59,60,65,66,67,72,73,74,80,84,85,86,87,88,92,93,99,100,101,102,105,121,122,124,125,126,127,128,130,133,134,135,136,137,138,139,143,145,146,147,148,149,150,151,152,153,154,159,160,166,],[-12,-12,-68,-67,30,31,-15,-15,-13,-14,-15,-15,-81,-80,-85,-82,-79,-72,-85,-16,-17,113,-44,-60,124,-77,-84,-83,-31,130,132,124,151,-78,-74,-75,-76,-73,-30,-49,-50,-48,-52,-53,-51,-46,-47,-54,-59,-57,-56,-58,-55,-43,159,160,-32,-61,-45,159,]),'LESSTHAN':([65,66,67,72,73,74,80,86,87,88,89,93,99,100,105,121,122,124,125,126,127,128,130,133,134,135,136,137,138,139,143,145,146,147,148,149,150,151,152,153,159,160,],[-81,-80,-85,-82,-79,-72,-85,107,-44,-60,119,-77,-84,-83,107,-60,107,-78,-74,-75,-76,-73,-30,107,-50,107,107,107,-51,-46,-47,-54,-59,-57,-56,-58,-55,-43,-60,107,-61,-45,]),'TIMES':([5,12,14,16,18,21,36,38,39,40,41,42,44,46,49,50,51,53,54,55,56,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,88,90,92,93,94,95,96,97,98,99,100,101,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,140,141,142,152,155,157,158,162,163,164,165,166,167,168,170,171,172,173,175,],[12,12,-62,12,12,12,55,55,12,-26,-25,-23,55,75,-24,-20,-21,-33,12,75,-22,75,-69,75,-81,-80,-85,75,-29,97,75,-82,-79,-72,75,-27,75,75,-85,75,97,75,97,-77,75,-28,75,75,75,-84,-83,97,97,75,75,75,75,75,75,75,75,55,75,75,75,75,75,75,75,97,75,-78,97,-75,-76,97,75,-30,97,-34,55,-20,97,55,55,75,-37,55,-38,-35,97,-42,55,55,-41,-36,-39,-40,]),'LPAREN':([10,11,19,20,43,46,48,57,61,64,67,68,77,78,82,90,91,94,96,97,98,104,106,107,108,109,110,111,112,114,115,116,117,118,119,120,123,129,144,158,],[15,17,-68,-67,61,64,77,82,90,64,77,64,64,64,90,90,123,64,64,64,64,64,90,90,90,90,90,90,90,90,64,64,64,64,64,64,90,64,158,64,]),'LBRACE':([30,31,113,132,157,168,],[36,38,141,155,163,170,]),'EQUALCHECK':([65,66,67,72,73,74,80,86,87,88,89,93,99,100,105,121,122,124,125,126,127,128,130,133,134,135,136,137,138,139,143,145,146,147,148,149,150,151,152,153,159,160,],[-81,-80,-85,-82,-79,-72,-85,106,-44,-60,117,-77,-84,-83,106,-60,106,-78,-74,-75,-76,-73,-30,-49,-50,-48,106,106,-51,-46,-47,-54,-59,-57,-56,-58,-55,-43,-60,106,-61,-45,]),'FLOAT':([46,61,64,68,77,78,82,90,94,96,97,98,104,106,107,108,109,110,111,112,114,115,116,117,118,119,120,123,129,158,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'EQUALS':([48,80,81,99,100,],[78,-85,104,-84,-83,]),'RETURN':([14,36,38,40,41,42,44,49,50,51,53,56,63,69,76,95,113,140,141,142,155,157,162,163,164,165,167,168,170,171,172,173,175,],[-62,46,46,-26,-25,-23,46,-24,-20,-21,-33,-22,-69,-29,-27,-28,46,-34,46,-20,46,46,-37,46,-38,-35,-42,46,46,-41,-36,-39,-40,]),'NAME':([5,12,14,16,18,21,36,38,39,40,41,42,44,46,49,50,51,53,54,55,56,61,63,64,68,69,71,75,76,77,78,82,90,94,95,96,97,98,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,129,140,141,142,155,157,158,162,163,164,165,167,168,170,171,172,173,175,],[10,19,-62,23,23,28,48,48,59,-26,-25,-23,48,67,-24,-20,-21,-33,23,80,-22,67,-69,67,67,-29,80,80,-27,67,67,67,67,67,-28,67,67,67,67,67,67,67,67,67,67,67,48,67,67,67,67,67,67,67,67,67,-34,48,-20,48,48,67,-37,48,-38,-35,-42,48,48,-41,-36,-39,-40,]),'SEMICOLON':([9,10,11,14,19,20,23,24,25,27,30,31,36,38,40,41,42,44,45,46,47,49,50,51,53,56,63,65,66,67,69,70,72,73,74,76,80,93,95,99,100,103,113,124,125,126,127,128,130,131,140,141,142,155,157,162,163,164,165,167,168,170,171,172,173,175,],[14,-63,-65,-62,-68,-67,-63,-64,-65,-66,35,37,53,53,-26,-25,-23,53,63,69,76,-24,-20,-21,-33,-22,-69,-81,-80,-85,-29,95,-82,-79,-72,-27,-85,-77,-28,-84,-83,-71,53,-78,-74,-75,-76,-73,-30,-70,-34,53,-20,53,53,-37,53,-38,-35,-42,53,53,-41,-36,-39,-40,]),'ELSE':([14,40,41,42,49,53,56,63,69,76,95,142,162,164,167,171,173,175,],[-62,-26,-25,-23,-24,-33,-22,-69,-29,-27,-28,157,168,-38,-42,-41,-39,-40,]),'NOT':([61,82,90,106,107,108,109,110,111,112,114,115,116,117,118,119,120,123,],[91,91,91,91,91,91,91,91,91,91,91,144,144,144,144,144,144,91,]),'IF':([14,36,38,40,41,42,44,49,50,51,53,56,63,69,76,95,113,140,141,142,155,157,162,163,164,165,167,168,170,171,172,173,175,],[-62,43,43,-26,-25,-23,43,-24,-20,-21,-33,-22,-69,-29,-27,-28,43,-34,43,-20,43,43,-37,43,-38,-35,-42,43,43,-41,-36,-39,-40,]),'COMMA':([10,11,19,20,23,25,28,29,59,60,65,66,67,72,73,74,80,93,99,100,101,124,125,126,127,128,130,],[16,18,-68,-67,16,18,33,33,33,33,-81,-80,-85,-82,-79,-72,-85,-77,-84,-83,129,-78,-74,-75,-76,-73,-30,]),'GREATERTHANEQ':([65,66,67,72,73,74,80,86,87,88,89,93,99,100,105,121,122,124,125,126,127,128,130,133,134,135,136,137,138,139,143,145,146,147,148,149,150,151,152,153,159,160,],[-81,-80,-85,-82,-79,-72,-85,114,-44,-60,120,-77,-84,-83,114,-60,114,-78,-74,-75,-76,-73,-30,114,-50,114,114,114,-51,-46,-47,-54,-59,-57,-56,-58,-55,-43,-60,114,-61,-45,]),'RBRACE':([14,36,38,40,41,42,44,49,50,51,52,53,56,58,62,63,69,76,95,140,141,142,155,156,161,162,163,164,165,167,169,170,171,172,173,174,175,],[-62,-19,-19,-26,-25,-23,-19,-24,-20,-21,79,-33,-22,83,-18,-69,-29,-27,-28,-34,-19,-20,-19,162,167,-37,-19,-38,-35,-42,173,-19,-41,-36,-39,175,-40,]),'PLUS':([65,66,67,70,72,73,74,80,88,92,93,99,100,101,103,121,124,125,126,127,128,130,131,152,166,],[-81,-80,-85,98,-82,-79,-72,-85,98,98,-77,-84,-83,98,98,98,-78,-74,-75,-76,-73,-30,98,98,98,]),'DIVIDE':([65,66,67,70,72,73,74,80,88,92,93,99,100,101,103,121,124,125,126,127,128,130,131,152,166,],[-81,-80,-85,96,-82,-79,-72,-85,96,96,-77,-84,-83,96,96,96,-78,96,-75,-76,96,-30,96,96,96,]),'NUMBER':([46,61,64,68,77,78,82,90,94,96,97,98,104,106,107,108,109,110,111,112,114,115,116,117,118,119,120,123,129,158,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,6,],[1,7,8,13,]),'function':([0,2,3,6,],[2,2,2,2,]),'dlist1':([5,16,18,54,],[9,24,27,9,]),'pointervar':([46,55,61,64,68,71,75,77,78,82,90,94,96,97,98,104,106,107,108,109,110,111,112,114,115,116,117,118,119,120,123,129,158,],[72,81,72,72,72,99,100,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'conditional':([61,82,90,106,107,108,109,110,111,112,114,123,],[86,105,122,133,134,135,136,137,138,139,143,153,]),'paramlist2':([28,29,59,60,],[32,34,84,85,]),'ifblock':([36,38,44,113,141,155,157,163,168,170,],[41,41,41,41,41,41,41,41,41,41,]),'declaration':([0,2,3,6,36,38,44,113,141,155,157,163,168,170,],[3,3,3,3,42,42,42,42,42,42,42,42,42,42,]),'returnstatement':([36,38,44,113,141,155,157,163,168,170,],[40,40,40,40,40,40,40,40,40,40,]),'expression':([46,61,64,68,77,78,82,90,94,96,97,98,104,106,107,108,109,110,111,112,114,115,116,117,118,119,120,123,129,158,],[70,88,92,93,101,103,88,121,125,126,127,128,131,88,88,88,88,88,88,88,88,88,88,88,88,88,88,152,101,166,]),'allstatement':([36,38,44,113,141,155,163,170,],[44,44,44,140,44,44,44,44,]),'assignment_base':([36,38,44,113,141,155,157,163,168,170,],[45,45,45,45,45,45,45,45,45,45,]),'allnumbers':([46,61,64,68,77,78,82,90,94,96,97,98,104,106,107,108,109,110,111,112,114,115,116,117,118,119,120,123,129,158,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'whileblock':([36,38,44,113,141,155,157,163,168,170,],[49,49,49,49,49,49,49,49,49,49,]),'master':([0,],[4,]),'CS':([61,82,90,106,107,108,109,110,111,112,114,115,116,117,118,119,120,123,],[89,89,89,89,89,89,89,89,89,89,89,145,146,147,148,149,150,89,]),'paramlist':([15,17,],[22,26,]),'statement':([36,38,44,113,141,155,157,163,168,170,],[50,50,50,142,50,50,164,50,171,50,]),'assignment':([36,38,44,113,141,155,157,163,168,170,],[56,56,56,56,56,56,56,56,56,56,]),'fbody':([36,38,44,141,155,163,170,],[52,58,62,156,161,169,174,]),'conditionbase':([61,82,90,106,107,108,109,110,111,112,114,123,],[87,87,87,87,87,87,87,87,87,87,87,87,]),'specialvar':([5,12,16,18,21,39,54,],[11,20,25,25,29,60,25,]),'prototype':([0,2,3,6,],[6,6,6,6,]),'functioncall':([36,38,44,46,61,64,68,77,78,82,90,94,96,97,98,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,129,141,155,157,158,163,168,170,],[47,47,47,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,47,74,74,74,74,74,74,74,74,74,47,47,47,74,47,47,47,]),'unmatchedstatement':([36,38,44,113,141,155,157,163,168,170,],[51,51,51,51,51,51,165,51,172,51,]),'arguments':([77,129,],[102,154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> master","S'",1,None,None,None),
  ('master -> program','master',1,'p_masterprogram','Parser.py',702),
  ('program -> function','program',1,'p_program','Parser.py',734),
  ('program -> function program','program',2,'p_program','Parser.py',735),
  ('program -> declaration program','program',2,'p_program','Parser.py',736),
  ('program -> prototype program','program',2,'p_program1','Parser.py',766),
  ('prototype -> TYPE NAME LPAREN paramlist RPAREN SEMICOLON','prototype',6,'p_prototype','Parser.py',787),
  ('prototype -> TYPE specialvar LPAREN paramlist RPAREN SEMICOLON','prototype',6,'p_prototype_2','Parser.py',796),
  ('allthestars -> TIMES','allthestars',1,'p_function_stars','Parser.py',818),
  ('allthestars -> TIMES allthestars','allthestars',2,'p_function_stars','Parser.py',819),
  ('function -> TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function','Parser.py',840),
  ('function -> TYPE specialvar LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function_2','Parser.py',846),
  ('paramlist -> <empty>','paramlist',0,'p_paramlist','Parser.py',853),
  ('paramlist -> TYPE NAME paramlist2','paramlist',3,'p_paramlist','Parser.py',854),
  ('paramlist -> TYPE specialvar paramlist2','paramlist',3,'p_paramlist','Parser.py',855),
  ('paramlist2 -> <empty>','paramlist2',0,'p_paramlist2','Parser.py',868),
  ('paramlist2 -> COMMA TYPE NAME paramlist2','paramlist2',4,'p_paramlist2','Parser.py',869),
  ('paramlist2 -> COMMA TYPE specialvar paramlist2','paramlist2',4,'p_paramlist2','Parser.py',870),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','Parser.py',882),
  ('fbody -> <empty>','fbody',0,'p_fbody','Parser.py',883),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','Parser.py',906),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','Parser.py',907),
  ('statement -> assignment','statement',1,'p_statement_expr','Parser.py',913),
  ('statement -> declaration','statement',1,'p_statement_expr','Parser.py',914),
  ('statement -> whileblock','statement',1,'p_statement_expr','Parser.py',915),
  ('statement -> ifblock','statement',1,'p_statement_expr','Parser.py',916),
  ('statement -> returnstatement','statement',1,'p_statement_expr','Parser.py',917),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement_expr','Parser.py',918),
  ('returnstatement -> RETURN expression SEMICOLON','returnstatement',3,'p_return_statement','Parser.py',924),
  ('returnstatement -> RETURN SEMICOLON','returnstatement',2,'p_return_statement_2','Parser.py',930),
  ('functioncall -> NAME LPAREN arguments RPAREN','functioncall',4,'p_function_call','Parser.py',936),
  ('arguments -> expression','arguments',1,'p_function_arguments','Parser.py',945),
  ('arguments -> expression COMMA arguments','arguments',3,'p_function_arguments','Parser.py',946),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','Parser.py',956),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','Parser.py',962),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','Parser.py',963),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','Parser.py',964),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','Parser.py',975),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','Parser.py',981),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','Parser.py',982),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','Parser.py',983),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','Parser.py',994),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','Parser.py',999),
  ('conditional -> LPAREN conditional RPAREN','conditional',3,'p_conditional1','Parser.py',1005),
  ('conditional -> conditionbase','conditional',1,'p_conditional','Parser.py',1011),
  ('conditional -> NOT LPAREN conditional RPAREN','conditional',4,'p_conditional','Parser.py',1012),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','Parser.py',1013),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','Parser.py',1014),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','Parser.py',1015),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','Parser.py',1016),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','Parser.py',1017),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','Parser.py',1018),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','Parser.py',1019),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','Parser.py',1020),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',1046),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',1047),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','Parser.py',1048),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','Parser.py',1049),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',1050),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',1051),
  ('CS -> expression','CS',1,'p_cs','Parser.py',1071),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','Parser.py',1072),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','Parser.py',1080),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','Parser.py',1087),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','Parser.py',1088),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','Parser.py',1104),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','Parser.py',1105),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar1','Parser.py',1119),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar2','Parser.py',1124),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','Parser.py',1129),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','Parser.py',1138),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','Parser.py',1139),
  ('expression -> functioncall','expression',1,'p_expression_fcall','Parser.py',1164),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','Parser.py',1170),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','Parser.py',1171),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','Parser.py',1172),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','Parser.py',1189),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Parser.py',1197),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','Parser.py',1204),
  ('expression -> allnumbers','expression',1,'p_expression_base_number','Parser.py',1212),
  ('allnumbers -> FLOAT','allnumbers',1,'p_allnumbers_float','Parser.py',1220),
  ('allnumbers -> NUMBER','allnumbers',1,'p_allnumbers_int','Parser.py',1227),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','Parser.py',1234),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','Parser.py',1241),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','Parser.py',1246),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','Parser.py',1252),
]
