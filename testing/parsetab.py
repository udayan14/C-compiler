
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSNUMBER TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT \n\tprogram : function \n\t\t\t\t| function program\n\t\n\tfunction : TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE\n\t\n\tfbody : allstatement\n\t\t\t| allstatement fbody\n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : conditionbase\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\t\t\t| TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'DIVIDE':([28,38,39,41,45,47,49,56,61,78,82,83,84,85,86,102,],[-58,-54,59,-55,59,-56,-57,59,-52,59,-53,-51,59,-50,59,59,]),'NAME':([1,8,11,14,15,16,17,18,20,21,22,23,25,26,27,30,32,35,37,40,48,51,52,55,57,58,59,60,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,79,95,103,104,105,108,110,111,112,113,114,116,117,118,119,120,122,],[4,9,-6,28,-10,-8,-7,9,-11,33,-9,28,-45,28,28,28,28,53,28,28,28,33,33,-38,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,9,9,-6,9,-12,9,-20,-16,9,-13,-15,9,-17,-19,9,-14,-18,]),'UNEQUAL':([28,38,41,42,43,44,45,47,49,50,61,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,107,],[-58,-54,-55,-21,64,69,-36,-56,-57,69,-52,-53,-51,-48,-50,-49,-34,-31,-32,-35,-30,-33,69,-24,-26,-27,69,-25,-23,-22,-37,]),'RBRACE':([10,11,15,16,17,18,20,22,25,31,55,103,105,106,109,110,111,113,114,115,117,118,120,121,122,],[24,-6,-10,-8,-7,-4,-11,-9,-45,-5,-38,-6,-12,110,114,-20,-16,-13,-15,117,-17,-19,-14,122,-18,]),'$end':([2,3,5,24,],[0,-1,-2,-3,]),'MINUS':([23,26,28,32,37,38,39,40,41,45,47,48,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,82,83,84,85,86,102,],[40,40,-58,40,40,-54,60,40,-55,60,-56,40,-57,60,40,40,40,40,-52,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,60,-53,-51,-48,-50,-49,60,]),'TYPE':([0,3,8,11,15,16,17,18,20,22,24,25,55,79,95,103,104,105,108,110,111,112,113,114,116,117,118,119,120,122,],[1,1,21,-6,-10,-8,-7,21,-11,-9,-3,-45,-38,21,21,-6,21,-12,21,-20,-16,21,-13,-15,21,-17,-19,21,-14,-18,]),'GREATERTHANEQ':([28,38,41,42,43,44,45,47,49,50,61,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,107,],[-58,-54,-55,-21,63,75,-36,-56,-57,75,-52,-53,-51,-48,-50,-49,-34,-31,-32,-35,-30,-33,75,75,-26,-27,75,75,-23,-22,-37,]),'GREATERTHAN':([28,38,41,42,43,44,45,47,49,50,61,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,107,],[-58,-54,-55,-21,65,72,-36,-56,-57,72,-52,-53,-51,-48,-50,-49,-34,-31,-32,-35,-30,-33,72,72,-26,-27,72,72,-23,-22,-37,]),'ANDOPERATOR':([28,38,41,42,44,45,47,49,50,61,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,107,],[-58,-54,-55,-21,73,-36,-56,-57,73,-52,-53,-51,-48,-50,-49,-34,-31,-32,-35,-30,-33,73,-24,-26,-27,-28,-25,-23,-22,-37,]),'PLUS':([28,38,39,41,45,47,49,56,61,78,82,83,84,85,86,102,],[-58,-54,58,-55,58,-56,-57,58,-52,58,-53,-51,-48,-50,-49,58,]),'ELSE':([15,16,20,22,25,55,103,110,111,114,117,118,122,],[-10,-8,-11,-9,-45,-38,108,-20,-16,116,-17,-19,-18,]),'ADDROF':([14,23,26,27,30,32,37,40,48,57,58,59,60,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'LESSTHANEQ':([28,38,41,42,43,44,45,47,49,50,61,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,107,],[-58,-54,-55,-21,66,76,-36,-56,-57,76,-52,-53,-51,-48,-50,-49,-34,-31,-32,-35,-30,-33,76,76,-26,-27,76,76,-23,-22,-37,]),'LPAREN':([4,13,19,23,26,32,37,40,46,48,57,58,59,60,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,],[6,26,32,37,37,37,37,37,77,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'WHILE':([8,11,15,16,17,18,20,22,25,55,79,95,103,104,105,108,110,111,112,113,114,116,117,118,119,120,122,],[13,-6,-10,-8,-7,13,-11,-9,-45,-38,13,13,-6,13,-12,13,-20,-16,13,-13,-15,13,-17,-19,13,-14,-18,]),'NUMBER':([23,26,32,37,40,48,57,58,59,60,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'OROPERATOR':([28,38,41,42,44,45,47,49,50,61,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,107,],[-58,-54,-55,-21,68,-36,-56,-57,68,-52,-53,-51,-48,-50,-49,-34,-31,-32,-35,-30,-33,-29,-24,-26,-27,-28,-25,-23,-22,-37,]),'TIMES':([8,11,14,15,16,17,18,20,21,22,23,25,26,27,28,30,32,35,37,38,39,40,41,45,47,48,49,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,82,83,84,85,86,95,102,103,104,105,108,110,111,112,113,114,116,117,118,119,120,122,],[14,-6,27,-10,-8,-7,14,-11,35,-9,27,-45,27,27,-58,27,27,35,27,-54,57,27,-55,57,-56,27,-57,35,35,-38,57,27,27,27,27,-52,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,57,14,-53,-51,57,-50,57,14,57,-6,14,-12,14,-20,-16,14,-13,-15,14,-17,-19,14,-14,-18,]),'LESSTHAN':([28,38,41,42,43,44,45,47,49,50,61,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,107,],[-58,-54,-55,-21,62,71,-36,-56,-57,71,-52,-53,-51,-48,-50,-49,-34,-31,-32,-35,-30,-33,71,71,-26,-27,71,71,-23,-22,-37,]),'IF':([8,11,15,16,17,18,20,22,25,55,79,95,103,104,105,108,110,111,112,113,114,116,117,118,119,120,122,],[19,-6,-10,-8,-7,19,-11,-9,-45,-38,19,19,-6,19,-12,19,-20,-16,19,-13,-15,19,-17,-19,19,-14,-18,]),'EQUALCHECK':([28,38,41,42,43,44,45,47,49,50,61,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,107,],[-58,-54,-55,-21,67,74,-36,-56,-57,74,-52,-53,-51,-48,-50,-49,-34,-31,-32,-35,-30,-33,74,-24,-26,-27,74,-25,-23,-22,-37,]),'RPAREN':([6,28,38,41,42,44,45,47,49,50,56,61,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,107,],[7,-58,-54,-55,-21,70,-36,-56,-57,79,82,-52,-53,-51,-48,-50,-49,-34,-31,-32,-35,-30,-33,-29,-24,-26,-27,-28,-25,-23,-22,107,-37,]),'COMMA':([33,34,53,54,],[51,52,-44,-43,]),'EQUALS':([9,28,29,47,49,],[23,-58,48,-56,-57,]),'LBRACE':([7,70,79,108,116,],[8,95,104,112,119,]),'NOT':([26,32,62,63,64,65,66,67,68,69,71,72,73,74,75,76,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'SEMICOLON':([12,28,33,34,36,38,39,41,47,49,53,54,61,78,80,81,82,83,84,85,86,],[25,-58,-39,-41,55,-54,-47,-55,-56,-57,-44,-43,-52,-46,-40,-42,-53,-51,-48,-50,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,3,],[2,5,]),'function':([0,3,],[3,3,]),'fbody':([8,18,95,104,112,119,],[10,31,106,109,115,121,]),'assignment':([8,18,79,95,104,108,112,116,119,],[16,16,16,16,16,16,16,16,16,]),'specialvar':([21,35,51,52,],[34,54,34,34,]),'statement':([8,18,79,95,104,108,112,116,119,],[11,11,103,11,11,111,11,118,11,]),'conditional':([26,32,68,69,71,72,73,74,75,76,],[44,50,93,94,96,97,98,99,100,101,]),'unmatchedstatement':([8,18,79,95,104,108,112,116,119,],[17,17,17,17,17,113,17,120,17,]),'expression':([23,26,32,37,40,48,57,58,59,60,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,],[39,45,45,56,61,78,83,84,85,86,45,45,45,45,45,45,45,45,45,45,45,45,45,45,102,]),'assignment_base':([8,18,79,95,104,108,112,116,119,],[12,12,12,12,12,12,12,12,12,]),'CS':([26,32,62,63,64,65,66,67,68,69,71,72,73,74,75,76,],[43,43,87,88,89,90,91,92,43,43,43,43,43,43,43,43,]),'dlist1':([21,51,52,],[36,80,81,]),'conditionbase':([26,32,68,69,71,72,73,74,75,76,],[42,42,42,42,42,42,42,42,42,42,]),'whileblock':([8,18,79,95,104,108,112,116,119,],[15,15,15,15,15,15,15,15,15,]),'pointervar':([14,23,26,27,30,32,37,40,48,57,58,59,60,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,],[29,41,41,47,49,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'allstatement':([8,18,79,95,104,112,119,],[18,18,105,18,18,18,18,]),'ifblock':([8,18,79,95,104,108,112,116,119,],[20,20,20,20,20,20,20,20,20,]),'declaration':([8,18,79,95,104,108,112,116,119,],[22,22,22,22,22,22,22,22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','150070001-150070018.py',510),
  ('program -> function program','program',2,'p_program','150070001-150070018.py',511),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','150070001-150070018.py',535),
  ('fbody -> allstatement','fbody',1,'p_fbody','150070001-150070018.py',572),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','150070001-150070018.py',573),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','150070001-150070018.py',590),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','150070001-150070018.py',591),
  ('statement -> assignment','statement',1,'p_statement_expr','150070001-150070018.py',597),
  ('statement -> declaration','statement',1,'p_statement_expr','150070001-150070018.py',598),
  ('statement -> whileblock','statement',1,'p_statement_expr','150070001-150070018.py',599),
  ('statement -> ifblock','statement',1,'p_statement_expr','150070001-150070018.py',600),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','150070001-150070018.py',606),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','150070001-150070018.py',607),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','150070001-150070018.py',608),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','150070001-150070018.py',619),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','150070001-150070018.py',625),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','150070001-150070018.py',626),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','150070001-150070018.py',627),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','150070001-150070018.py',638),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','150070001-150070018.py',643),
  ('conditional -> conditionbase','conditional',1,'p_conditional','150070001-150070018.py',649),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','150070001-150070018.py',650),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','150070001-150070018.py',651),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','150070001-150070018.py',652),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','150070001-150070018.py',653),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','150070001-150070018.py',654),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','150070001-150070018.py',655),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','150070001-150070018.py',656),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','150070001-150070018.py',657),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','150070001-150070018.py',681),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','150070001-150070018.py',682),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','150070001-150070018.py',683),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','150070001-150070018.py',684),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','150070001-150070018.py',685),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','150070001-150070018.py',686),
  ('CS -> expression','CS',1,'p_cs','150070001-150070018.py',706),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','150070001-150070018.py',707),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','150070001-150070018.py',715),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','150070001-150070018.py',721),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','150070001-150070018.py',722),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','150070001-150070018.py',729),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','150070001-150070018.py',730),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar','150070001-150070018.py',737),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar','150070001-150070018.py',738),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','150070001-150070018.py',743),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','150070001-150070018.py',752),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','150070001-150070018.py',753),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','150070001-150070018.py',773),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','150070001-150070018.py',774),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','150070001-150070018.py',775),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','150070001-150070018.py',792),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','150070001-150070018.py',800),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','150070001-150070018.py',807),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','150070001-150070018.py',813),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','150070001-150070018.py',819),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','150070001-150070018.py',826),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','150070001-150070018.py',832),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','150070001-150070018.py',839),
]
