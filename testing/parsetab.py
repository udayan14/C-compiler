
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSNUMBER TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT \n\tprogram : function \n\t\t\t\t| function program\n\t\n\tfunction : TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE\n\t\n\tfbody : allstatement fbody\n\t\t\t| \n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\n\tstatement : SEMICOLON\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : conditionbase\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\t\t\t| TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'ADDROF':([14,27,29,31,32,37,39,43,44,58,59,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'OROPERATOR':([30,38,40,41,45,46,47,49,56,62,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,109,],[-59,-58,-57,-56,-55,69,-22,-37,69,-53,-51,-49,-50,-52,-54,-23,-25,-28,-27,-30,-24,-26,-29,-36,-35,-32,-31,-34,-33,-38,]),'EQUALS':([18,28,30,38,40,],[31,39,-59,-58,-57,]),'ELSE':([11,13,15,16,17,25,52,91,111,114,115,120,121,123,],[-8,-11,-9,-12,-10,-46,-39,108,116,-17,-21,-20,-18,-19,]),'LESSTHANEQ':([30,38,40,41,45,46,47,48,49,56,62,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,109,],[-59,-58,-57,-56,-55,64,-22,76,-37,64,-53,-51,-49,-50,-52,-54,-23,64,-28,-27,64,-24,64,64,-36,-35,-32,-31,-34,-33,-38,]),'EQUALCHECK':([30,38,40,41,45,46,47,48,49,56,62,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,109,],[-59,-58,-57,-56,-55,71,-22,77,-37,71,-53,-51,-49,-50,-52,-54,-23,-25,-28,-27,71,-24,-26,71,-36,-35,-32,-31,-34,-33,-38,]),'RPAREN':([6,30,38,40,41,45,46,47,49,56,62,63,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,],[7,-59,-58,-57,-56,-55,65,-22,-37,82,-53,87,-51,-49,-50,-52,-54,-23,-25,-28,-27,-30,-24,-26,-29,-36,-35,-32,-31,-34,-33,109,-38,]),'TIMES':([8,9,11,13,14,15,16,17,20,22,23,25,27,29,30,31,32,35,37,38,39,40,41,42,43,44,45,49,51,52,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,86,87,89,90,91,105,106,108,111,112,113,114,115,116,118,119,120,121,123,],[14,14,-8,-11,29,-9,-12,-10,35,-7,-6,-46,29,29,-59,29,29,35,29,-58,29,-57,-56,61,29,29,-55,61,35,-39,35,61,29,29,29,29,-53,61,29,14,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-51,61,61,-52,-54,-13,14,-6,61,14,14,-16,14,-14,-17,-21,14,14,-15,-20,-18,-19,]),'NUMBER':([31,32,37,39,43,44,58,59,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'DIVIDE':([30,38,40,41,42,45,49,57,62,63,83,84,85,86,87,105,],[-59,-58,-57,-56,58,-55,58,58,-53,58,-51,58,58,-52,-54,58,]),'$end':([1,3,4,26,],[-1,0,-2,-3,]),'GREATERTHANEQ':([30,38,40,41,45,46,47,48,49,56,62,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,109,],[-59,-58,-57,-56,-55,70,-22,75,-37,70,-53,-51,-49,-50,-52,-54,-23,70,-28,-27,70,-24,70,70,-36,-35,-32,-31,-34,-33,-38,]),'SEMICOLON':([8,9,10,11,13,15,16,17,22,23,25,30,33,34,36,38,40,41,42,45,52,53,54,57,62,65,80,81,83,84,85,86,87,89,90,91,106,108,111,112,113,114,115,116,118,119,120,121,123,],[16,16,25,-8,-11,-9,-12,-10,-7,-6,-46,-59,-40,52,-42,-58,-57,-56,-48,-55,-39,-44,-45,-47,-53,16,-41,-43,-51,-49,-50,-52,-54,-13,16,-6,16,16,-16,16,-14,-17,-21,16,16,-15,-20,-18,-19,]),'ANDOPERATOR':([30,38,40,41,45,46,47,49,56,62,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,109,],[-59,-58,-57,-56,-55,72,-22,-37,72,-53,-51,-49,-50,-52,-54,-23,-25,-28,-27,72,-24,-26,-29,-36,-35,-32,-31,-34,-33,-38,]),'LBRACE':([7,65,82,108,116,],[8,90,106,112,118,]),'NAME':([2,8,9,11,13,14,15,16,17,20,22,23,25,27,29,31,32,35,37,39,43,44,51,52,55,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,89,90,91,106,108,111,112,113,114,115,116,118,119,120,121,123,],[5,18,18,-8,-11,30,-9,-12,-10,33,-7,-6,-46,30,30,30,30,54,30,30,30,30,33,-39,33,30,30,30,30,30,18,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-13,18,-6,18,18,-16,18,-14,-17,-21,18,18,-15,-20,-18,-19,]),'IF':([8,9,11,13,15,16,17,22,23,25,52,65,89,90,91,106,108,111,112,113,114,115,116,118,119,120,121,123,],[19,19,-8,-11,-9,-12,-10,-7,-6,-46,-39,19,-13,19,-6,19,19,-16,19,-14,-17,-21,19,19,-15,-20,-18,-19,]),'RBRACE':([8,9,11,12,13,15,16,17,22,23,24,25,52,89,90,91,106,107,110,111,112,113,114,115,117,118,119,120,121,122,123,],[-5,-5,-8,26,-11,-9,-12,-10,-7,-6,-4,-46,-39,-13,-5,-6,-5,111,115,-16,-5,-14,-17,-21,121,-5,-15,-20,-18,123,-19,]),'TYPE':([0,1,8,9,11,13,15,16,17,22,23,25,26,52,65,89,90,91,106,108,111,112,113,114,115,116,118,119,120,121,123,],[2,2,20,20,-8,-11,-9,-12,-10,-7,-6,-46,-3,-39,20,-13,20,-6,20,20,-16,20,-14,-17,-21,20,20,-15,-20,-18,-19,]),'WHILE':([8,9,11,13,15,16,17,22,23,25,52,65,89,90,91,106,108,111,112,113,114,115,116,118,119,120,121,123,],[21,21,-8,-11,-9,-12,-10,-7,-6,-46,-39,21,-13,21,-6,21,21,-16,21,-14,-17,-21,21,21,-15,-20,-18,-19,]),'UNEQUAL':([30,38,40,41,45,46,47,48,49,56,62,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,109,],[-59,-58,-57,-56,-55,66,-22,78,-37,66,-53,-51,-49,-50,-52,-54,-23,-25,-28,-27,66,-24,-26,66,-36,-35,-32,-31,-34,-33,-38,]),'COMMA':([33,36,53,54,],[51,55,-44,-45,]),'LESSTHAN':([30,38,40,41,45,46,47,48,49,56,62,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,109,],[-59,-58,-57,-56,-55,68,-22,74,-37,68,-53,-51,-49,-50,-52,-54,-23,68,-28,-27,68,-24,68,68,-36,-35,-32,-31,-34,-33,-38,]),'NOT':([32,37,64,66,67,68,69,70,71,72,73,74,75,76,77,78,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'PLUS':([30,38,40,41,42,45,49,57,62,63,83,84,85,86,87,105,],[-59,-58,-57,-56,59,-55,59,59,-53,59,-51,-49,-50,-52,-54,59,]),'GREATERTHAN':([30,38,40,41,45,46,47,48,49,56,62,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,109,],[-59,-58,-57,-56,-55,67,-22,73,-37,67,-53,-51,-49,-50,-52,-54,-23,67,-28,-27,67,-24,67,67,-36,-35,-32,-31,-34,-33,-38,]),'MINUS':([30,31,32,37,38,39,40,41,42,43,44,45,49,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,85,86,87,105,],[-59,43,43,43,-58,43,-57,-56,60,43,43,-55,60,60,43,43,43,43,-53,60,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-51,-49,-50,-52,-54,60,]),'LPAREN':([5,19,21,31,32,37,39,43,44,50,58,59,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[6,32,37,44,44,44,44,44,44,79,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,1,],[1,1,]),'specialvar':([20,35,51,55,],[36,53,36,36,]),'pointervar':([14,27,29,31,32,37,39,43,44,58,59,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[28,38,40,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'allstatement':([8,9,65,90,106,112,118,],[9,9,89,9,9,9,9,]),'assignment_base':([8,9,65,90,106,108,112,116,118,],[10,10,10,10,10,10,10,10,10,]),'CS':([32,37,64,66,67,68,69,70,71,72,73,74,75,76,77,78,],[48,48,48,48,48,48,48,48,48,48,99,100,101,102,103,104,]),'assignment':([8,9,65,90,106,108,112,116,118,],[11,11,11,11,11,11,11,11,11,]),'fbody':([8,9,90,106,112,118,],[12,24,107,110,117,122,]),'ifblock':([8,9,65,90,106,108,112,116,118,],[13,13,13,13,13,13,13,13,13,]),'program':([0,1,],[3,4,]),'conditional':([32,37,64,66,67,68,69,70,71,72,],[46,56,88,92,93,94,95,96,97,98,]),'expression':([31,32,37,39,43,44,58,59,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[42,49,49,57,62,63,83,84,85,86,49,49,49,49,49,49,49,49,49,49,49,49,49,49,105,]),'unmatchedstatement':([8,9,65,90,106,108,112,116,118,],[22,22,22,22,22,113,22,119,22,]),'conditionbase':([32,37,64,66,67,68,69,70,71,72,],[47,47,47,47,47,47,47,47,47,47,]),'dlist1':([20,51,55,],[34,80,81,]),'declaration':([8,9,65,90,106,108,112,116,118,],[15,15,15,15,15,15,15,15,15,]),'statement':([8,9,65,90,106,108,112,116,118,],[23,23,91,23,23,114,23,120,23,]),'whileblock':([8,9,65,90,106,108,112,116,118,],[17,17,17,17,17,17,17,17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','better.py',634),
  ('program -> function program','program',2,'p_program','better.py',635),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','better.py',659),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','better.py',696),
  ('fbody -> <empty>','fbody',0,'p_fbody','better.py',697),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','better.py',720),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','better.py',721),
  ('statement -> assignment','statement',1,'p_statement_expr','better.py',727),
  ('statement -> declaration','statement',1,'p_statement_expr','better.py',728),
  ('statement -> whileblock','statement',1,'p_statement_expr','better.py',729),
  ('statement -> ifblock','statement',1,'p_statement_expr','better.py',730),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','better.py',736),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','better.py',742),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','better.py',743),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','better.py',744),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','better.py',755),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','better.py',761),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','better.py',762),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','better.py',763),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','better.py',774),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','better.py',779),
  ('conditional -> conditionbase','conditional',1,'p_conditional','better.py',785),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','better.py',786),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','better.py',787),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','better.py',788),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','better.py',789),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','better.py',790),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','better.py',791),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','better.py',792),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','better.py',793),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','better.py',817),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','better.py',818),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','better.py',819),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','better.py',820),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','better.py',821),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','better.py',822),
  ('CS -> expression','CS',1,'p_cs','better.py',842),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','better.py',843),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','better.py',851),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','better.py',857),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','better.py',858),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','better.py',865),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','better.py',866),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar','better.py',873),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar','better.py',874),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','better.py',879),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','better.py',888),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','better.py',889),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','better.py',909),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','better.py',910),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','better.py',911),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','better.py',928),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','better.py',936),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','better.py',943),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','better.py',949),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','better.py',955),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','better.py',962),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','better.py',968),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','better.py',975),
]
