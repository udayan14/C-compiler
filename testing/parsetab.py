
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSNUMBER FLOAT TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE RETURN EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT\n\tmaster : program\n\t \n\tprogram : function \n\t\t\t\t| function program\n\t\t\t\t| declaration program\n\t\n\tprogram : prototype program\n\t\n\tprototype : TYPE NAME LPAREN paramlist RPAREN SEMICOLON\n\t\n\tprototype : TYPE specialvar LPAREN paramlist RPAREN SEMICOLON\n\t\n\tallthestars : TIMES \n\t\t\t\t| TIMES allthestars\n\t\n\tfunction : TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE\n\t\n\tfunction : TYPE specialvar LPAREN paramlist RPAREN LBRACE fbody RBRACE\n\t\n\tparamlist : \n\t\t\t| TYPE NAME paramlist2\n\t\t\t| TYPE specialvar paramlist2\n\t\n\tparamlist2 : \n\t\t\t|  COMMA TYPE NAME paramlist2\n\t\t\t|  COMMA TYPE specialvar paramlist2\n\t\n\tfbody : allstatement fbody\n\t\t\t| \n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\t\t| returnstatement\n\t\t\t| functioncall SEMICOLON\n\t\n\treturnstatement : RETURN expression SEMICOLON\n\t\n\treturnstatement : RETURN SEMICOLON\n\t\n\tfunctioncall : NAME LPAREN arguments RPAREN\n\t\n\targuments : expression \n\t\t\t\t| expression COMMA arguments\n\t\n\tstatement : SEMICOLON\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : LPAREN conditional RPAREN\n\t\n\tconditional : conditionbase\n\t\t\t\t| NOT LPAREN conditional RPAREN\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\n\tspecialvar : TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : functioncall\n\t\n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : allnumbers\n\t\n\tallnumbers : FLOAT\n\t\n\tallnumbers : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'EQUALCHECK':([62,64,66,68,70,71,77,86,87,89,95,96,98,100,105,106,107,108,109,110,127,128,130,133,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,158,159,],[-80,-81,-82,-85,-79,-72,-85,-84,-77,-83,111,117,-44,-60,117,-78,-74,-75,-76,-73,117,-60,-30,-57,-56,-59,-54,-58,-55,-49,117,-46,-48,-50,117,-47,-51,117,-60,-43,-45,-61,]),'ADDROF':([40,45,61,63,65,69,73,74,75,80,90,91,92,94,99,104,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,156,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'OROPERATOR':([62,64,66,68,70,71,77,86,87,89,96,98,100,105,106,107,108,109,110,127,130,133,135,136,137,138,139,140,141,142,143,145,146,147,148,149,151,158,159,],[-80,-81,-82,-85,-79,-72,-85,-84,-77,-83,118,-44,-60,118,-78,-74,-75,-76,-73,118,-30,-57,-56,-59,-54,-58,-55,-49,-53,-46,-48,-50,-52,-47,-51,118,-43,-45,-61,]),'LESSTHANEQ':([62,64,66,68,70,71,77,86,87,89,95,96,98,100,105,106,107,108,109,110,127,128,130,133,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,158,159,],[-80,-81,-82,-85,-79,-72,-85,-84,-77,-83,114,119,-44,-60,119,-78,-74,-75,-76,-73,119,-60,-30,-57,-56,-59,-54,-58,-55,119,119,-46,119,-50,119,-47,-51,119,-60,-43,-45,-61,]),'MINUS':([40,62,63,64,65,66,68,70,71,72,73,74,75,77,80,86,87,88,89,90,91,92,94,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,128,129,130,131,150,156,162,],[63,-80,63,-81,63,-82,-85,-79,-72,90,63,63,63,-85,63,-84,-77,90,-83,63,63,63,63,63,90,90,90,63,-78,-74,-75,-76,-73,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,90,63,-30,90,90,63,90,]),'PLUS':([62,64,66,68,70,71,72,77,86,87,88,89,100,101,102,106,107,108,109,110,128,130,131,150,162,],[-80,-81,-82,-85,-79,-72,94,-85,-84,-77,94,-83,94,94,94,-78,-74,-75,-76,-73,94,-30,94,94,94,]),'NUMBER':([40,63,65,73,74,75,80,90,91,92,94,99,104,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,156,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'LBRACE':([30,31,121,132,160,169,],[36,38,144,155,166,173,]),'LESSTHAN':([62,64,66,68,70,71,77,86,87,89,95,96,98,100,105,106,107,108,109,110,127,128,130,133,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,158,159,],[-80,-81,-82,-85,-79,-72,-85,-84,-77,-83,115,122,-44,-60,122,-78,-74,-75,-76,-73,122,-60,-30,-57,-56,-59,-54,-58,-55,122,122,-46,122,-50,122,-47,-51,122,-60,-43,-45,-61,]),'NAME':([6,12,14,15,19,24,36,38,39,40,41,44,45,47,50,51,52,54,55,56,57,61,63,65,67,69,73,74,75,79,80,82,90,91,92,93,94,99,104,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,132,144,153,154,155,156,160,163,164,165,166,167,169,170,171,172,173,175,],[11,17,-62,21,21,28,43,43,59,68,-21,43,77,-24,-23,-20,-22,21,-33,-25,-26,77,68,68,-29,77,68,68,68,-27,68,-69,68,68,68,-28,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,43,43,-34,-20,43,68,43,-42,-35,-38,43,-37,43,-39,-36,-41,43,-40,]),'TIMES':([6,12,14,15,19,24,36,38,39,40,41,44,45,47,50,51,52,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,80,82,86,87,88,89,90,91,92,93,94,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,128,129,130,131,132,144,150,153,154,155,156,160,162,163,164,165,166,167,169,170,171,172,173,175,],[12,12,-62,12,12,12,45,45,12,69,-21,45,69,-24,-23,-20,-22,12,-33,-25,-26,69,-80,69,-81,69,-82,-29,-85,69,-79,-72,92,69,69,69,-85,-27,69,-69,-84,-77,92,-83,69,69,69,-28,69,69,92,92,92,69,-78,92,-75,-76,92,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,92,69,-30,92,45,45,92,-34,-20,45,69,45,92,-42,-35,-38,45,-37,45,-39,-36,-41,45,-40,]),'COMMA':([11,13,17,18,21,22,28,29,59,60,62,64,66,68,70,71,77,86,87,89,102,106,107,108,109,110,130,],[15,19,-68,-67,15,19,32,32,32,32,-80,-81,-82,-85,-79,-72,-85,-84,-77,-83,129,-78,-74,-75,-76,-73,-30,]),'EQUALS':([43,77,78,86,89,],[74,-85,104,-84,-83,]),'GREATERTHANEQ':([62,64,66,68,70,71,77,86,87,89,95,96,98,100,105,106,107,108,109,110,127,128,130,133,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,158,159,],[-80,-81,-82,-85,-79,-72,-85,-84,-77,-83,116,124,-44,-60,124,-78,-74,-75,-76,-73,124,-60,-30,-57,-56,-59,-54,-58,-55,124,124,-46,124,-50,124,-47,-51,124,-60,-43,-45,-61,]),'FLOAT':([40,63,65,73,74,75,80,90,91,92,94,99,104,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,156,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'IF':([14,36,38,41,44,47,50,51,52,55,56,57,67,79,82,93,132,144,153,154,155,160,163,164,165,166,167,169,170,171,172,173,175,],[-62,48,48,-21,48,-24,-23,-20,-22,-33,-25,-26,-29,-27,-69,-28,48,48,-34,-20,48,48,-42,-35,-38,48,-37,48,-39,-36,-41,48,-40,]),'ELSE':([14,47,50,52,55,56,57,67,79,82,93,154,163,165,167,170,172,175,],[-62,-24,-23,-22,-33,-25,-26,-29,-27,-69,-28,160,-42,-38,169,-39,-41,-40,]),'NOT':([73,80,99,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,],[97,97,97,134,134,134,134,134,134,97,97,97,97,97,97,97,97,97,]),'RBRACE':([14,36,38,41,44,47,49,50,51,52,55,56,57,58,67,76,79,82,93,144,153,154,155,157,161,163,164,165,166,167,168,170,171,172,173,174,175,],[-62,-19,-19,-21,-19,-24,81,-23,-20,-22,-33,-25,-26,83,-29,-18,-27,-69,-28,-19,-34,-20,-19,163,167,-42,-35,-38,-19,-37,170,-39,-36,-41,-19,175,-40,]),'WHILE':([14,36,38,41,44,47,50,51,52,55,56,57,67,79,82,93,132,144,153,154,155,160,163,164,165,166,167,169,170,171,172,173,175,],[-62,42,42,-21,42,-24,-23,-20,-22,-33,-25,-26,-29,-27,-69,-28,42,42,-34,-20,42,42,-42,-35,-38,42,-37,42,-39,-36,-41,42,-40,]),'LPAREN':([11,13,17,18,40,42,43,48,63,65,68,73,74,75,80,90,91,92,94,97,99,104,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,134,156,],[16,20,-68,-67,65,73,75,80,65,65,75,99,65,65,99,65,65,65,65,126,99,65,65,65,65,65,65,65,99,99,99,99,99,99,99,99,99,65,156,65,]),'$end':([2,4,5,7,8,9,81,83,],[0,-2,-1,-4,-5,-3,-10,-11,]),'GREATERTHAN':([62,64,66,68,70,71,77,86,87,89,95,96,98,100,105,106,107,108,109,110,127,128,130,133,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,158,159,],[-80,-81,-82,-85,-79,-72,-85,-84,-77,-83,113,125,-44,-60,125,-78,-74,-75,-76,-73,125,-60,-30,-57,-56,-59,-54,-58,-55,125,125,-46,125,-50,125,-47,-51,125,-60,-43,-45,-61,]),'UNEQUAL':([62,64,66,68,70,71,77,86,87,89,95,96,98,100,105,106,107,108,109,110,127,128,130,133,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,158,159,],[-80,-81,-82,-85,-79,-72,-85,-84,-77,-83,112,120,-44,-60,120,-78,-74,-75,-76,-73,120,-60,-30,-57,-56,-59,-54,-58,-55,-49,120,-46,-48,-50,120,-47,-51,120,-60,-43,-45,-61,]),'RPAREN':([16,17,18,20,25,27,28,29,33,34,59,60,62,64,66,68,70,71,77,84,85,86,87,88,89,96,98,100,102,103,105,106,107,108,109,110,127,128,130,133,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,158,159,162,],[-12,-68,-67,-12,30,31,-15,-15,-13,-14,-15,-15,-80,-81,-82,-85,-79,-72,-85,-16,-17,-84,-77,106,-83,121,-44,-60,-31,130,132,-78,-74,-75,-76,-73,151,106,-30,-57,-56,-59,-54,-58,-55,-49,-53,-46,-48,-50,-52,-47,-51,158,159,-43,-32,-45,-61,159,]),'TYPE':([0,1,3,4,14,16,20,32,35,36,37,38,41,44,47,50,51,52,55,56,57,67,79,81,82,83,93,132,144,153,154,155,160,163,164,165,166,167,169,170,171,172,173,175,],[6,6,6,6,-62,24,24,39,-6,54,-7,54,-21,54,-24,-23,-20,-22,-33,-25,-26,-29,-27,-10,-69,-11,-28,54,54,-34,-20,54,54,-42,-35,-38,54,-37,54,-39,-36,-41,54,-40,]),'SEMICOLON':([10,11,13,14,17,18,21,22,23,26,30,31,36,38,40,41,44,46,47,50,51,52,53,55,56,57,62,64,66,67,68,70,71,72,77,79,82,86,87,89,93,101,106,107,108,109,110,130,131,132,144,153,154,155,160,163,164,165,166,167,169,170,171,172,173,175,],[14,-63,-65,-62,-68,-67,-63,-65,-64,-66,35,37,55,55,67,-21,55,79,-24,-23,-20,-22,82,-33,-25,-26,-80,-81,-82,-29,-85,-79,-72,93,-85,-27,-69,-84,-77,-83,-28,-71,-78,-74,-75,-76,-73,-30,-70,55,55,-34,-20,55,55,-42,-35,-38,55,-37,55,-39,-36,-41,55,-40,]),'ANDOPERATOR':([62,64,66,68,70,71,77,86,87,89,96,98,100,105,106,107,108,109,110,127,130,133,135,136,137,138,139,140,141,142,143,145,146,147,148,149,151,158,159,],[-80,-81,-82,-85,-79,-72,-85,-84,-77,-83,123,-44,-60,123,-78,-74,-75,-76,-73,123,-30,-57,-56,-59,-54,-58,-55,-49,123,-46,-48,-50,-52,-47,-51,123,-43,-45,-61,]),'RETURN':([14,36,38,41,44,47,50,51,52,55,56,57,67,79,82,93,132,144,153,154,155,160,163,164,165,166,167,169,170,171,172,173,175,],[-62,40,40,-21,40,-24,-23,-20,-22,-33,-25,-26,-29,-27,-69,-28,40,40,-34,-20,40,40,-42,-35,-38,40,-37,40,-39,-36,-41,40,-40,]),'DIVIDE':([62,64,66,68,70,71,72,77,86,87,88,89,100,101,102,106,107,108,109,110,128,130,131,150,162,],[-80,-81,-82,-85,-79,-72,91,-85,-84,-77,91,-83,91,91,91,-78,91,-75,-76,91,91,-30,91,91,91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CS':([73,80,99,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,],[95,95,95,133,135,136,137,138,139,95,95,95,95,95,95,95,95,95,]),'assignment':([36,38,44,132,144,155,160,166,169,173,],[52,52,52,52,52,52,52,52,52,52,]),'master':([0,],[2,]),'program':([0,1,3,4,],[5,7,8,9,]),'dlist1':([6,15,19,54,],[10,23,26,10,]),'pointervar':([40,45,61,63,65,69,73,74,75,80,90,91,92,94,99,104,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,156,],[66,78,86,66,66,89,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'function':([0,1,3,4,],[4,4,4,4,]),'assignment_base':([36,38,44,132,144,155,160,166,169,173,],[53,53,53,53,53,53,53,53,53,53,]),'conditionbase':([73,80,99,117,118,119,120,122,123,124,125,126,],[98,98,98,98,98,98,98,98,98,98,98,98,]),'allnumbers':([40,63,65,73,74,75,80,90,91,92,94,99,104,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,156,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'functioncall':([36,38,40,44,63,65,73,74,75,80,90,91,92,94,99,104,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,132,144,155,156,160,166,169,173,],[46,46,71,46,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,46,46,46,71,46,46,46,46,]),'arguments':([75,129,],[103,152,]),'returnstatement':([36,38,44,132,144,155,160,166,169,173,],[57,57,57,57,57,57,57,57,57,57,]),'whileblock':([36,38,44,132,144,155,160,166,169,173,],[47,47,47,47,47,47,47,47,47,47,]),'fbody':([36,38,44,144,155,166,173,],[49,58,76,157,161,168,174,]),'allstatement':([36,38,44,132,144,155,166,173,],[44,44,44,153,44,44,44,44,]),'declaration':([0,1,3,4,36,38,44,132,144,155,160,166,169,173,],[1,1,1,1,50,50,50,50,50,50,50,50,50,50,]),'statement':([36,38,44,132,144,155,160,166,169,173,],[51,51,51,154,51,51,165,51,172,51,]),'prototype':([0,1,3,4,],[3,3,3,3,]),'unmatchedstatement':([36,38,44,132,144,155,160,166,169,173,],[41,41,41,41,41,41,164,41,171,41,]),'specialvar':([6,12,15,19,24,39,54,],[13,18,22,22,29,60,22,]),'conditional':([73,80,99,117,118,119,120,122,123,124,125,126,],[96,105,127,140,141,142,143,145,146,147,148,149,]),'paramlist':([16,20,],[25,27,]),'ifblock':([36,38,44,132,144,155,160,166,169,173,],[56,56,56,56,56,56,56,56,56,56,]),'expression':([40,63,65,73,74,75,80,90,91,92,94,99,104,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,156,],[72,87,88,100,101,102,100,107,108,109,110,128,131,100,100,100,100,100,100,100,100,100,100,100,100,100,100,150,102,162,]),'paramlist2':([28,29,59,60,],[33,34,84,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> master","S'",1,None,None,None),
  ('master -> program','master',1,'p_masterprogram','Parser.py',1193),
  ('program -> function','program',1,'p_program','Parser.py',1240),
  ('program -> function program','program',2,'p_program','Parser.py',1241),
  ('program -> declaration program','program',2,'p_program','Parser.py',1242),
  ('program -> prototype program','program',2,'p_program1','Parser.py',1272),
  ('prototype -> TYPE NAME LPAREN paramlist RPAREN SEMICOLON','prototype',6,'p_prototype','Parser.py',1293),
  ('prototype -> TYPE specialvar LPAREN paramlist RPAREN SEMICOLON','prototype',6,'p_prototype_2','Parser.py',1302),
  ('allthestars -> TIMES','allthestars',1,'p_function_stars','Parser.py',1324),
  ('allthestars -> TIMES allthestars','allthestars',2,'p_function_stars','Parser.py',1325),
  ('function -> TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function','Parser.py',1346),
  ('function -> TYPE specialvar LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function_2','Parser.py',1352),
  ('paramlist -> <empty>','paramlist',0,'p_paramlist','Parser.py',1359),
  ('paramlist -> TYPE NAME paramlist2','paramlist',3,'p_paramlist','Parser.py',1360),
  ('paramlist -> TYPE specialvar paramlist2','paramlist',3,'p_paramlist','Parser.py',1361),
  ('paramlist2 -> <empty>','paramlist2',0,'p_paramlist2','Parser.py',1374),
  ('paramlist2 -> COMMA TYPE NAME paramlist2','paramlist2',4,'p_paramlist2','Parser.py',1375),
  ('paramlist2 -> COMMA TYPE specialvar paramlist2','paramlist2',4,'p_paramlist2','Parser.py',1376),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','Parser.py',1388),
  ('fbody -> <empty>','fbody',0,'p_fbody','Parser.py',1389),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','Parser.py',1412),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','Parser.py',1413),
  ('statement -> assignment','statement',1,'p_statement_expr','Parser.py',1419),
  ('statement -> declaration','statement',1,'p_statement_expr','Parser.py',1420),
  ('statement -> whileblock','statement',1,'p_statement_expr','Parser.py',1421),
  ('statement -> ifblock','statement',1,'p_statement_expr','Parser.py',1422),
  ('statement -> returnstatement','statement',1,'p_statement_expr','Parser.py',1423),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement_expr','Parser.py',1424),
  ('returnstatement -> RETURN expression SEMICOLON','returnstatement',3,'p_return_statement','Parser.py',1430),
  ('returnstatement -> RETURN SEMICOLON','returnstatement',2,'p_return_statement_2','Parser.py',1436),
  ('functioncall -> NAME LPAREN arguments RPAREN','functioncall',4,'p_function_call','Parser.py',1442),
  ('arguments -> expression','arguments',1,'p_function_arguments','Parser.py',1451),
  ('arguments -> expression COMMA arguments','arguments',3,'p_function_arguments','Parser.py',1452),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','Parser.py',1462),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','Parser.py',1468),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','Parser.py',1469),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','Parser.py',1470),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','Parser.py',1481),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','Parser.py',1487),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','Parser.py',1488),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','Parser.py',1489),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','Parser.py',1500),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','Parser.py',1505),
  ('conditional -> LPAREN conditional RPAREN','conditional',3,'p_conditional1','Parser.py',1511),
  ('conditional -> conditionbase','conditional',1,'p_conditional','Parser.py',1517),
  ('conditional -> NOT LPAREN conditional RPAREN','conditional',4,'p_conditional','Parser.py',1518),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','Parser.py',1519),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','Parser.py',1520),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','Parser.py',1521),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','Parser.py',1522),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','Parser.py',1523),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','Parser.py',1524),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','Parser.py',1525),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','Parser.py',1526),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',1552),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',1553),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','Parser.py',1554),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','Parser.py',1555),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',1556),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',1557),
  ('CS -> expression','CS',1,'p_cs','Parser.py',1577),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','Parser.py',1578),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','Parser.py',1586),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','Parser.py',1593),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','Parser.py',1594),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','Parser.py',1610),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','Parser.py',1611),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar1','Parser.py',1625),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar2','Parser.py',1630),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','Parser.py',1635),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','Parser.py',1644),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','Parser.py',1645),
  ('expression -> functioncall','expression',1,'p_expression_fcall','Parser.py',1670),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','Parser.py',1676),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','Parser.py',1677),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','Parser.py',1678),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','Parser.py',1695),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Parser.py',1703),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','Parser.py',1710),
  ('expression -> allnumbers','expression',1,'p_expression_base_number','Parser.py',1718),
  ('allnumbers -> FLOAT','allnumbers',1,'p_allnumbers_float','Parser.py',1726),
  ('allnumbers -> NUMBER','allnumbers',1,'p_allnumbers_int','Parser.py',1733),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','Parser.py',1740),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','Parser.py',1747),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','Parser.py',1752),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','Parser.py',1758),
]
