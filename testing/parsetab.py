
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSNUMBER TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT \n\tprogram : function \n\t\t\t\t| function program\n\t\n\tfunction : TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE\n\t\n\tfbody : allstatement\n\t\t\t| allstatement fbody\n\t\t\t|\n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\n\tstatement : SEMICOLON\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : conditionbase\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\t\t\t| TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'LPAREN':([5,16,22,33,34,37,38,46,47,50,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[6,33,37,46,46,46,46,46,61,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'TIMES':([8,9,10,11,12,14,15,17,19,21,23,25,26,27,28,29,33,34,37,38,39,40,43,44,45,46,48,49,50,52,55,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,106,108,111,112,113,114,115,117,118,119,120,121,123,],[10,-9,25,-7,-13,29,-10,-12,10,-8,-11,25,25,-60,-47,29,25,25,25,25,-58,-59,29,29,-40,25,-57,63,25,-56,63,63,63,25,25,25,25,25,-54,10,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-55,63,63,-53,63,-52,-7,-14,10,10,10,-18,10,-15,-17,-22,10,-19,-21,10,-16,-20,]),'SEMICOLON':([8,9,11,12,13,15,17,19,21,23,27,28,30,31,32,39,40,41,42,45,48,52,55,57,58,59,66,67,83,85,86,87,88,89,90,91,106,108,111,112,113,114,115,117,118,119,120,121,123,],[12,-9,-7,-13,28,-10,-12,12,-8,-11,-60,-47,-43,-41,45,-58,-59,-45,-46,-40,-57,-56,-49,-48,-44,-42,-54,12,-55,-51,-53,-50,-52,-7,-14,12,12,12,-18,12,-15,-17,-22,12,-19,-21,12,-16,-20,]),'NOT':([33,37,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'PLUS':([27,39,40,48,49,52,55,57,60,66,83,84,85,86,87,88,],[-60,-58,-59,-57,64,-56,64,64,64,-54,-55,64,-51,-53,-50,-52,]),'LESSTHANEQ':([27,39,40,48,49,51,52,53,54,56,66,83,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[-60,-58,-59,-57,-38,69,-56,-23,80,69,-54,-55,-51,-53,-50,-52,-29,-24,69,-25,69,69,69,-28,-35,-33,-34,-37,-32,-36,-39,]),'TYPE':([0,2,8,9,11,12,15,17,19,21,23,28,36,45,67,89,90,91,106,108,111,112,113,114,115,117,118,119,120,121,123,],[3,3,14,-9,-7,-13,-10,-12,14,-8,-11,-47,-3,-40,14,-7,-14,14,14,14,-18,14,-15,-17,-22,14,-19,-21,14,-16,-20,]),'COMMA':([30,31,41,42,],[43,44,-45,-46,]),'GREATERTHANEQ':([27,39,40,48,49,51,52,53,54,56,66,83,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[-60,-58,-59,-57,-38,71,-56,-23,77,71,-54,-55,-51,-53,-50,-52,-29,-24,71,-25,71,71,71,-28,-35,-33,-34,-37,-32,-36,-39,]),'UNEQUAL':([27,39,40,48,49,51,52,53,54,56,66,83,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[-60,-58,-59,-57,-38,72,-56,-23,78,72,-54,-55,-51,-53,-50,-52,-29,-24,-27,-25,-26,72,72,-28,-35,-33,-34,-37,-32,-36,-39,]),'IF':([8,9,11,12,15,17,19,21,23,28,45,67,89,90,91,106,108,111,112,113,114,115,117,118,119,120,121,123,],[16,-9,-7,-13,-10,-12,16,-8,-11,-47,-40,16,-7,-14,16,16,16,-18,16,-15,-17,-22,16,-19,-21,16,-16,-20,]),'DIVIDE':([27,39,40,48,49,52,55,57,60,66,83,84,85,86,87,88,],[-60,-58,-59,-57,65,-56,65,65,65,-54,-55,65,65,-53,65,-52,]),'NAME':([3,8,9,10,11,12,14,15,17,19,21,23,25,26,28,29,33,34,37,38,43,44,45,46,50,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,106,108,111,112,113,114,115,117,118,119,120,121,123,],[5,18,-9,27,-7,-13,31,-10,-12,18,-8,-11,27,27,-47,42,27,27,27,27,31,31,-40,27,27,27,27,27,27,27,18,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-7,-14,18,18,18,-18,18,-15,-17,-22,18,-19,-21,18,-16,-20,]),'OROPERATOR':([27,39,40,48,49,51,52,53,56,66,83,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[-60,-58,-59,-57,-38,74,-56,-23,74,-54,-55,-51,-53,-50,-52,-29,-24,-27,-25,-26,-30,-31,-28,-35,-33,-34,-37,-32,-36,-39,]),'EQUALS':([18,24,27,39,40,],[34,38,-60,-58,-59,]),'ANDOPERATOR':([27,39,40,48,49,51,52,53,56,66,83,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[-60,-58,-59,-57,-38,73,-56,-23,73,-54,-55,-51,-53,-50,-52,-29,-24,-27,-25,-26,-30,73,-28,-35,-33,-34,-37,-32,-36,-39,]),'RPAREN':([6,27,39,40,48,49,51,52,53,56,60,66,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[7,-60,-58,-59,-57,-38,67,-56,-23,82,83,-54,-55,107,-51,-53,-50,-52,-29,-24,-27,-25,-26,-30,-31,-28,-35,-33,-34,-37,-32,-36,-39,]),'RBRACE':([8,9,11,12,15,17,19,20,21,23,28,35,45,89,90,91,106,109,110,111,112,113,114,115,116,118,119,120,121,122,123,],[-6,-9,-7,-13,-10,-12,-4,36,-8,-11,-47,-5,-40,-7,-14,-6,-6,114,115,-18,-6,-15,-17,-22,118,-19,-21,-6,-16,123,-20,]),'LBRACE':([7,67,82,108,117,],[8,91,106,112,120,]),'ADDROF':([10,25,26,33,34,37,38,46,50,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'$end':([1,2,4,36,],[0,-1,-2,-3,]),'WHILE':([8,9,11,12,15,17,19,21,23,28,45,67,89,90,91,106,108,111,112,113,114,115,117,118,119,120,121,123,],[22,-9,-7,-13,-10,-12,22,-8,-11,-47,-40,22,-7,-14,22,22,22,-18,22,-15,-17,-22,22,-19,-21,22,-16,-20,]),'EQUALCHECK':([27,39,40,48,49,51,52,53,54,56,66,83,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[-60,-58,-59,-57,-38,70,-56,-23,76,70,-54,-55,-51,-53,-50,-52,-29,-24,-27,-25,-26,70,70,-28,-35,-33,-34,-37,-32,-36,-39,]),'MINUS':([27,33,34,37,38,39,40,46,48,49,50,52,55,57,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,],[-60,50,50,50,50,-58,-59,50,-57,62,50,-56,62,62,62,50,50,50,50,50,-54,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-55,62,-51,-53,-50,-52,]),'GREATERTHAN':([27,39,40,48,49,51,52,53,54,56,66,83,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[-60,-58,-59,-57,-38,68,-56,-23,79,68,-54,-55,-51,-53,-50,-52,-29,-24,68,-25,68,68,68,-28,-35,-33,-34,-37,-32,-36,-39,]),'ELSE':([9,12,15,17,23,28,45,89,111,114,115,118,119,123,],[-9,-13,-10,-12,-11,-47,-40,108,-18,117,-22,-19,-21,-20,]),'NUMBER':([33,34,37,38,46,50,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'LESSTHAN':([27,39,40,48,49,51,52,53,54,56,66,83,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[-60,-58,-59,-57,-38,75,-56,-23,81,75,-54,-55,-51,-53,-50,-52,-29,-24,75,-25,75,75,75,-28,-35,-33,-34,-37,-32,-36,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignment':([8,19,67,91,106,108,112,117,120,],[9,9,9,9,9,9,9,9,9,]),'allstatement':([8,19,67,91,106,112,120,],[19,19,90,19,19,19,19,]),'statement':([8,19,67,91,106,108,112,117,120,],[11,11,89,11,11,111,11,119,11,]),'assignment_base':([8,19,67,91,106,108,112,117,120,],[13,13,13,13,13,13,13,13,13,]),'program':([0,2,],[1,4,]),'fbody':([8,19,91,106,112,120,],[20,35,109,110,116,122,]),'unmatchedstatement':([8,19,67,91,106,108,112,117,120,],[21,21,21,21,21,113,21,121,21,]),'ifblock':([8,19,67,91,106,108,112,117,120,],[17,17,17,17,17,17,17,17,17,]),'expression':([33,34,37,38,46,50,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[49,55,49,57,60,66,84,85,86,87,88,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'declaration':([8,19,67,91,106,108,112,117,120,],[15,15,15,15,15,15,15,15,15,]),'conditional':([33,37,68,69,70,71,72,73,74,75,],[51,56,92,93,94,95,96,97,98,99,]),'specialvar':([14,29,43,44,],[30,41,30,30,]),'conditionbase':([33,37,68,69,70,71,72,73,74,75,],[53,53,53,53,53,53,53,53,53,53,]),'pointervar':([10,25,26,33,34,37,38,46,50,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[24,39,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'function':([0,2,],[2,2,]),'CS':([33,37,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[54,54,54,54,54,54,54,54,54,54,100,101,102,103,104,105,]),'whileblock':([8,19,67,91,106,108,112,117,120,],[23,23,23,23,23,23,23,23,23,]),'dlist1':([14,43,44,],[32,58,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','better.py',634),
  ('program -> function program','program',2,'p_program','better.py',635),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','better.py',659),
  ('fbody -> allstatement','fbody',1,'p_fbody','better.py',696),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','better.py',697),
  ('fbody -> <empty>','fbody',0,'p_fbody','better.py',698),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','better.py',717),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','better.py',718),
  ('statement -> assignment','statement',1,'p_statement_expr','better.py',724),
  ('statement -> declaration','statement',1,'p_statement_expr','better.py',725),
  ('statement -> whileblock','statement',1,'p_statement_expr','better.py',726),
  ('statement -> ifblock','statement',1,'p_statement_expr','better.py',727),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','better.py',733),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','better.py',739),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','better.py',740),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','better.py',741),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','better.py',752),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','better.py',758),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','better.py',759),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','better.py',760),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','better.py',771),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','better.py',776),
  ('conditional -> conditionbase','conditional',1,'p_conditional','better.py',782),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','better.py',783),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','better.py',784),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','better.py',785),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','better.py',786),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','better.py',787),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','better.py',788),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','better.py',789),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','better.py',790),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','better.py',814),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','better.py',815),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','better.py',816),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','better.py',817),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','better.py',818),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','better.py',819),
  ('CS -> expression','CS',1,'p_cs','better.py',839),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','better.py',840),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','better.py',848),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','better.py',854),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','better.py',855),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','better.py',862),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','better.py',863),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar','better.py',870),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar','better.py',871),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','better.py',876),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','better.py',885),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','better.py',886),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','better.py',906),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','better.py',907),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','better.py',908),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','better.py',925),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','better.py',933),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','better.py',940),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','better.py',946),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','better.py',952),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','better.py',959),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','better.py',965),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','better.py',972),
]
