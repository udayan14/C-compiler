
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSNUMBER TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT\n\tmaster : program\n\t \n\tprogram : function \n\t\t\t\t| function program\n\t\t\t\t| declaration program\n\t\n\tfunction : TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE\n\t\n\tparamlist : \n\t\t\t| TYPE NAME paramlist2\n\t\t\t| TYPE specialvar paramlist2\n\t\n\tparamlist2 : \n\t\t\t|  COMMA TYPE NAME paramlist2\n\t\t\t|  COMMA TYPE specialvar paramlist2\n\t\n\tfbody : allstatement fbody\n\t\t\t| \n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\n\tstatement : SEMICOLON\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : LPAREN conditional RPAREN\n\t\n\tconditional : conditionbase\n\t\t\t\t| NOT LPAREN conditional RPAREN\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\n\tspecialvar : TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'TYPE':([0,3,4,12,14,27,29,34,35,36,37,38,39,40,41,49,52,83,107,108,109,127,128,134,135,136,137,139,141,142,143,144,145,147,],[5,5,5,18,-49,30,31,31,-14,-15,-16,-17,-18,-19,-20,-5,-56,31,-21,-14,31,31,31,-25,-22,31,-24,-29,31,-26,31,-23,-28,-27,]),'$end':([1,2,3,6,7,49,],[0,-1,-2,-3,-4,-5,]),'NAME':([5,11,13,14,15,18,29,30,31,34,35,36,37,38,39,40,41,45,48,51,52,53,54,56,61,62,65,73,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,107,108,109,127,128,132,134,135,136,137,139,141,142,143,144,145,147,],[8,17,20,-49,20,23,32,46,20,32,-14,-15,-16,-17,-18,-19,-20,57,57,57,-56,57,57,57,57,57,57,57,57,57,57,57,32,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-21,-14,32,32,32,57,-25,-22,32,-24,-29,32,-26,32,-23,-28,-27,]),'TIMES':([5,11,13,14,15,18,29,30,31,34,35,36,37,38,39,40,41,45,48,51,52,53,54,56,57,60,61,62,63,64,65,70,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,107,108,109,119,127,128,132,134,135,136,137,138,139,141,142,143,144,145,147,],[11,11,11,-49,11,11,45,11,11,45,-14,-15,-16,-17,-18,-19,-20,54,54,54,-56,54,54,54,-69,78,54,54,-65,-66,54,78,-67,54,-68,54,54,54,54,-63,78,78,45,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,78,78,78,-61,-62,-64,-21,-14,45,78,45,45,54,-25,-22,45,-24,78,-29,45,-26,45,-23,-28,-27,]),'LPAREN':([8,42,44,48,51,53,61,62,65,68,73,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,121,132,],[12,51,53,62,65,65,62,62,65,92,62,62,62,62,62,65,65,65,65,65,65,65,65,65,62,62,62,62,62,62,132,62,]),'SEMICOLON':([8,9,10,14,16,17,20,21,22,29,34,35,36,37,38,39,40,41,43,52,57,60,63,64,72,74,79,83,100,101,102,103,104,105,107,108,109,127,128,134,135,136,137,139,141,142,143,144,145,147,],[-50,14,-52,-49,-54,-55,-50,-51,-53,41,41,-14,-15,-16,-17,-18,-19,-20,52,-56,-69,-58,-65,-66,-67,-68,-63,41,-57,-59,-60,-61,-62,-64,-21,-14,41,41,41,-25,-22,41,-24,-29,41,-26,41,-23,-28,-27,]),'COMMA':([8,10,16,17,20,23,24,46,47,],[13,15,-54,-55,13,27,27,27,27,]),'RPAREN':([12,16,17,19,23,24,26,28,46,47,57,58,59,63,64,66,67,70,71,72,74,79,80,81,82,101,102,103,104,105,106,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,130,131,138,],[-6,-54,-55,25,-9,-9,-7,-8,-9,-9,-69,-10,-11,-65,-66,83,-31,-47,99,-67,-68,-63,105,106,105,-59,-60,-61,-62,-64,-30,-33,-34,-35,-36,-37,-38,-39,-40,130,131,-41,-42,-43,-44,-45,-46,-32,-48,131,]),'IF':([14,29,34,35,36,37,38,39,40,41,52,83,107,108,109,127,128,134,135,136,137,139,141,142,143,144,145,147,],[-49,42,42,-14,-15,-16,-17,-18,-19,-20,-56,42,-21,-14,42,42,42,-25,-22,42,-24,-29,42,-26,42,-23,-28,-27,]),'WHILE':([14,29,34,35,36,37,38,39,40,41,52,83,107,108,109,127,128,134,135,136,137,139,141,142,143,144,145,147,],[-49,44,44,-14,-15,-16,-17,-18,-19,-20,-56,44,-21,-14,44,44,44,-25,-22,44,-24,-29,44,-26,44,-23,-28,-27,]),'RBRACE':([14,29,33,34,35,36,37,38,39,40,41,50,52,107,108,109,127,129,133,134,135,136,137,139,140,142,143,144,145,146,147,],[-49,-13,49,-13,-14,-15,-16,-17,-18,-19,-20,-12,-56,-21,-14,-13,-13,137,139,-25,-22,-13,-24,-29,142,-26,-13,-23,-28,147,-27,]),'ELSE':([14,37,38,39,40,41,52,108,134,137,139,142,145,147,],[-49,-16,-17,-18,-19,-20,-56,128,-25,141,-29,-26,-28,-27,]),'LBRACE':([25,83,99,128,141,],[29,109,127,136,143,]),'EQUALS':([32,55,57,72,74,],[48,73,-69,-67,-68,]),'ADDROF':([45,48,51,53,54,56,61,62,65,73,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,132,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'MINUS':([48,51,53,57,60,61,62,63,64,65,70,72,73,74,75,76,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,119,132,138,],[61,61,61,-69,76,61,61,-65,-66,61,76,-67,61,-68,61,61,61,61,-63,76,76,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,76,-59,-60,-61,-62,-64,76,61,76,]),'NUMBER':([48,51,53,61,62,65,73,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,132,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'NOT':([51,53,65,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,],[68,68,68,68,68,68,68,68,68,68,68,68,121,121,121,121,121,121,]),'PLUS':([57,60,63,64,70,72,74,79,80,82,100,101,102,103,104,105,119,138,],[-69,75,-65,-66,75,-67,-68,-63,75,75,75,-59,-60,-61,-62,-64,75,75,]),'DIVIDE':([57,60,63,64,70,72,74,79,80,82,100,101,102,103,104,105,119,138,],[-69,77,-65,-66,77,-67,-68,-63,77,77,77,77,77,-61,-62,-64,77,77,]),'LESSTHANEQ':([57,63,64,66,67,69,70,71,72,74,79,81,82,101,102,103,104,105,106,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,130,131,],[-69,-65,-66,84,-31,93,-47,84,-67,-68,-63,84,-47,-59,-60,-61,-62,-64,-30,-33,-34,84,84,-37,-38,84,84,84,-47,-41,-42,-43,-44,-45,-46,-32,-48,]),'GREATERTHANEQ':([57,63,64,66,67,69,70,71,72,74,79,81,82,101,102,103,104,105,106,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,130,131,],[-69,-65,-66,85,-31,94,-47,85,-67,-68,-63,85,-47,-59,-60,-61,-62,-64,-30,-33,-34,85,85,-37,-38,85,85,85,-47,-41,-42,-43,-44,-45,-46,-32,-48,]),'UNEQUAL':([57,63,64,66,67,69,70,71,72,74,79,81,82,101,102,103,104,105,106,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,130,131,],[-69,-65,-66,86,-31,95,-47,86,-67,-68,-63,86,-47,-59,-60,-61,-62,-64,-30,-33,-34,-35,-36,-37,-38,86,86,86,-47,-41,-42,-43,-44,-45,-46,-32,-48,]),'EQUALCHECK':([57,63,64,66,67,69,70,71,72,74,79,81,82,101,102,103,104,105,106,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,130,131,],[-69,-65,-66,87,-31,96,-47,87,-67,-68,-63,87,-47,-59,-60,-61,-62,-64,-30,-33,-34,-35,-36,-37,-38,87,87,87,-47,-41,-42,-43,-44,-45,-46,-32,-48,]),'LESSTHAN':([57,63,64,66,67,69,70,71,72,74,79,81,82,101,102,103,104,105,106,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,130,131,],[-69,-65,-66,88,-31,97,-47,88,-67,-68,-63,88,-47,-59,-60,-61,-62,-64,-30,-33,-34,88,88,-37,-38,88,88,88,-47,-41,-42,-43,-44,-45,-46,-32,-48,]),'GREATERTHAN':([57,63,64,66,67,69,70,71,72,74,79,81,82,101,102,103,104,105,106,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,130,131,],[-69,-65,-66,89,-31,98,-47,89,-67,-68,-63,89,-47,-59,-60,-61,-62,-64,-30,-33,-34,89,89,-37,-38,89,89,89,-47,-41,-42,-43,-44,-45,-46,-32,-48,]),'ANDOPERATOR':([57,63,64,66,67,70,71,72,74,79,81,101,102,103,104,105,106,110,111,112,113,114,115,116,117,118,120,122,123,124,125,126,130,131,],[-69,-65,-66,90,-31,-47,90,-67,-68,-63,90,-59,-60,-61,-62,-64,-30,-33,-34,-35,-36,-37,-38,-39,90,90,-41,-42,-43,-44,-45,-46,-32,-48,]),'OROPERATOR':([57,63,64,66,67,70,71,72,74,79,81,101,102,103,104,105,106,110,111,112,113,114,115,116,117,118,120,122,123,124,125,126,130,131,],[-69,-65,-66,91,-31,-47,91,-67,-68,-63,91,-59,-60,-61,-62,-64,-30,-33,-34,-35,-36,-37,-38,-39,-40,91,-41,-42,-43,-44,-45,-46,-32,-48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'master':([0,],[1,]),'program':([0,3,4,],[2,6,7,]),'function':([0,3,4,],[3,3,3,]),'declaration':([0,3,4,29,34,83,109,127,128,136,141,143,],[4,4,4,38,38,38,38,38,38,38,38,38,]),'dlist1':([5,13,15,31,],[9,21,22,9,]),'specialvar':([5,11,13,15,18,30,31,],[10,16,10,10,24,47,10,]),'paramlist':([12,],[19,]),'paramlist2':([23,24,46,47,],[26,28,58,59,]),'fbody':([29,34,109,127,136,143,],[33,50,129,133,140,146,]),'allstatement':([29,34,83,109,127,136,143,],[34,34,107,34,34,34,34,]),'statement':([29,34,83,109,127,128,136,141,143,],[35,35,108,35,35,134,35,145,35,]),'unmatchedstatement':([29,34,83,109,127,128,136,141,143,],[36,36,36,36,36,135,36,144,36,]),'assignment':([29,34,83,109,127,128,136,141,143,],[37,37,37,37,37,37,37,37,37,]),'whileblock':([29,34,83,109,127,128,136,141,143,],[39,39,39,39,39,39,39,39,39,]),'ifblock':([29,34,83,109,127,128,136,141,143,],[40,40,40,40,40,40,40,40,40,]),'assignment_base':([29,34,83,109,127,128,136,141,143,],[43,43,43,43,43,43,43,43,43,]),'pointervar':([45,48,51,53,54,56,61,62,65,73,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,132,],[55,64,64,64,72,74,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'expression':([48,51,53,61,62,65,73,75,76,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,132,],[60,70,70,79,80,82,100,101,102,103,104,70,70,70,70,70,70,70,70,119,70,70,70,70,70,70,138,]),'conditional':([51,53,65,84,85,86,87,88,89,90,91,92,],[66,71,81,110,111,112,113,114,115,116,117,118,]),'conditionbase':([51,53,65,84,85,86,87,88,89,90,91,92,],[67,67,67,67,67,67,67,67,67,67,67,67,]),'CS':([51,53,65,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,],[69,69,69,69,69,69,69,69,69,69,69,69,120,122,123,124,125,126,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> master","S'",1,None,None,None),
  ('master -> program','master',1,'p_masterprogram','Parser.py',651),
  ('program -> function','program',1,'p_program','Parser.py',658),
  ('program -> function program','program',2,'p_program','Parser.py',659),
  ('program -> declaration program','program',2,'p_program','Parser.py',660),
  ('function -> TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function','Parser.py',706),
  ('paramlist -> <empty>','paramlist',0,'p_paramlist','Parser.py',743),
  ('paramlist -> TYPE NAME paramlist2','paramlist',3,'p_paramlist','Parser.py',744),
  ('paramlist -> TYPE specialvar paramlist2','paramlist',3,'p_paramlist','Parser.py',745),
  ('paramlist2 -> <empty>','paramlist2',0,'p_paramlist2','Parser.py',755),
  ('paramlist2 -> COMMA TYPE NAME paramlist2','paramlist2',4,'p_paramlist2','Parser.py',756),
  ('paramlist2 -> COMMA TYPE specialvar paramlist2','paramlist2',4,'p_paramlist2','Parser.py',757),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','Parser.py',768),
  ('fbody -> <empty>','fbody',0,'p_fbody','Parser.py',769),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','Parser.py',792),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','Parser.py',793),
  ('statement -> assignment','statement',1,'p_statement_expr','Parser.py',799),
  ('statement -> declaration','statement',1,'p_statement_expr','Parser.py',800),
  ('statement -> whileblock','statement',1,'p_statement_expr','Parser.py',801),
  ('statement -> ifblock','statement',1,'p_statement_expr','Parser.py',802),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','Parser.py',808),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','Parser.py',814),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','Parser.py',815),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','Parser.py',816),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','Parser.py',827),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','Parser.py',833),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','Parser.py',834),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','Parser.py',835),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','Parser.py',846),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','Parser.py',851),
  ('conditional -> LPAREN conditional RPAREN','conditional',3,'p_conditional1','Parser.py',857),
  ('conditional -> conditionbase','conditional',1,'p_conditional','Parser.py',863),
  ('conditional -> NOT LPAREN conditional RPAREN','conditional',4,'p_conditional','Parser.py',864),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','Parser.py',865),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','Parser.py',866),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','Parser.py',867),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','Parser.py',868),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','Parser.py',869),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','Parser.py',870),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','Parser.py',871),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','Parser.py',872),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',898),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',899),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','Parser.py',900),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','Parser.py',901),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',902),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',903),
  ('CS -> expression','CS',1,'p_cs','Parser.py',923),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','Parser.py',924),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','Parser.py',932),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','Parser.py',938),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','Parser.py',939),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','Parser.py',946),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','Parser.py',947),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar1','Parser.py',954),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar2','Parser.py',959),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','Parser.py',964),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','Parser.py',973),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','Parser.py',974),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','Parser.py',995),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','Parser.py',996),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','Parser.py',997),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','Parser.py',1014),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Parser.py',1022),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','Parser.py',1029),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','Parser.py',1035),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','Parser.py',1041),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','Parser.py',1048),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','Parser.py',1053),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','Parser.py',1059),
]
