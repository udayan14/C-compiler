
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSNUMBER FLOAT TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE RETURN EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT\n\tmaster : program\n\t \n\tprogram : function \n\t\t\t\t| function program\n\t\t\t\t| declaration program\n\t\n\tprogram : prototype program\n\t\n\tprototype : TYPE NAME LPAREN paramlist RPAREN SEMICOLON\n\t\n\tfunction : TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE\n\t\n\tparamlist : \n\t\t\t| TYPE NAME paramlist2\n\t\t\t| TYPE specialvar paramlist2\n\t\n\tparamlist2 : \n\t\t\t|  COMMA TYPE NAME paramlist2\n\t\t\t|  COMMA TYPE specialvar paramlist2\n\t\n\tfbody : allstatement fbody\n\t\t\t| \n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\t\t| returnstatement\n\t\t\t| functioncall\n\t\n\treturnstatement : RETURN expression SEMICOLON\n\t\n\tfunctioncall : NAME LPAREN arguments RPAREN SEMICOLON\n\t\n\targuments : expression \n\t\t\t\t| expression COMMA arguments\n\t\n\tstatement : SEMICOLON\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : LPAREN conditional RPAREN\n\t\n\tconditional : conditionbase\n\t\t\t\t| NOT LPAREN conditional RPAREN\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\n\tspecialvar : TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : functioncall\n\t\n\texpression : allnumbers\n\t\n\tallnumbers : FLOAT\n\t\n\tallnumbers : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'UNEQUAL':([52,54,55,56,58,62,65,74,75,82,83,84,86,88,90,96,97,98,99,100,110,111,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,145,149,150,],[-75,-74,-77,-76,-73,-80,-80,-79,-78,-71,-39,107,112,-55,107,-72,-69,-70,-67,-68,107,-55,-46,-45,107,107,-42,-43,-41,-44,-38,-51,-53,-50,-54,-49,-52,107,-55,-25,-40,-56,]),'NUMBER':([33,59,61,63,68,69,70,77,79,80,81,85,89,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,122,148,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'OROPERATOR':([52,54,55,56,58,62,65,74,75,82,83,84,88,90,96,97,98,99,100,110,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,145,149,150,],[-75,-74,-77,-76,-73,-80,-80,-79,-78,-71,-39,104,-55,104,-72,-69,-70,-67,-68,104,-46,-45,-48,-47,-42,-43,-41,-44,-38,-51,-53,-50,-54,-49,-52,104,-25,-40,-56,]),'WHILE':([18,28,35,36,37,38,39,40,42,43,48,49,64,78,120,123,142,143,144,145,151,153,155,156,157,158,160,161,162,163,164,166,],[-57,34,-17,-28,-20,-21,-16,-23,-18,-19,34,-22,-64,-24,34,34,-16,34,-29,-25,34,-37,-30,-33,34,-32,34,-34,-31,-36,34,-35,]),'GREATERTHANEQ':([52,54,55,56,58,62,65,74,75,82,83,84,86,88,90,96,97,98,99,100,110,111,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,145,149,150,],[-75,-74,-77,-76,-73,-80,-80,-79,-78,-71,-39,106,114,-55,106,-72,-69,-70,-67,-68,106,-55,-46,-45,106,106,-42,106,-41,106,-38,-51,-53,-50,-54,-49,-52,106,-55,-25,-40,-56,]),'RETURN':([18,28,35,36,37,38,39,40,42,43,48,49,64,78,120,123,142,143,144,145,151,153,155,156,157,158,160,161,162,163,164,166,],[-57,33,-17,-28,-20,-21,-16,-23,-18,-19,33,-22,-64,-24,33,33,-16,33,-29,-25,33,-37,-30,-33,33,-32,33,-34,-31,-36,33,-35,]),'MINUS':([33,52,54,55,56,58,59,60,61,62,63,65,68,69,70,74,75,76,77,79,80,81,82,85,88,89,91,93,96,97,98,99,100,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,122,141,145,148,154,],[61,-75,-74,-77,-76,-73,61,81,61,-80,61,-80,61,61,61,-79,-78,81,61,61,61,61,-71,61,81,61,81,81,-72,-69,-70,-67,-68,61,61,61,61,61,61,61,61,81,61,61,61,61,61,61,61,81,61,81,-25,61,81,]),'RBRACE':([18,28,35,36,37,38,39,40,42,43,45,48,49,64,71,78,123,142,143,144,145,147,152,153,155,156,157,158,159,161,162,163,164,165,166,],[-57,-15,-17,-28,-20,-21,-16,-23,-18,-19,67,-15,-22,-64,-14,-24,-15,-16,-15,-29,-25,153,158,-37,-30,-33,-15,-32,161,-34,-31,-36,-15,166,-35,]),'RPAREN':([15,16,17,22,26,27,31,32,52,54,55,56,58,62,65,72,73,74,75,76,82,83,84,88,90,92,93,94,95,96,97,98,99,100,110,111,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,145,146,149,150,154,],[-8,-62,-63,25,-11,-11,-10,-9,-75,-74,-77,-76,-73,-80,-80,-11,-11,-79,-78,96,-71,-39,101,-55,120,121,-26,-12,-13,-72,-69,-70,-67,-68,132,96,-46,-45,-48,-47,-42,-43,-41,-44,-38,-51,-53,-50,-54,-49,-52,149,150,-25,-27,-40,-56,150,]),'SEMICOLON':([10,12,13,16,17,18,20,21,24,25,28,35,36,37,38,39,40,41,42,43,48,49,52,54,55,56,58,60,62,64,65,74,75,78,82,91,96,97,98,99,100,119,120,121,123,142,143,144,145,151,153,155,156,157,158,160,161,162,163,164,166,],[-58,18,-60,-62,-63,-57,-59,-58,-61,29,36,-17,-28,-20,-21,-16,-23,64,-18,-19,36,-22,-75,-74,-77,-76,-73,78,-80,-64,-80,-79,-78,-24,-71,-66,-72,-69,-70,-67,-68,-65,36,145,36,-16,36,-29,-25,36,-37,-30,-33,36,-32,36,-34,-31,-36,36,-35,]),'COMMA':([10,13,16,17,21,26,27,52,54,55,56,58,62,65,72,73,74,75,82,93,96,97,98,99,100,145,],[14,19,-62,-63,14,30,30,-75,-74,-77,-76,-73,-80,-80,30,30,-79,-78,-71,122,-72,-69,-70,-67,-68,-25,]),'PLUS':([52,54,55,56,58,60,62,65,74,75,76,82,88,91,93,96,97,98,99,100,111,119,141,145,154,],[-75,-74,-77,-76,-73,80,-80,-80,-79,-78,80,-71,80,80,80,-72,-69,-70,-67,-68,80,80,80,-25,80,]),'LESSTHANEQ':([52,54,55,56,58,62,65,74,75,82,83,84,86,88,90,96,97,98,99,100,110,111,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,145,149,150,],[-75,-74,-77,-76,-73,-80,-80,-79,-78,-71,-39,108,116,-55,108,-72,-69,-70,-67,-68,108,-55,-46,-45,108,108,-42,108,-41,108,-38,-51,-53,-50,-54,-49,-52,108,-55,-25,-40,-56,]),'$end':([1,2,3,7,8,9,67,],[-2,-1,0,-3,-4,-5,-7,]),'ADDROF':([33,44,53,57,59,61,63,68,69,70,77,79,80,81,85,89,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,122,148,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'DIVIDE':([52,54,55,56,58,60,62,65,74,75,76,82,88,91,93,96,97,98,99,100,111,119,141,145,154,],[-75,-74,-77,-76,-73,77,-80,-80,-79,-78,77,-71,77,77,77,-72,-69,-70,77,77,77,77,77,-25,77,]),'EQUALS':([47,65,66,74,75,],[69,-80,89,-79,-78,]),'TIMES':([6,11,14,18,19,23,28,33,35,36,37,38,39,40,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,74,75,76,77,78,79,80,81,82,85,88,89,91,93,96,97,98,99,100,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,122,123,141,142,143,144,145,148,151,153,154,155,156,157,158,160,161,162,163,164,166,],[11,11,11,-57,11,11,44,57,-17,-28,-20,-21,-16,-23,-18,-19,57,44,-22,11,11,-75,57,-74,-77,-76,57,-73,57,79,57,-80,57,-64,-80,57,57,57,-79,-78,79,57,-24,57,57,57,-71,57,79,57,79,79,-72,-69,-70,79,79,57,57,57,57,57,57,57,57,79,57,57,57,57,57,57,57,79,44,57,44,79,-16,44,-29,-25,57,44,-37,79,-30,-33,44,-32,44,-34,-31,-36,44,-35,]),'ANDOPERATOR':([52,54,55,56,58,62,65,74,75,82,83,84,88,90,96,97,98,99,100,110,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,145,149,150,],[-75,-74,-77,-76,-73,-80,-80,-79,-78,-71,-39,105,-55,105,-72,-69,-70,-67,-68,105,-46,-45,105,-47,-42,-43,-41,-44,-38,-51,-53,-50,-54,-49,-52,105,-25,-40,-56,]),'GREATERTHAN':([52,54,55,56,58,62,65,74,75,82,83,84,86,88,90,96,97,98,99,100,110,111,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,145,149,150,],[-75,-74,-77,-76,-73,-80,-80,-79,-78,-71,-39,102,115,-55,102,-72,-69,-70,-67,-68,102,-55,-46,-45,102,102,-42,102,-41,102,-38,-51,-53,-50,-54,-49,-52,102,-55,-25,-40,-56,]),'LPAREN':([10,33,34,46,47,59,61,62,63,68,69,70,77,79,80,81,85,87,89,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,122,133,148,],[15,59,63,68,70,59,59,70,85,85,59,59,59,59,59,59,85,118,59,85,85,85,85,85,85,85,85,59,59,59,59,59,59,85,59,148,59,]),'ELSE':([18,36,37,38,40,42,43,49,64,78,142,145,153,156,158,161,163,166,],[-57,-28,-20,-21,-23,-18,-19,-22,-64,-24,151,-25,-37,-33,160,-34,-36,-35,]),'IF':([18,28,35,36,37,38,39,40,42,43,48,49,64,78,120,123,142,143,144,145,151,153,155,156,157,158,160,161,162,163,164,166,],[-57,46,-17,-28,-20,-21,-16,-23,-18,-19,46,-22,-64,-24,46,46,-16,46,-29,-25,46,-37,-30,-33,46,-32,46,-34,-31,-36,46,-35,]),'LBRACE':([25,101,120,151,160,],[28,123,143,157,164,]),'NAME':([6,11,14,18,19,23,28,33,35,36,37,38,39,40,42,43,44,48,49,50,51,53,57,59,61,63,64,68,69,70,77,78,79,80,81,85,89,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,120,122,123,142,143,144,145,148,151,153,155,156,157,158,160,161,162,163,164,166,],[10,17,21,-57,21,27,47,62,-17,-28,-20,-21,-16,-23,-18,-19,65,47,-22,21,72,65,65,62,62,62,-64,62,62,62,62,-24,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,47,62,47,-16,47,-29,-25,62,47,-37,-30,-33,47,-32,47,-34,-31,-36,47,-35,]),'FLOAT':([33,59,61,63,68,69,70,77,79,80,81,85,89,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,122,148,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'LESSTHAN':([52,54,55,56,58,62,65,74,75,82,83,84,86,88,90,96,97,98,99,100,110,111,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,145,149,150,],[-75,-74,-77,-76,-73,-80,-80,-79,-78,-71,-39,103,113,-55,103,-72,-69,-70,-67,-68,103,-55,-46,-45,103,103,-42,103,-41,103,-38,-51,-53,-50,-54,-49,-52,103,-55,-25,-40,-56,]),'NOT':([63,68,85,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,],[87,87,87,87,87,87,87,87,87,87,87,133,133,133,133,133,133,87,]),'EQUALCHECK':([52,54,55,56,58,62,65,74,75,82,83,84,86,88,90,96,97,98,99,100,110,111,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,145,149,150,],[-75,-74,-77,-76,-73,-80,-80,-79,-78,-71,-39,109,117,-55,109,-72,-69,-70,-67,-68,109,-55,-46,-45,109,109,-42,-43,-41,-44,-38,-51,-53,-50,-54,-49,-52,109,-55,-25,-40,-56,]),'TYPE':([0,1,4,5,15,18,28,29,30,35,36,37,38,39,40,42,43,48,49,64,67,78,120,123,142,143,144,145,151,153,155,156,157,158,160,161,162,163,164,166,],[6,6,6,6,23,-57,50,-6,51,-17,-28,-20,-21,-16,-23,-18,-19,50,-22,-64,-7,-24,50,50,-16,50,-29,-25,50,-37,-30,-33,50,-32,50,-34,-31,-36,50,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,1,4,5,],[2,7,8,9,]),'conditionbase':([63,68,85,102,103,104,105,106,107,108,109,118,],[83,83,83,83,83,83,83,83,83,83,83,83,]),'declaration':([0,1,4,5,28,48,120,123,143,151,157,160,164,],[4,4,4,4,43,43,43,43,43,43,43,43,43,]),'unmatchedstatement':([28,48,120,123,143,151,157,160,164,],[35,35,35,35,35,155,35,162,35,]),'whileblock':([28,48,120,123,143,151,157,160,164,],[37,37,37,37,37,37,37,37,37,]),'ifblock':([28,48,120,123,143,151,157,160,164,],[38,38,38,38,38,38,38,38,38,]),'dlist1':([6,14,19,50,],[12,20,24,12,]),'master':([0,],[3,]),'arguments':([70,122,],[92,146,]),'statement':([28,48,120,123,143,151,157,160,164,],[39,39,142,39,39,156,39,163,39,]),'functioncall':([28,33,48,59,61,63,68,69,70,77,79,80,81,85,89,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,120,122,123,143,148,151,157,160,164,],[40,58,40,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,40,58,40,40,58,40,40,40,40,]),'assignment_base':([28,48,120,123,143,151,157,160,164,],[41,41,41,41,41,41,41,41,41,]),'prototype':([0,1,4,5,],[5,5,5,5,]),'function':([0,1,4,5,],[1,1,1,1,]),'conditional':([63,68,85,102,103,104,105,106,107,108,109,118,],[84,90,110,124,125,126,127,128,129,130,131,140,]),'pointervar':([33,44,53,57,59,61,63,68,69,70,77,79,80,81,85,89,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,122,148,],[55,66,74,75,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'assignment':([28,48,120,123,143,151,157,160,164,],[42,42,42,42,42,42,42,42,42,]),'allnumbers':([33,59,61,63,68,69,70,77,79,80,81,85,89,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,122,148,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'paramlist':([15,],[22,]),'fbody':([28,48,123,143,157,164,],[45,71,147,152,159,165,]),'CS':([63,68,85,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,],[86,86,86,86,86,86,86,86,86,86,86,134,135,136,137,138,139,86,]),'returnstatement':([28,48,120,123,143,151,157,160,164,],[49,49,49,49,49,49,49,49,49,]),'paramlist2':([26,27,72,73,],[31,32,94,95,]),'allstatement':([28,48,120,123,143,157,164,],[48,48,144,48,48,48,48,]),'specialvar':([6,11,14,19,23,50,51,],[13,16,13,13,26,13,73,]),'expression':([33,59,61,63,68,69,70,77,79,80,81,85,89,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,122,148,],[60,76,82,88,88,91,93,97,98,99,100,111,119,88,88,88,88,88,88,88,88,88,88,88,88,88,88,141,93,154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> master","S'",1,None,None,None),
  ('master -> program','master',1,'p_masterprogram','Parser.py',276),
  ('program -> function','program',1,'p_program','Parser.py',301),
  ('program -> function program','program',2,'p_program','Parser.py',302),
  ('program -> declaration program','program',2,'p_program','Parser.py',303),
  ('program -> prototype program','program',2,'p_program1','Parser.py',332),
  ('prototype -> TYPE NAME LPAREN paramlist RPAREN SEMICOLON','prototype',6,'p_prototype','Parser.py',353),
  ('function -> TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function','Parser.py',378),
  ('paramlist -> <empty>','paramlist',0,'p_paramlist','Parser.py',416),
  ('paramlist -> TYPE NAME paramlist2','paramlist',3,'p_paramlist','Parser.py',417),
  ('paramlist -> TYPE specialvar paramlist2','paramlist',3,'p_paramlist','Parser.py',418),
  ('paramlist2 -> <empty>','paramlist2',0,'p_paramlist2','Parser.py',429),
  ('paramlist2 -> COMMA TYPE NAME paramlist2','paramlist2',4,'p_paramlist2','Parser.py',430),
  ('paramlist2 -> COMMA TYPE specialvar paramlist2','paramlist2',4,'p_paramlist2','Parser.py',431),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','Parser.py',442),
  ('fbody -> <empty>','fbody',0,'p_fbody','Parser.py',443),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','Parser.py',466),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','Parser.py',467),
  ('statement -> assignment','statement',1,'p_statement_expr','Parser.py',473),
  ('statement -> declaration','statement',1,'p_statement_expr','Parser.py',474),
  ('statement -> whileblock','statement',1,'p_statement_expr','Parser.py',475),
  ('statement -> ifblock','statement',1,'p_statement_expr','Parser.py',476),
  ('statement -> returnstatement','statement',1,'p_statement_expr','Parser.py',477),
  ('statement -> functioncall','statement',1,'p_statement_expr','Parser.py',478),
  ('returnstatement -> RETURN expression SEMICOLON','returnstatement',3,'p_return_statement','Parser.py',484),
  ('functioncall -> NAME LPAREN arguments RPAREN SEMICOLON','functioncall',5,'p_function_call','Parser.py',490),
  ('arguments -> expression','arguments',1,'p_function_arguments','Parser.py',497),
  ('arguments -> expression COMMA arguments','arguments',3,'p_function_arguments','Parser.py',498),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','Parser.py',508),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','Parser.py',514),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','Parser.py',515),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','Parser.py',516),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','Parser.py',527),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','Parser.py',533),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','Parser.py',534),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','Parser.py',535),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','Parser.py',546),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','Parser.py',551),
  ('conditional -> LPAREN conditional RPAREN','conditional',3,'p_conditional1','Parser.py',557),
  ('conditional -> conditionbase','conditional',1,'p_conditional','Parser.py',563),
  ('conditional -> NOT LPAREN conditional RPAREN','conditional',4,'p_conditional','Parser.py',564),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','Parser.py',565),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','Parser.py',566),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','Parser.py',567),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','Parser.py',568),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','Parser.py',569),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','Parser.py',570),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','Parser.py',571),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','Parser.py',572),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',598),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',599),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','Parser.py',600),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','Parser.py',601),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',602),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',603),
  ('CS -> expression','CS',1,'p_cs','Parser.py',623),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','Parser.py',624),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','Parser.py',632),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','Parser.py',639),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','Parser.py',640),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','Parser.py',656),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','Parser.py',657),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar1','Parser.py',671),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar2','Parser.py',676),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','Parser.py',681),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','Parser.py',690),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','Parser.py',691),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','Parser.py',712),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','Parser.py',713),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','Parser.py',714),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','Parser.py',731),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Parser.py',739),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','Parser.py',746),
  ('expression -> functioncall','expression',1,'p_expression_fcall','Parser.py',752),
  ('expression -> allnumbers','expression',1,'p_expression_base_number','Parser.py',758),
  ('allnumbers -> FLOAT','allnumbers',1,'p_allnumbers_float','Parser.py',766),
  ('allnumbers -> NUMBER','allnumbers',1,'p_allnumbers_int','Parser.py',773),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','Parser.py',780),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','Parser.py',787),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','Parser.py',792),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','Parser.py',798),
]
