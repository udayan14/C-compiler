
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSNUMBER FLOAT TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE RETURN EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT\n\tmaster : program\n\t \n\tprogram : function \n\t\t\t\t| function program\n\t\t\t\t| declaration program\n\t\n\tprogram : prototype program\n\t\n\tprototype : TYPE allthestars NAME LPAREN paramlist RPAREN SEMICOLON\n\t\t\t| TYPE NAME LPAREN paramlist RPAREN SEMICOLON\n\t\n\tallthestars : TIMES \n\t\t\t\t| TIMES allthestars\n\t\n\tfunction : TYPE allthestars NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE\n\t\t\t| TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE\n\t\n\tparamlist : \n\t\t\t| TYPE NAME paramlist2\n\t\t\t| TYPE specialvar paramlist2\n\t\n\tparamlist2 : \n\t\t\t|  COMMA TYPE NAME paramlist2\n\t\t\t|  COMMA TYPE specialvar paramlist2\n\t\n\tfbody : allstatement fbody\n\t\t\t| \n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\t\t| returnstatement\n\t\t\t| functioncall\n\t\n\treturnstatement : RETURN expression SEMICOLON\n\t\n\tfunctioncall : NAME LPAREN arguments RPAREN SEMICOLON\n\t\n\targuments : expression \n\t\t\t\t| expression COMMA arguments\n\t\n\tstatement : SEMICOLON\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : LPAREN conditional RPAREN\n\t\n\tconditional : conditionbase\n\t\t\t\t| NOT LPAREN conditional RPAREN\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\n\tspecialvar : TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : functioncall\n\t\n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : allnumbers\n\t\n\tallnumbers : FLOAT\n\t\n\tallnumbers : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'UNEQUAL':([62,63,65,66,67,69,75,85,86,93,94,95,97,99,101,107,108,109,110,111,121,122,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,156,160,161,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,118,123,-59,118,-77,-74,-75,-72,-73,118,-59,-50,-49,118,118,-46,-47,-45,-48,-42,-55,-57,-54,-58,-53,-56,118,-59,-29,-44,-60,]),'NUMBER':([42,70,72,73,78,79,80,88,90,91,92,96,100,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,133,159,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'OROPERATOR':([62,63,65,66,67,69,75,85,86,93,94,95,99,101,107,108,109,110,111,121,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,156,160,161,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,115,-59,115,-77,-74,-75,-72,-73,115,-50,-49,-52,-51,-46,-47,-45,-48,-42,-55,-57,-54,-58,-53,-56,115,-29,-44,-60,]),'WHILE':([19,35,40,44,45,46,47,48,49,51,52,57,58,74,89,131,134,153,154,155,156,162,164,166,167,168,169,171,172,173,174,175,177,],[-61,43,43,-21,-32,-24,-25,-20,-27,-22,-23,43,-26,-68,-28,43,43,-20,43,-33,-29,43,-41,-34,-37,43,-36,43,-38,-35,-40,43,-39,]),'GREATERTHANEQ':([62,63,65,66,67,69,75,85,86,93,94,95,97,99,101,107,108,109,110,111,121,122,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,156,160,161,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,117,125,-59,117,-77,-74,-75,-72,-73,117,-59,-50,-49,117,117,-46,117,-45,117,-42,-55,-57,-54,-58,-53,-56,117,-59,-29,-44,-60,]),'RETURN':([19,35,40,44,45,46,47,48,49,51,52,57,58,74,89,131,134,153,154,155,156,162,164,166,167,168,169,171,172,173,174,175,177,],[-61,42,42,-21,-32,-24,-25,-20,-27,-22,-23,42,-26,-68,-28,42,42,-20,42,-33,-29,42,-41,-34,-37,42,-36,42,-38,-35,-40,42,-39,]),'MINUS':([42,62,63,65,66,67,69,70,71,72,73,75,78,79,80,85,86,87,88,90,91,92,93,96,99,100,102,104,107,108,109,110,111,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,133,152,156,159,165,],[72,-79,-84,-78,-81,-80,-71,72,92,72,72,-84,72,72,72,-83,-82,92,72,72,72,72,-76,72,92,72,92,92,-77,-74,-75,-72,-73,72,72,72,72,72,72,72,72,92,72,72,72,72,72,72,72,92,72,92,-29,72,92,]),'RBRACE':([19,35,40,44,45,46,47,48,49,51,52,54,57,58,61,74,81,89,134,153,154,155,156,158,163,164,166,167,168,169,170,172,173,174,175,176,177,],[-61,-19,-19,-21,-32,-24,-25,-20,-27,-22,-23,77,-19,-26,84,-68,-18,-28,-19,-20,-19,-33,-29,164,169,-41,-34,-37,-19,-36,172,-38,-35,-40,-19,177,-39,]),'RPAREN':([16,17,22,23,28,30,32,33,38,39,62,63,65,66,67,69,75,82,83,85,86,87,93,94,95,99,101,103,104,105,106,107,108,109,110,111,121,122,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,156,157,160,161,165,],[-66,-67,-12,-12,31,34,-15,-15,-14,-13,-79,-84,-78,-81,-80,-71,-84,-15,-15,-83,-82,107,-76,-43,112,-59,131,132,-30,-16,-17,-77,-74,-75,-72,-73,143,107,-50,-49,-52,-51,-46,-47,-45,-48,-42,-55,-57,-54,-58,-53,-56,160,161,-29,-31,-44,-60,161,]),'SEMICOLON':([12,13,14,16,17,19,24,25,27,31,34,35,40,44,45,46,47,48,49,50,51,52,57,58,62,63,65,66,67,69,71,74,75,85,86,89,93,102,107,108,109,110,111,130,131,132,134,153,154,155,156,162,164,166,167,168,169,171,172,173,174,175,177,],[19,-64,-62,-66,-67,-61,-65,-62,-63,36,41,45,45,-21,-32,-24,-25,-20,-27,74,-22,-23,45,-26,-79,-84,-78,-81,-80,-71,89,-68,-84,-83,-82,-28,-76,-70,-77,-74,-75,-72,-73,-69,45,156,45,-20,45,-33,-29,45,-41,-34,-37,45,-36,45,-38,-35,-40,45,-39,]),'COMMA':([13,14,16,17,25,32,33,62,63,65,66,67,69,75,82,83,85,86,93,104,107,108,109,110,111,156,],[20,21,-66,-67,21,37,37,-79,-84,-78,-81,-80,-71,-84,37,37,-83,-82,-76,133,-77,-74,-75,-72,-73,-29,]),'PLUS':([62,63,65,66,67,69,71,75,85,86,87,93,99,102,104,107,108,109,110,111,122,130,152,156,165,],[-79,-84,-78,-81,-80,-71,91,-84,-83,-82,91,-76,91,91,91,-77,-74,-75,-72,-73,91,91,91,-29,91,]),'LESSTHANEQ':([62,63,65,66,67,69,75,85,86,93,94,95,97,99,101,107,108,109,110,111,121,122,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,156,160,161,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,119,127,-59,119,-77,-74,-75,-72,-73,119,-59,-50,-49,119,119,-46,119,-45,119,-42,-55,-57,-54,-58,-53,-56,119,-59,-29,-44,-60,]),'$end':([1,2,3,7,8,9,77,84,],[-2,-1,0,-3,-4,-5,-11,-10,]),'ADDROF':([42,53,64,68,70,72,73,78,79,80,88,90,91,92,96,100,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,133,159,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'DIVIDE':([62,63,65,66,67,69,71,75,85,86,87,93,99,102,104,107,108,109,110,111,122,130,152,156,165,],[-79,-84,-78,-81,-80,-71,88,-84,-83,-82,88,-76,88,88,88,-77,-74,-75,88,88,88,88,88,-29,88,]),'EQUALS':([56,75,76,85,86,],[79,-84,100,-83,-82,]),'TIMES':([6,11,19,20,21,26,29,35,40,42,44,45,46,47,48,49,51,52,53,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,85,86,87,88,89,90,91,92,93,96,99,100,102,104,107,108,109,110,111,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,133,134,152,153,154,155,156,159,162,164,165,166,167,168,169,171,172,173,174,175,177,],[11,11,-61,26,26,26,26,53,53,68,-21,-32,-24,-25,-20,-27,-22,-23,68,53,-26,26,26,-79,-84,68,-78,-81,-80,68,-71,68,90,68,68,-68,-84,68,68,68,-83,-82,90,68,-28,68,68,68,-76,68,90,68,90,90,-77,-74,-75,90,90,68,68,68,68,68,68,68,68,90,68,68,68,68,68,68,68,90,53,68,53,90,-20,53,-33,-29,68,53,-41,90,-34,-37,53,-36,53,-38,-35,-40,53,-39,]),'ANDOPERATOR':([62,63,65,66,67,69,75,85,86,93,94,95,99,101,107,108,109,110,111,121,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,156,160,161,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,116,-59,116,-77,-74,-75,-72,-73,116,-50,-49,116,-51,-46,-47,-45,-48,-42,-55,-57,-54,-58,-53,-56,116,-29,-44,-60,]),'GREATERTHAN':([62,63,65,66,67,69,75,85,86,93,94,95,97,99,101,107,108,109,110,111,121,122,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,156,160,161,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,113,126,-59,113,-77,-74,-75,-72,-73,113,-59,-50,-49,113,113,-46,113,-45,113,-42,-55,-57,-54,-58,-53,-56,113,-59,-29,-44,-60,]),'LPAREN':([14,15,42,43,55,56,63,70,72,73,78,79,80,88,90,91,92,96,98,100,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,133,144,159,],[22,23,70,73,78,80,80,70,70,96,96,70,70,70,70,70,70,96,129,70,96,96,96,96,96,96,96,96,70,70,70,70,70,70,96,70,159,70,]),'ELSE':([19,45,46,47,49,51,52,58,74,89,153,156,164,167,169,172,174,177,],[-61,-32,-24,-25,-27,-22,-23,-26,-68,-28,162,-29,-41,-37,171,-38,-40,-39,]),'IF':([19,35,40,44,45,46,47,48,49,51,52,57,58,74,89,131,134,153,154,155,156,162,164,166,167,168,169,171,172,173,174,175,177,],[-61,55,55,-21,-32,-24,-25,-20,-27,-22,-23,55,-26,-68,-28,55,55,-20,55,-33,-29,55,-41,-34,-37,55,-36,55,-38,-35,-40,55,-39,]),'LBRACE':([31,34,112,131,162,171,],[35,40,134,154,168,175,]),'NAME':([6,10,11,18,19,20,21,26,29,35,40,42,44,45,46,47,48,49,51,52,53,57,58,59,60,64,68,70,72,73,74,78,79,80,88,89,90,91,92,96,100,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,131,133,134,153,154,155,156,159,162,164,166,167,168,169,171,172,173,174,175,177,],[14,15,-8,-9,-61,25,25,17,33,56,56,63,-21,-32,-24,-25,-20,-27,-22,-23,75,56,-26,25,82,75,75,63,63,63,-68,63,63,63,63,-28,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,56,63,56,-20,56,-33,-29,63,56,-41,-34,-37,56,-36,56,-38,-35,-40,56,-39,]),'FLOAT':([42,70,72,73,78,79,80,88,90,91,92,96,100,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,133,159,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'LESSTHAN':([62,63,65,66,67,69,75,85,86,93,94,95,97,99,101,107,108,109,110,111,121,122,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,156,160,161,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,114,124,-59,114,-77,-74,-75,-72,-73,114,-59,-50,-49,114,114,-46,114,-45,114,-42,-55,-57,-54,-58,-53,-56,114,-59,-29,-44,-60,]),'NOT':([73,78,96,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,],[98,98,98,98,98,98,98,98,98,98,98,144,144,144,144,144,144,98,]),'EQUALCHECK':([62,63,65,66,67,69,75,85,86,93,94,95,97,99,101,107,108,109,110,111,121,122,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,156,160,161,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,120,128,-59,120,-77,-74,-75,-72,-73,120,-59,-50,-49,120,120,-46,-47,-45,-48,-42,-55,-57,-54,-58,-53,-56,120,-59,-29,-44,-60,]),'TYPE':([0,1,4,5,19,22,23,35,36,37,40,41,44,45,46,47,48,49,51,52,57,58,74,77,84,89,131,134,153,154,155,156,162,164,166,167,168,169,171,172,173,174,175,177,],[6,6,6,6,-61,29,29,59,-7,60,59,-6,-21,-32,-24,-25,-20,-27,-22,-23,59,-26,-68,-11,-10,-28,59,59,-20,59,-33,-29,59,-41,-34,-37,59,-36,59,-38,-35,-40,59,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,1,4,5,],[2,7,8,9,]),'conditionbase':([73,78,96,113,114,115,116,117,118,119,120,129,],[94,94,94,94,94,94,94,94,94,94,94,94,]),'declaration':([0,1,4,5,35,40,57,131,134,154,162,168,171,175,],[4,4,4,4,52,52,52,52,52,52,52,52,52,52,]),'allthestars':([6,11,],[10,18,]),'unmatchedstatement':([35,40,57,131,134,154,162,168,171,175,],[44,44,44,44,44,44,166,44,173,44,]),'whileblock':([35,40,57,131,134,154,162,168,171,175,],[46,46,46,46,46,46,46,46,46,46,]),'ifblock':([35,40,57,131,134,154,162,168,171,175,],[47,47,47,47,47,47,47,47,47,47,]),'dlist1':([6,20,21,59,],[12,24,27,12,]),'master':([0,],[3,]),'arguments':([80,133,],[103,157,]),'statement':([35,40,57,131,134,154,162,168,171,175,],[48,48,48,153,48,48,167,48,174,48,]),'functioncall':([35,40,42,57,70,72,73,78,79,80,88,90,91,92,96,100,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,131,133,134,154,159,162,168,171,175,],[49,49,69,49,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,49,69,49,49,69,49,49,49,49,]),'assignment_base':([35,40,57,131,134,154,162,168,171,175,],[50,50,50,50,50,50,50,50,50,50,]),'prototype':([0,1,4,5,],[5,5,5,5,]),'function':([0,1,4,5,],[1,1,1,1,]),'conditional':([73,78,96,113,114,115,116,117,118,119,120,129,],[95,101,121,135,136,137,138,139,140,141,142,151,]),'pointervar':([42,53,64,68,70,72,73,78,79,80,88,90,91,92,96,100,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,133,159,],[66,76,85,86,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'assignment':([35,40,57,131,134,154,162,168,171,175,],[51,51,51,51,51,51,51,51,51,51,]),'allnumbers':([42,70,72,73,78,79,80,88,90,91,92,96,100,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,133,159,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'paramlist':([22,23,],[28,30,]),'fbody':([35,40,57,134,154,168,175,],[54,61,81,158,163,170,176,]),'CS':([73,78,96,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,],[97,97,97,97,97,97,97,97,97,97,97,145,146,147,148,149,150,97,]),'returnstatement':([35,40,57,131,134,154,162,168,171,175,],[58,58,58,58,58,58,58,58,58,58,]),'paramlist2':([32,33,82,83,],[38,39,105,106,]),'allstatement':([35,40,57,131,134,154,168,175,],[57,57,57,155,57,57,57,57,]),'specialvar':([6,11,20,21,26,29,59,60,],[13,16,13,13,16,32,13,83,]),'expression':([42,70,72,73,78,79,80,88,90,91,92,96,100,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,133,159,],[71,87,93,99,99,102,104,108,109,110,111,122,130,99,99,99,99,99,99,99,99,99,99,99,99,99,99,152,104,165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> master","S'",1,None,None,None),
  ('master -> program','master',1,'p_masterprogram','Parser.py',328),
  ('program -> function','program',1,'p_program','Parser.py',353),
  ('program -> function program','program',2,'p_program','Parser.py',354),
  ('program -> declaration program','program',2,'p_program','Parser.py',355),
  ('program -> prototype program','program',2,'p_program1','Parser.py',385),
  ('prototype -> TYPE allthestars NAME LPAREN paramlist RPAREN SEMICOLON','prototype',7,'p_prototype','Parser.py',406),
  ('prototype -> TYPE NAME LPAREN paramlist RPAREN SEMICOLON','prototype',6,'p_prototype','Parser.py',407),
  ('allthestars -> TIMES','allthestars',1,'p_function_stars','Parser.py',426),
  ('allthestars -> TIMES allthestars','allthestars',2,'p_function_stars','Parser.py',427),
  ('function -> TYPE allthestars NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',9,'p_function','Parser.py',446),
  ('function -> TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function','Parser.py',447),
  ('paramlist -> <empty>','paramlist',0,'p_paramlist','Parser.py',498),
  ('paramlist -> TYPE NAME paramlist2','paramlist',3,'p_paramlist','Parser.py',499),
  ('paramlist -> TYPE specialvar paramlist2','paramlist',3,'p_paramlist','Parser.py',500),
  ('paramlist2 -> <empty>','paramlist2',0,'p_paramlist2','Parser.py',511),
  ('paramlist2 -> COMMA TYPE NAME paramlist2','paramlist2',4,'p_paramlist2','Parser.py',512),
  ('paramlist2 -> COMMA TYPE specialvar paramlist2','paramlist2',4,'p_paramlist2','Parser.py',513),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','Parser.py',524),
  ('fbody -> <empty>','fbody',0,'p_fbody','Parser.py',525),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','Parser.py',548),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','Parser.py',549),
  ('statement -> assignment','statement',1,'p_statement_expr','Parser.py',555),
  ('statement -> declaration','statement',1,'p_statement_expr','Parser.py',556),
  ('statement -> whileblock','statement',1,'p_statement_expr','Parser.py',557),
  ('statement -> ifblock','statement',1,'p_statement_expr','Parser.py',558),
  ('statement -> returnstatement','statement',1,'p_statement_expr','Parser.py',559),
  ('statement -> functioncall','statement',1,'p_statement_expr','Parser.py',560),
  ('returnstatement -> RETURN expression SEMICOLON','returnstatement',3,'p_return_statement','Parser.py',566),
  ('functioncall -> NAME LPAREN arguments RPAREN SEMICOLON','functioncall',5,'p_function_call','Parser.py',572),
  ('arguments -> expression','arguments',1,'p_function_arguments','Parser.py',579),
  ('arguments -> expression COMMA arguments','arguments',3,'p_function_arguments','Parser.py',580),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','Parser.py',590),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','Parser.py',596),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','Parser.py',597),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','Parser.py',598),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','Parser.py',609),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','Parser.py',615),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','Parser.py',616),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','Parser.py',617),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','Parser.py',628),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','Parser.py',633),
  ('conditional -> LPAREN conditional RPAREN','conditional',3,'p_conditional1','Parser.py',639),
  ('conditional -> conditionbase','conditional',1,'p_conditional','Parser.py',645),
  ('conditional -> NOT LPAREN conditional RPAREN','conditional',4,'p_conditional','Parser.py',646),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','Parser.py',647),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','Parser.py',648),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','Parser.py',649),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','Parser.py',650),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','Parser.py',651),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','Parser.py',652),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','Parser.py',653),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','Parser.py',654),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',680),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',681),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','Parser.py',682),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','Parser.py',683),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',684),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',685),
  ('CS -> expression','CS',1,'p_cs','Parser.py',705),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','Parser.py',706),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','Parser.py',714),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','Parser.py',721),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','Parser.py',722),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','Parser.py',738),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','Parser.py',739),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar1','Parser.py',753),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar2','Parser.py',758),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','Parser.py',763),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','Parser.py',772),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','Parser.py',773),
  ('expression -> functioncall','expression',1,'p_expression_fcall','Parser.py',796),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','Parser.py',802),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','Parser.py',803),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','Parser.py',804),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','Parser.py',821),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Parser.py',829),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','Parser.py',836),
  ('expression -> allnumbers','expression',1,'p_expression_base_number','Parser.py',844),
  ('allnumbers -> FLOAT','allnumbers',1,'p_allnumbers_float','Parser.py',852),
  ('allnumbers -> NUMBER','allnumbers',1,'p_allnumbers_int','Parser.py',859),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','Parser.py',866),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','Parser.py',873),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','Parser.py',878),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','Parser.py',884),
]
