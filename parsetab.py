
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFrightNOTrightUMINUSNUMBER TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT \n\tprogram : function \n\t\t\t\t| function program\n\t\n\tfunction : TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE\n\t\n\tfbody : allstatement\n\t\t\t| allstatement fbody\n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : CS\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\t\t\t| TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar\n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'TYPE':([0,2,8,12,13,14,15,16,17,18,28,31,37,63,78,79,80,88,89,93,94,95,96,97,99,100,101,102,103,105,],[3,3,9,9,-6,-7,-8,-9,-10,-11,-3,-37,-30,9,-12,-6,9,9,9,-16,-13,9,-15,-20,9,-17,9,-14,-19,-18,]),'$end':([1,2,4,28,],[0,-1,-2,-3,]),'NAME':([3,8,9,12,13,14,15,16,17,18,22,26,27,30,31,32,33,35,37,38,39,43,44,53,57,58,59,60,63,64,65,66,67,68,69,70,78,79,80,88,89,93,94,95,96,97,99,100,101,102,103,105,],[5,10,24,10,-6,-7,-8,-9,-10,-11,36,41,36,36,-37,36,36,36,-30,24,24,36,36,36,36,36,36,36,10,36,36,36,36,36,36,36,-12,-6,10,10,10,-16,-13,10,-15,-20,10,-17,10,-14,-19,-18,]),'LPAREN':([5,19,21,27,30,32,43,44,50,53,57,58,59,60,64,65,66,67,68,69,70,],[6,30,32,44,44,44,44,44,70,44,44,44,44,44,44,44,44,44,44,44,44,]),'RPAREN':([6,36,45,46,47,48,49,51,52,54,61,62,73,74,75,76,77,81,82,83,84,85,86,87,91,],[7,-50,-46,-47,63,-21,-28,71,-48,-49,-44,77,-40,-41,-42,-43,-45,-22,-23,-24,-25,-26,-27,91,-29,]),'LBRACE':([7,63,71,89,99,],[8,80,88,95,101,]),'IF':([8,12,13,14,15,16,17,18,31,37,63,78,79,80,88,89,93,94,95,96,97,99,100,101,102,103,105,],[19,19,-6,-7,-8,-9,-10,-11,-37,-30,19,-12,-6,19,19,19,-16,-13,19,-15,-20,19,-17,19,-14,-19,-18,]),'WHILE':([8,12,13,14,15,16,17,18,31,37,63,78,79,80,88,89,93,94,95,96,97,99,100,101,102,103,105,],[21,21,-6,-7,-8,-9,-10,-11,-37,-30,21,-12,-6,21,21,21,-16,-13,21,-15,-20,21,-17,21,-14,-19,-18,]),'TIMES':([8,9,12,13,14,15,16,17,18,22,26,27,30,31,32,33,35,36,37,38,39,42,43,44,45,46,49,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,87,88,89,93,94,95,96,97,99,100,101,102,103,105,],[22,26,22,-6,-7,-8,-9,-10,-11,33,26,33,33,-37,33,33,33,-50,-30,26,26,60,33,33,-46,-47,60,-48,33,-49,33,33,33,33,-44,60,22,33,33,33,33,33,33,33,60,60,60,-42,-43,-45,-12,-6,22,60,22,22,-16,-13,22,-15,-20,22,-17,22,-14,-19,-18,]),'EQUALS':([10,34,36,52,54,],[27,53,-50,-48,-49,]),'RBRACE':([11,12,13,14,15,16,17,18,29,31,37,78,79,90,92,93,94,96,97,98,100,102,103,104,105,],[28,-4,-6,-7,-8,-9,-10,-11,-5,-37,-30,-12,-6,96,97,-16,-13,-15,-20,100,-17,-14,-19,105,-18,]),'ELSE':([15,16,17,18,31,37,79,93,96,97,100,103,105,],[-8,-9,-10,-11,-37,-30,89,-16,99,-20,-17,-19,-18,]),'SEMICOLON':([20,23,24,25,36,40,41,42,45,46,52,54,55,56,61,72,73,74,75,76,77,],[31,37,-31,-33,-50,-35,-36,-39,-46,-47,-48,-49,-32,-34,-44,-38,-40,-41,-42,-43,-45,]),'ADDROF':([22,27,30,32,33,35,43,44,53,57,58,59,60,64,65,66,67,68,69,70,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'COMMA':([24,25,40,41,],[38,39,-35,-36,]),'MINUS':([27,30,32,36,42,43,44,45,46,49,52,53,54,57,58,59,60,61,62,64,65,66,67,68,69,70,72,73,74,75,76,77,87,],[43,43,43,-50,58,43,43,-46,-47,58,-48,43,-49,43,43,43,43,-44,58,43,43,43,43,43,43,43,58,-40,-41,-42,-43,-45,58,]),'NUMBER':([27,30,32,43,44,53,57,58,59,60,64,65,66,67,68,69,70,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'NOT':([30,32,64,65,66,67,68,69,],[50,50,50,50,50,50,50,50,]),'PLUS':([36,42,45,46,49,52,54,61,62,72,73,74,75,76,77,87,],[-50,57,-46,-47,57,-48,-49,-44,57,57,-40,-41,-42,-43,-45,57,]),'DIVIDE':([36,42,45,46,49,52,54,61,62,72,73,74,75,76,77,87,],[-50,59,-46,-47,59,-48,-49,-44,59,59,59,59,-42,-43,-45,59,]),'LESSTHANEQ':([36,45,46,47,48,49,51,52,54,61,73,74,75,76,77,81,82,83,84,85,86,91,],[-50,-46,-47,64,-21,-28,64,-48,-49,-44,-40,-41,-42,-43,-45,-22,-23,64,64,-26,-27,-29,]),'GREATERTHANEQ':([36,45,46,47,48,49,51,52,54,61,73,74,75,76,77,81,82,83,84,85,86,91,],[-50,-46,-47,65,-21,-28,65,-48,-49,-44,-40,-41,-42,-43,-45,-22,-23,65,65,-26,-27,-29,]),'UNEQUAL':([36,45,46,47,48,49,51,52,54,61,73,74,75,76,77,81,82,83,84,85,86,91,],[-50,-46,-47,66,-21,-28,66,-48,-49,-44,-40,-41,-42,-43,-45,-22,-23,-24,-25,-26,-27,-29,]),'EQUALCHECK':([36,45,46,47,48,49,51,52,54,61,73,74,75,76,77,81,82,83,84,85,86,91,],[-50,-46,-47,67,-21,-28,67,-48,-49,-44,-40,-41,-42,-43,-45,-22,-23,-24,-25,-26,-27,-29,]),'LESSTHAN':([36,45,46,47,48,49,51,52,54,61,73,74,75,76,77,81,82,83,84,85,86,91,],[-50,-46,-47,68,-21,-28,68,-48,-49,-44,-40,-41,-42,-43,-45,-22,-23,68,68,-26,-27,-29,]),'GREATERTHAN':([36,45,46,47,48,49,51,52,54,61,73,74,75,76,77,81,82,83,84,85,86,91,],[-50,-46,-47,69,-21,-28,69,-48,-49,-44,-40,-41,-42,-43,-45,-22,-23,69,69,-26,-27,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,4,]),'function':([0,2,],[2,2,]),'fbody':([8,12,80,88,95,101,],[11,29,90,92,98,104,]),'allstatement':([8,12,63,80,88,95,101,],[12,12,78,12,12,12,12,]),'statement':([8,12,63,80,88,89,95,99,101,],[13,13,79,13,13,93,13,103,13,]),'unmatchedstatement':([8,12,63,80,88,89,95,99,101,],[14,14,14,14,14,94,14,102,14,]),'assignment':([8,12,63,80,88,89,95,99,101,],[15,15,15,15,15,15,15,15,15,]),'declaration':([8,12,63,80,88,89,95,99,101,],[16,16,16,16,16,16,16,16,16,]),'whileblock':([8,12,63,80,88,89,95,99,101,],[17,17,17,17,17,17,17,17,17,]),'ifblock':([8,12,63,80,88,89,95,99,101,],[18,18,18,18,18,18,18,18,18,]),'assignment_base':([8,12,63,80,88,89,95,99,101,],[20,20,20,20,20,20,20,20,20,]),'dlist1':([9,38,39,],[23,55,56,]),'specialvar':([9,26,38,39,],[25,40,25,25,]),'pointervar':([22,27,30,32,33,35,43,44,53,57,58,59,60,64,65,66,67,68,69,70,],[34,46,46,46,52,54,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'expression':([27,30,32,43,44,53,57,58,59,60,64,65,66,67,68,69,70,],[42,49,49,61,62,72,73,74,75,76,49,49,49,49,49,49,87,]),'conditional':([30,32,64,65,66,67,68,69,],[47,51,81,82,83,84,85,86,]),'CS':([30,32,64,65,66,67,68,69,],[48,48,48,48,48,48,48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','150070001-150070018.py',176),
  ('program -> function program','program',2,'p_program','150070001-150070018.py',177),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','150070001-150070018.py',201),
  ('fbody -> allstatement','fbody',1,'p_fbody','150070001-150070018.py',235),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','150070001-150070018.py',236),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','150070001-150070018.py',253),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','150070001-150070018.py',254),
  ('statement -> assignment','statement',1,'p_statement_expr','150070001-150070018.py',260),
  ('statement -> declaration','statement',1,'p_statement_expr','150070001-150070018.py',261),
  ('statement -> whileblock','statement',1,'p_statement_expr','150070001-150070018.py',262),
  ('statement -> ifblock','statement',1,'p_statement_expr','150070001-150070018.py',263),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','150070001-150070018.py',269),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','150070001-150070018.py',270),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','150070001-150070018.py',271),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','150070001-150070018.py',282),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','150070001-150070018.py',288),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','150070001-150070018.py',289),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','150070001-150070018.py',290),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','150070001-150070018.py',301),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','150070001-150070018.py',306),
  ('conditional -> CS','conditional',1,'p_conditional','150070001-150070018.py',311),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','150070001-150070018.py',312),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','150070001-150070018.py',313),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','150070001-150070018.py',314),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','150070001-150070018.py',315),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','150070001-150070018.py',316),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','150070001-150070018.py',317),
  ('CS -> expression','CS',1,'p_cs','150070001-150070018.py',336),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','150070001-150070018.py',337),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','150070001-150070018.py',345),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','150070001-150070018.py',351),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','150070001-150070018.py',352),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','150070001-150070018.py',359),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','150070001-150070018.py',360),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar','150070001-150070018.py',367),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar','150070001-150070018.py',368),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','150070001-150070018.py',373),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','150070001-150070018.py',382),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','150070001-150070018.py',383),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','150070001-150070018.py',403),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','150070001-150070018.py',404),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','150070001-150070018.py',405),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','150070001-150070018.py',422),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','150070001-150070018.py',430),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','150070001-150070018.py',437),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','150070001-150070018.py',443),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','150070001-150070018.py',449),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','150070001-150070018.py',456),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','150070001-150070018.py',462),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','150070001-150070018.py',469),
]
