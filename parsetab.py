
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSNUMBER TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT\n\tmaster : program\n\t \n\tprogram : function \n\t\t\t\t| function program\n\t\t\t\t| declaration program\n\t\n\tprogram : prototype program\n\t\n\tprototype : TYPE NAME LPAREN paramlist RPAREN SEMICOLON\n\t\n\tfunction : TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE\n\t\n\tparamlist : \n\t\t\t| TYPE NAME paramlist2\n\t\t\t| TYPE specialvar paramlist2\n\t\n\tparamlist2 : \n\t\t\t|  COMMA TYPE NAME paramlist2\n\t\t\t|  COMMA TYPE specialvar paramlist2\n\t\n\tfbody : allstatement fbody\n\t\t\t| \n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\n\tstatement : SEMICOLON\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : LPAREN conditional RPAREN\n\t\n\tconditional : conditionbase\n\t\t\t\t| NOT LPAREN conditional RPAREN\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\n\tspecialvar : TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'TYPE':([0,3,4,5,14,16,29,31,32,37,38,39,40,41,42,43,44,52,55,86,110,111,112,130,131,137,138,139,140,142,144,145,146,147,148,150,],[6,6,6,6,20,-51,33,34,-6,34,-16,-17,-18,-19,-20,-21,-22,-7,-58,34,-23,-16,34,34,34,-27,-24,34,-26,-31,34,-28,34,-25,-30,-29,]),'$end':([1,2,3,7,8,9,52,],[0,-1,-2,-3,-4,-5,-7,]),'NAME':([6,13,15,16,17,20,31,33,34,37,38,39,40,41,42,43,44,48,51,54,55,56,57,59,64,65,68,76,78,79,80,81,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,110,111,112,130,131,135,137,138,139,140,142,144,145,146,147,148,150,],[10,19,22,-51,22,25,35,49,22,35,-16,-17,-18,-19,-20,-21,-22,60,60,60,-58,60,60,60,60,60,60,60,60,60,60,60,35,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-23,-16,35,35,35,60,-27,-24,35,-26,-31,35,-28,35,-25,-30,-29,]),'TIMES':([6,13,15,16,17,20,31,33,34,37,38,39,40,41,42,43,44,48,51,54,55,56,57,59,60,63,64,65,66,67,68,73,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,110,111,112,122,130,131,135,137,138,139,140,141,142,144,145,146,147,148,150,],[13,13,13,-51,13,13,48,13,13,48,-16,-17,-18,-19,-20,-21,-22,57,57,57,-58,57,57,57,-71,81,57,57,-67,-68,57,81,-69,57,-70,57,57,57,57,-65,81,81,48,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,81,81,81,-63,-64,-66,-23,-16,48,81,48,48,57,-27,-24,48,-26,81,-31,48,-28,48,-25,-30,-29,]),'LPAREN':([10,45,47,51,54,56,64,65,68,71,76,78,79,80,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,124,135,],[14,54,56,65,68,68,65,65,68,95,65,65,65,65,65,68,68,68,68,68,68,68,68,68,65,65,65,65,65,65,135,65,]),'SEMICOLON':([10,11,12,16,18,19,22,23,24,27,31,37,38,39,40,41,42,43,44,46,55,60,63,66,67,75,77,82,86,103,104,105,106,107,108,110,111,112,130,131,137,138,139,140,142,144,145,146,147,148,150,],[-52,16,-54,-51,-56,-57,-52,-53,-55,32,44,44,-16,-17,-18,-19,-20,-21,-22,55,-58,-71,-60,-67,-68,-69,-70,-65,44,-59,-61,-62,-63,-64,-66,-23,-16,44,44,44,-27,-24,44,-26,-31,44,-28,44,-25,-30,-29,]),'COMMA':([10,12,18,19,22,25,26,49,50,],[15,17,-56,-57,15,29,29,29,29,]),'RPAREN':([14,18,19,21,25,26,28,30,49,50,60,61,62,66,67,69,70,73,74,75,77,82,83,84,85,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,133,134,141,],[-8,-56,-57,27,-11,-11,-9,-10,-11,-11,-71,-12,-13,-67,-68,86,-33,-49,102,-69,-70,-65,108,109,108,-61,-62,-63,-64,-66,-32,-35,-36,-37,-38,-39,-40,-41,-42,133,134,-43,-44,-45,-46,-47,-48,-34,-50,134,]),'IF':([16,31,37,38,39,40,41,42,43,44,55,86,110,111,112,130,131,137,138,139,140,142,144,145,146,147,148,150,],[-51,45,45,-16,-17,-18,-19,-20,-21,-22,-58,45,-23,-16,45,45,45,-27,-24,45,-26,-31,45,-28,45,-25,-30,-29,]),'WHILE':([16,31,37,38,39,40,41,42,43,44,55,86,110,111,112,130,131,137,138,139,140,142,144,145,146,147,148,150,],[-51,47,47,-16,-17,-18,-19,-20,-21,-22,-58,47,-23,-16,47,47,47,-27,-24,47,-26,-31,47,-28,47,-25,-30,-29,]),'RBRACE':([16,31,36,37,38,39,40,41,42,43,44,53,55,110,111,112,130,132,136,137,138,139,140,142,143,145,146,147,148,149,150,],[-51,-15,52,-15,-16,-17,-18,-19,-20,-21,-22,-14,-58,-23,-16,-15,-15,140,142,-27,-24,-15,-26,-31,145,-28,-15,-25,-30,150,-29,]),'ELSE':([16,40,41,42,43,44,55,111,137,140,142,145,148,150,],[-51,-18,-19,-20,-21,-22,-58,131,-27,144,-31,-28,-30,-29,]),'LBRACE':([27,86,102,131,144,],[31,112,130,139,146,]),'EQUALS':([35,58,60,75,77,],[51,76,-71,-69,-70,]),'ADDROF':([48,51,54,56,57,59,64,65,68,76,78,79,80,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,135,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'MINUS':([51,54,56,60,63,64,65,66,67,68,73,75,76,77,78,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,122,135,141,],[64,64,64,-71,79,64,64,-67,-68,64,79,-69,64,-70,64,64,64,64,-65,79,79,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,79,-61,-62,-63,-64,-66,79,64,79,]),'NUMBER':([51,54,56,64,65,68,76,78,79,80,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,135,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'NOT':([54,56,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,],[71,71,71,71,71,71,71,71,71,71,71,71,124,124,124,124,124,124,]),'PLUS':([60,63,66,67,73,75,77,82,83,85,103,104,105,106,107,108,122,141,],[-71,78,-67,-68,78,-69,-70,-65,78,78,78,-61,-62,-63,-64,-66,78,78,]),'DIVIDE':([60,63,66,67,73,75,77,82,83,85,103,104,105,106,107,108,122,141,],[-71,80,-67,-68,80,-69,-70,-65,80,80,80,80,80,-63,-64,-66,80,80,]),'LESSTHANEQ':([60,66,67,69,70,72,73,74,75,77,82,84,85,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,133,134,],[-71,-67,-68,87,-33,96,-49,87,-69,-70,-65,87,-49,-61,-62,-63,-64,-66,-32,-35,-36,87,87,-39,-40,87,87,87,-49,-43,-44,-45,-46,-47,-48,-34,-50,]),'GREATERTHANEQ':([60,66,67,69,70,72,73,74,75,77,82,84,85,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,133,134,],[-71,-67,-68,88,-33,97,-49,88,-69,-70,-65,88,-49,-61,-62,-63,-64,-66,-32,-35,-36,88,88,-39,-40,88,88,88,-49,-43,-44,-45,-46,-47,-48,-34,-50,]),'UNEQUAL':([60,66,67,69,70,72,73,74,75,77,82,84,85,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,133,134,],[-71,-67,-68,89,-33,98,-49,89,-69,-70,-65,89,-49,-61,-62,-63,-64,-66,-32,-35,-36,-37,-38,-39,-40,89,89,89,-49,-43,-44,-45,-46,-47,-48,-34,-50,]),'EQUALCHECK':([60,66,67,69,70,72,73,74,75,77,82,84,85,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,133,134,],[-71,-67,-68,90,-33,99,-49,90,-69,-70,-65,90,-49,-61,-62,-63,-64,-66,-32,-35,-36,-37,-38,-39,-40,90,90,90,-49,-43,-44,-45,-46,-47,-48,-34,-50,]),'LESSTHAN':([60,66,67,69,70,72,73,74,75,77,82,84,85,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,133,134,],[-71,-67,-68,91,-33,100,-49,91,-69,-70,-65,91,-49,-61,-62,-63,-64,-66,-32,-35,-36,91,91,-39,-40,91,91,91,-49,-43,-44,-45,-46,-47,-48,-34,-50,]),'GREATERTHAN':([60,66,67,69,70,72,73,74,75,77,82,84,85,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,133,134,],[-71,-67,-68,92,-33,101,-49,92,-69,-70,-65,92,-49,-61,-62,-63,-64,-66,-32,-35,-36,92,92,-39,-40,92,92,92,-49,-43,-44,-45,-46,-47,-48,-34,-50,]),'ANDOPERATOR':([60,66,67,69,70,73,74,75,77,82,84,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,123,125,126,127,128,129,133,134,],[-71,-67,-68,93,-33,-49,93,-69,-70,-65,93,-61,-62,-63,-64,-66,-32,-35,-36,-37,-38,-39,-40,-41,93,93,-43,-44,-45,-46,-47,-48,-34,-50,]),'OROPERATOR':([60,66,67,69,70,73,74,75,77,82,84,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,123,125,126,127,128,129,133,134,],[-71,-67,-68,94,-33,-49,94,-69,-70,-65,94,-61,-62,-63,-64,-66,-32,-35,-36,-37,-38,-39,-40,-41,-42,94,-43,-44,-45,-46,-47,-48,-34,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'master':([0,],[1,]),'program':([0,3,4,5,],[2,7,8,9,]),'function':([0,3,4,5,],[3,3,3,3,]),'declaration':([0,3,4,5,31,37,86,112,130,131,139,144,146,],[4,4,4,4,41,41,41,41,41,41,41,41,41,]),'prototype':([0,3,4,5,],[5,5,5,5,]),'dlist1':([6,15,17,34,],[11,23,24,11,]),'specialvar':([6,13,15,17,20,33,34,],[12,18,12,12,26,50,12,]),'paramlist':([14,],[21,]),'paramlist2':([25,26,49,50,],[28,30,61,62,]),'fbody':([31,37,112,130,139,146,],[36,53,132,136,143,149,]),'allstatement':([31,37,86,112,130,139,146,],[37,37,110,37,37,37,37,]),'statement':([31,37,86,112,130,131,139,144,146,],[38,38,111,38,38,137,38,148,38,]),'unmatchedstatement':([31,37,86,112,130,131,139,144,146,],[39,39,39,39,39,138,39,147,39,]),'assignment':([31,37,86,112,130,131,139,144,146,],[40,40,40,40,40,40,40,40,40,]),'whileblock':([31,37,86,112,130,131,139,144,146,],[42,42,42,42,42,42,42,42,42,]),'ifblock':([31,37,86,112,130,131,139,144,146,],[43,43,43,43,43,43,43,43,43,]),'assignment_base':([31,37,86,112,130,131,139,144,146,],[46,46,46,46,46,46,46,46,46,]),'pointervar':([48,51,54,56,57,59,64,65,68,76,78,79,80,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,135,],[58,67,67,67,75,77,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'expression':([51,54,56,64,65,68,76,78,79,80,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,135,],[63,73,73,82,83,85,103,104,105,106,107,73,73,73,73,73,73,73,73,122,73,73,73,73,73,73,141,]),'conditional':([54,56,68,87,88,89,90,91,92,93,94,95,],[69,74,84,113,114,115,116,117,118,119,120,121,]),'conditionbase':([54,56,68,87,88,89,90,91,92,93,94,95,],[70,70,70,70,70,70,70,70,70,70,70,70,]),'CS':([54,56,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,],[72,72,72,72,72,72,72,72,72,72,72,72,123,125,126,127,128,129,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> master","S'",1,None,None,None),
  ('master -> program','master',1,'p_masterprogram','Parser.py',110),
  ('program -> function','program',1,'p_program','Parser.py',125),
  ('program -> function program','program',2,'p_program','Parser.py',126),
  ('program -> declaration program','program',2,'p_program','Parser.py',127),
  ('program -> prototype program','program',2,'p_program1','Parser.py',156),
  ('prototype -> TYPE NAME LPAREN paramlist RPAREN SEMICOLON','prototype',6,'p_prototype','Parser.py',176),
  ('function -> TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function','Parser.py',201),
  ('paramlist -> <empty>','paramlist',0,'p_paramlist','Parser.py',239),
  ('paramlist -> TYPE NAME paramlist2','paramlist',3,'p_paramlist','Parser.py',240),
  ('paramlist -> TYPE specialvar paramlist2','paramlist',3,'p_paramlist','Parser.py',241),
  ('paramlist2 -> <empty>','paramlist2',0,'p_paramlist2','Parser.py',251),
  ('paramlist2 -> COMMA TYPE NAME paramlist2','paramlist2',4,'p_paramlist2','Parser.py',252),
  ('paramlist2 -> COMMA TYPE specialvar paramlist2','paramlist2',4,'p_paramlist2','Parser.py',253),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','Parser.py',264),
  ('fbody -> <empty>','fbody',0,'p_fbody','Parser.py',265),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','Parser.py',288),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','Parser.py',289),
  ('statement -> assignment','statement',1,'p_statement_expr','Parser.py',295),
  ('statement -> declaration','statement',1,'p_statement_expr','Parser.py',296),
  ('statement -> whileblock','statement',1,'p_statement_expr','Parser.py',297),
  ('statement -> ifblock','statement',1,'p_statement_expr','Parser.py',298),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','Parser.py',304),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','Parser.py',310),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','Parser.py',311),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','Parser.py',312),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','Parser.py',323),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','Parser.py',329),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','Parser.py',330),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','Parser.py',331),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','Parser.py',342),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','Parser.py',347),
  ('conditional -> LPAREN conditional RPAREN','conditional',3,'p_conditional1','Parser.py',353),
  ('conditional -> conditionbase','conditional',1,'p_conditional','Parser.py',359),
  ('conditional -> NOT LPAREN conditional RPAREN','conditional',4,'p_conditional','Parser.py',360),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','Parser.py',361),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','Parser.py',362),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','Parser.py',363),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','Parser.py',364),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','Parser.py',365),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','Parser.py',366),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','Parser.py',367),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','Parser.py',368),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',394),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',395),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','Parser.py',396),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','Parser.py',397),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',398),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',399),
  ('CS -> expression','CS',1,'p_cs','Parser.py',419),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','Parser.py',420),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','Parser.py',428),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','Parser.py',434),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','Parser.py',435),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','Parser.py',447),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','Parser.py',448),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar1','Parser.py',460),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar2','Parser.py',465),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','Parser.py',470),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','Parser.py',479),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','Parser.py',480),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','Parser.py',501),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','Parser.py',502),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','Parser.py',503),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','Parser.py',520),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Parser.py',528),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','Parser.py',535),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','Parser.py',541),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','Parser.py',547),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','Parser.py',554),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','Parser.py',559),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','Parser.py',565),
]
