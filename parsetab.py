
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '6E77A42CCA5EAB3F137236F838E4D847'
    
_lr_action_items = {'LPAREN':([4,],[6,]),'NUMBER':([38,],[47,]),'LBRACE':([7,],[8,]),'EQUALS':([17,26,29,39,40,44,50,],[30,38,-26,-25,-24,30,38,]),'RBRACE':([11,12,13,18,20,31,33,],[-6,-7,21,-4,-15,-5,-8,]),'RPAREN':([6,],[7,]),'$end':([2,3,5,21,],[-1,0,-2,-3,]),'COMMA':([9,14,24,25,29,34,35,39,40,41,43,44,47,48,49,50,],[19,-18,36,37,-26,-13,-14,-25,-24,-23,-20,-26,-21,-22,-19,-24,]),'TYPE':([0,2,8,11,12,18,20,21,33,],[1,1,15,-6,-7,15,-15,-3,-8,]),'ADDROF':([16,27,28,30,38,42,],[27,27,27,27,27,27,]),'VALOF':([8,11,12,15,16,18,19,20,23,27,28,30,33,36,37,38,42,],[16,-6,-7,23,28,16,16,-15,23,28,28,42,-8,23,23,42,28,]),'SEMICOLON':([9,10,14,22,24,25,29,32,34,35,39,40,41,43,44,45,46,47,48,49,50,],[-16,20,-18,33,-11,-9,-26,-17,-13,-14,-25,-24,-23,-20,-26,-12,-10,-21,-22,-19,-24,]),'NAME':([1,8,11,12,15,16,18,19,20,23,27,28,30,33,36,37,38,42,],[4,17,-6,-7,25,29,17,17,-15,35,29,29,44,-8,25,25,44,29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([8,18,],[18,18,]),'pointervar':([16,27,28,30,38,42,],[26,39,40,41,48,50,]),'assignment_list':([8,18,19,],[10,10,32,]),'specialvar':([15,23,36,37,],[24,34,24,24,]),'declaration':([8,18,],[12,12,]),'dlist1':([15,36,37,],[22,45,46,]),'fbody':([8,18,],[13,31,]),'assignment_base':([8,18,19,30,38,],[14,14,14,14,14,]),'assignment':([8,18,],[11,11,]),'function':([0,2,],[2,2,]),'program':([0,2,],[3,5,]),'assignment_inter':([8,18,19,30,38,],[9,9,9,43,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','level1.py',61),
  ('program -> function program','program',2,'p_program','level1.py',62),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','level1.py',67),
  ('fbody -> statement','fbody',1,'p_fbody','level1.py',73),
  ('fbody -> statement fbody','fbody',2,'p_fbody','level1.py',74),
  ('statement -> assignment','statement',1,'p_statement_expr','level1.py',80),
  ('statement -> declaration','statement',1,'p_statement_expr','level1.py',81),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','level1.py',87),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','level1.py',93),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','level1.py',94),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','level1.py',101),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','level1.py',102),
  ('specialvar -> VALOF specialvar','specialvar',2,'p_specialvar','level1.py',109),
  ('specialvar -> VALOF NAME','specialvar',2,'p_specialvar','level1.py',110),
  ('assignment -> assignment_list SEMICOLON','assignment',2,'p_assignment','level1.py',115),
  ('assignment_list -> assignment_inter','assignment_list',1,'p_assignment_list','level1.py',124),
  ('assignment_list -> assignment_inter COMMA assignment_list','assignment_list',3,'p_assignment_list','level1.py',125),
  ('assignment_inter -> assignment_base','assignment_inter',1,'p_assignment_inter','level1.py',134),
  ('assignment_inter -> VALOF pointervar EQUALS assignment_inter','assignment_inter',4,'p_assignment_inter','level1.py',135),
  ('assignment_inter -> NAME EQUALS assignment_inter','assignment_inter',3,'p_assignment_inter','level1.py',136),
  ('assignment_base -> VALOF pointervar EQUALS NUMBER','assignment_base',4,'p_assignment_base','level1.py',148),
  ('assignment_base -> VALOF pointervar EQUALS pointervar','assignment_base',4,'p_assignment_base','level1.py',149),
  ('assignment_base -> NAME EQUALS pointervar','assignment_base',3,'p_assignment_base','level1.py',150),
  ('pointervar -> VALOF pointervar','pointervar',2,'p_pointervar','level1.py',158),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar','level1.py',159),
  ('pointervar -> NAME','pointervar',1,'p_pointervar','level1.py',160),
]
