
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFrightNOTrightUMINUSNUMBER TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT \n\tprogram : function \n\t\t\t\t| function program\n\t\n\tfunction : TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE\n\t\n\tfbody : allstatement\n\t\t\t| allstatement fbody\n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : CS\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\t\t\t| TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar\n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'WHILE':([8,10,12,13,15,16,19,20,36,51,69,80,86,87,88,91,93,94,95,96,97,99,100,101,102,103,105,],[9,-10,-8,-9,9,-11,-7,-6,-37,-30,9,9,-6,9,-12,9,-20,-16,9,-13,-14,9,-18,-15,9,-17,-19,]),'LPAREN':([4,9,11,23,24,25,37,41,44,54,56,57,58,59,60,61,63,64,65,66,67,],[6,23,24,37,37,37,37,60,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'COMMA':([27,29,48,49,],[47,50,-35,-36,]),'SEMICOLON':([22,27,29,30,33,38,43,46,48,49,52,53,68,70,71,72,73,74,75,76,77,],[36,-33,-31,51,-50,-47,-46,-39,-35,-36,-49,-48,-44,-34,-32,-38,-45,-43,-42,-40,-41,]),'EQUALCHECK':([33,38,39,40,42,43,45,52,53,68,73,74,75,76,77,79,81,82,83,84,85,89,],[-50,-47,-21,-28,63,-46,63,-49,-48,-44,-45,-43,-42,-40,-41,-27,-25,-24,-22,-26,-23,-29,]),'DIVIDE':([33,38,40,43,46,52,53,55,68,72,73,74,75,76,77,78,],[-50,-47,57,-46,57,-49,-48,57,-44,57,-45,-43,-42,57,57,57,]),'EQUALS':([14,33,34,52,53,],[25,-50,54,-49,-48,]),'LESSTHANEQ':([33,38,39,40,42,43,45,52,53,68,73,74,75,76,77,79,81,82,83,84,85,89,],[-50,-47,-21,-28,65,-46,65,-49,-48,-44,-45,-43,-42,-40,-41,-27,65,65,-22,-26,-23,-29,]),'UNEQUAL':([33,38,39,40,42,43,45,52,53,68,73,74,75,76,77,79,81,82,83,84,85,89,],[-50,-47,-21,-28,64,-46,64,-49,-48,-44,-45,-43,-42,-40,-41,-27,-25,-24,-22,-26,-23,-29,]),'LESSTHAN':([33,38,39,40,42,43,45,52,53,68,73,74,75,76,77,79,81,82,83,84,85,89,],[-50,-47,-21,-28,66,-46,66,-49,-48,-44,-45,-43,-42,-40,-41,-27,66,66,-22,-26,-23,-29,]),'LBRACE':([7,62,69,91,99,],[8,80,87,95,102,]),'ELSE':([10,12,13,16,36,51,86,93,94,97,100,103,105,],[-10,-8,-9,-11,-37,-30,91,-20,-16,99,-18,-17,-19,]),'ADDROF':([18,23,24,25,31,32,37,44,54,56,57,58,59,60,61,63,64,65,66,67,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'NAME':([2,8,10,12,13,15,16,17,18,19,20,23,24,25,28,31,32,36,37,44,47,50,51,54,56,57,58,59,60,61,63,64,65,66,67,69,80,86,87,88,91,93,94,95,96,97,99,100,101,102,103,105,],[4,14,-10,-8,-9,14,-11,29,33,-7,-6,33,33,33,49,33,33,-37,33,33,29,29,-30,33,33,33,33,33,33,33,33,33,33,33,33,14,14,-6,14,-12,14,-20,-16,14,-13,-14,14,-18,-15,14,-17,-19,]),'NOT':([23,24,61,63,64,65,66,67,],[41,41,41,41,41,41,41,41,]),'TYPE':([0,3,8,10,12,13,15,16,19,20,35,36,51,69,80,86,87,88,91,93,94,95,96,97,99,100,101,102,103,105,],[2,2,17,-10,-8,-9,17,-11,-7,-6,-3,-37,-30,17,17,-6,17,-12,17,-20,-16,17,-13,-14,17,-18,-15,17,-17,-19,]),'RPAREN':([6,33,38,39,40,42,43,45,52,53,55,68,73,74,75,76,77,78,79,81,82,83,84,85,89,],[7,-50,-47,-21,-28,62,-46,69,-49,-48,73,-44,-45,-43,-42,-40,-41,89,-27,-25,-24,-22,-26,-23,-29,]),'NUMBER':([23,24,25,37,44,54,56,57,58,59,60,61,63,64,65,66,67,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TIMES':([8,10,12,13,15,16,17,18,19,20,23,24,25,28,31,32,33,36,37,38,40,43,44,46,47,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,72,73,74,75,76,77,78,80,86,87,88,91,93,94,95,96,97,99,100,101,102,103,105,],[18,-10,-8,-9,18,-11,28,32,-7,-6,32,32,32,28,32,32,-50,-37,32,-47,56,-46,32,56,28,28,-30,-49,-48,32,56,32,32,32,32,32,32,32,32,32,32,32,-44,18,56,-45,-43,-42,56,56,56,18,-6,18,-12,18,-20,-16,18,-13,-14,18,-18,-15,18,-17,-19,]),'IF':([8,10,12,13,15,16,19,20,36,51,69,80,86,87,88,91,93,94,95,96,97,99,100,101,102,103,105,],[11,-10,-8,-9,11,-11,-7,-6,-37,-30,11,11,-6,11,-12,11,-20,-16,11,-13,-14,11,-18,-15,11,-17,-19,]),'PLUS':([33,38,40,43,46,52,53,55,68,72,73,74,75,76,77,78,],[-50,-47,58,-46,58,-49,-48,58,-44,58,-45,-43,-42,-40,-41,58,]),'MINUS':([23,24,25,33,37,38,40,43,44,46,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,72,73,74,75,76,77,78,],[44,44,44,-50,44,-47,59,-46,44,59,-49,-48,44,59,44,44,44,44,44,44,44,44,44,44,44,-44,59,-45,-43,-42,-40,-41,59,]),'RBRACE':([10,12,13,15,16,19,20,21,26,36,51,86,88,90,92,93,94,96,97,98,100,101,103,104,105,],[-10,-8,-9,-4,-11,-7,-6,35,-5,-37,-30,-6,-12,93,97,-20,-16,-13,-14,100,-18,-15,-17,105,-19,]),'GREATERTHAN':([33,38,39,40,42,43,45,52,53,68,73,74,75,76,77,79,81,82,83,84,85,89,],[-50,-47,-21,-28,61,-46,61,-49,-48,-44,-45,-43,-42,-40,-41,-27,61,61,-22,-26,-23,-29,]),'$end':([1,3,5,35,],[0,-1,-2,-3,]),'GREATERTHANEQ':([33,38,39,40,42,43,45,52,53,68,73,74,75,76,77,79,81,82,83,84,85,89,],[-50,-47,-21,-28,67,-46,67,-49,-48,-44,-45,-43,-42,-40,-41,-27,67,67,-22,-26,-23,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CS':([23,24,61,63,64,65,66,67,],[39,39,39,39,39,39,39,39,]),'specialvar':([17,28,47,50,],[27,48,27,27,]),'declaration':([8,15,69,80,87,91,95,99,102,],[13,13,13,13,13,13,13,13,13,]),'conditional':([23,24,61,63,64,65,66,67,],[42,45,79,81,82,83,84,85,]),'function':([0,3,],[3,3,]),'pointervar':([18,23,24,25,31,32,37,44,54,56,57,58,59,60,61,63,64,65,66,67,],[34,38,38,38,52,53,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'unmatchedstatement':([8,15,69,80,87,91,95,99,102,],[19,19,19,19,19,96,19,101,19,]),'whileblock':([8,15,69,80,87,91,95,99,102,],[10,10,10,10,10,10,10,10,10,]),'program':([0,3,],[1,5,]),'fbody':([8,15,80,87,95,102,],[21,26,90,92,98,104,]),'dlist1':([17,47,50,],[30,70,71,]),'expression':([23,24,25,37,44,54,56,57,58,59,60,61,63,64,65,66,67,],[40,40,46,55,68,72,74,75,76,77,78,40,40,40,40,40,40,]),'assignment':([8,15,69,80,87,91,95,99,102,],[12,12,12,12,12,12,12,12,12,]),'ifblock':([8,15,69,80,87,91,95,99,102,],[16,16,16,16,16,16,16,16,16,]),'allstatement':([8,15,69,80,87,95,102,],[15,15,88,15,15,15,15,]),'statement':([8,15,69,80,87,91,95,99,102,],[20,20,86,20,20,94,20,103,20,]),'assignment_base':([8,15,69,80,87,91,95,99,102,],[22,22,22,22,22,22,22,22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','150070001-150070018.py',152),
  ('program -> function program','program',2,'p_program','150070001-150070018.py',153),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','150070001-150070018.py',177),
  ('fbody -> allstatement','fbody',1,'p_fbody','150070001-150070018.py',211),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','150070001-150070018.py',212),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','150070001-150070018.py',229),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','150070001-150070018.py',230),
  ('statement -> assignment','statement',1,'p_statement_expr','150070001-150070018.py',236),
  ('statement -> declaration','statement',1,'p_statement_expr','150070001-150070018.py',237),
  ('statement -> whileblock','statement',1,'p_statement_expr','150070001-150070018.py',238),
  ('statement -> ifblock','statement',1,'p_statement_expr','150070001-150070018.py',239),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr','150070001-150070018.py',245),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr','150070001-150070018.py',246),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr','150070001-150070018.py',247),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr','150070001-150070018.py',248),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock','150070001-150070018.py',258),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock','150070001-150070018.py',259),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock','150070001-150070018.py',260),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock','150070001-150070018.py',261),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','150070001-150070018.py',271),
  ('conditional -> CS','conditional',1,'p_conditional','150070001-150070018.py',276),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','150070001-150070018.py',277),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','150070001-150070018.py',278),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','150070001-150070018.py',279),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','150070001-150070018.py',280),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','150070001-150070018.py',281),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','150070001-150070018.py',282),
  ('CS -> expression','CS',1,'p_cs','150070001-150070018.py',301),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','150070001-150070018.py',302),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','150070001-150070018.py',310),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','150070001-150070018.py',316),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','150070001-150070018.py',317),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','150070001-150070018.py',324),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','150070001-150070018.py',325),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar','150070001-150070018.py',332),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar','150070001-150070018.py',333),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','150070001-150070018.py',338),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','150070001-150070018.py',347),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','150070001-150070018.py',348),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','150070001-150070018.py',368),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','150070001-150070018.py',369),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','150070001-150070018.py',370),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','150070001-150070018.py',387),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','150070001-150070018.py',395),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','150070001-150070018.py',402),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','150070001-150070018.py',408),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','150070001-150070018.py',414),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','150070001-150070018.py',421),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','150070001-150070018.py',427),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','150070001-150070018.py',434),
]
