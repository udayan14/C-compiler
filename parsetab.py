
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSNUMBER FLOAT TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE RETURN EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT\n\tmaster : program\n\t \n\tprogram : function \n\t\t\t\t| function program\n\t\t\t\t| declaration program\n\t\n\tprogram : prototype program\n\t\n\tprototype : TYPE NAME LPAREN paramlist RPAREN SEMICOLON\n\t\n\tallthestars : TIMES \n\t\t\t\t| TIMES allthestars\n\t\n\tfunction : TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE\n\t\n\tparamlist : \n\t\t\t| TYPE NAME paramlist2\n\t\t\t| TYPE specialvar paramlist2\n\t\n\tparamlist2 : \n\t\t\t|  COMMA TYPE NAME paramlist2\n\t\t\t|  COMMA TYPE specialvar paramlist2\n\t\n\tfbody : allstatement fbody\n\t\t\t| \n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\t\t| returnstatement\n\t\t\t| functioncall SEMICOLON\n\t\n\treturnstatement : RETURN expression SEMICOLON\n\t\n\tfunctioncall : NAME LPAREN arguments RPAREN\n\t\n\targuments : expression \n\t\t\t\t| expression COMMA arguments\n\t\n\tstatement : SEMICOLON\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : LPAREN conditional RPAREN\n\t\n\tconditional : conditionbase\n\t\t\t\t| NOT LPAREN conditional RPAREN\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\n\tspecialvar : TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : functioncall\n\t\n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : allnumbers\n\t\n\tallnumbers : FLOAT\n\t\n\tallnumbers : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'UNEQUAL':([52,53,55,56,57,59,66,75,76,83,84,85,87,89,91,97,98,99,100,101,111,112,122,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,149,150,],[-77,-82,-76,-79,-78,-69,-82,-81,-80,-74,-41,108,113,-57,108,-75,-72,-73,-70,-71,108,-57,-27,-48,-47,108,108,-44,-45,-43,-46,-40,-53,-55,-52,-56,-51,-54,108,-57,-42,-58,]),'NUMBER':([33,60,62,63,69,70,71,78,80,81,82,86,90,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,123,148,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'OROPERATOR':([52,53,55,56,57,59,66,75,76,83,84,85,89,91,97,98,99,100,101,111,122,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,149,150,],[-77,-82,-76,-79,-78,-69,-82,-81,-80,-74,-41,105,-57,105,-75,-72,-73,-70,-71,105,-27,-48,-47,-50,-49,-44,-45,-43,-46,-40,-53,-55,-52,-56,-51,-54,105,-42,-58,]),'WHILE':([18,28,35,36,37,38,39,42,43,48,49,64,65,79,121,124,143,144,145,151,153,155,156,157,158,160,161,162,163,164,166,],[-59,34,-19,-30,-22,-23,-18,-20,-21,34,-24,-25,-66,-26,34,34,-18,34,-31,34,-39,-32,-35,34,-34,34,-36,-33,-38,34,-37,]),'GREATERTHANEQ':([52,53,55,56,57,59,66,75,76,83,84,85,87,89,91,97,98,99,100,101,111,112,122,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,149,150,],[-77,-82,-76,-79,-78,-69,-82,-81,-80,-74,-41,107,115,-57,107,-75,-72,-73,-70,-71,107,-57,-27,-48,-47,107,107,-44,107,-43,107,-40,-53,-55,-52,-56,-51,-54,107,-57,-42,-58,]),'RETURN':([18,28,35,36,37,38,39,42,43,48,49,64,65,79,121,124,143,144,145,151,153,155,156,157,158,160,161,162,163,164,166,],[-59,33,-19,-30,-22,-23,-18,-20,-21,33,-24,-25,-66,-26,33,33,-18,33,-31,33,-39,-32,-35,33,-34,33,-36,-33,-38,33,-37,]),'MINUS':([33,52,53,55,56,57,59,60,61,62,63,66,69,70,71,75,76,77,78,80,81,82,83,86,89,90,92,94,97,98,99,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,122,123,142,148,154,],[62,-77,-82,-76,-79,-78,-69,62,82,62,62,-82,62,62,62,-81,-80,82,62,62,62,62,-74,62,82,62,82,82,-75,-72,-73,-70,-71,62,62,62,62,62,62,62,62,82,62,62,62,62,62,62,62,82,-27,62,82,62,82,]),'RBRACE':([18,28,35,36,37,38,39,42,43,45,48,49,64,65,72,79,124,143,144,145,147,152,153,155,156,157,158,159,161,162,163,164,165,166,],[-59,-17,-19,-30,-22,-23,-18,-20,-21,68,-17,-24,-25,-66,-16,-26,-17,-18,-17,-31,153,158,-39,-32,-35,-17,-34,161,-36,-33,-38,-17,166,-37,]),'RPAREN':([15,16,17,22,26,27,31,32,52,53,55,56,57,59,66,73,74,75,76,77,83,84,85,89,91,93,94,95,96,97,98,99,100,101,111,112,122,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,146,149,150,154,],[-10,-64,-65,25,-13,-13,-12,-11,-77,-82,-76,-79,-78,-69,-82,-13,-13,-81,-80,97,-74,-41,102,-57,121,122,-28,-14,-15,-75,-72,-73,-70,-71,133,97,-27,-48,-47,-50,-49,-44,-45,-43,-46,-40,-53,-55,-52,-56,-51,-54,149,150,-29,-42,-58,150,]),'SEMICOLON':([10,12,13,16,17,18,20,21,24,25,28,35,36,37,38,39,40,41,42,43,48,49,52,53,55,56,57,59,61,64,65,66,75,76,79,83,92,97,98,99,100,101,120,121,122,124,143,144,145,151,153,155,156,157,158,160,161,162,163,164,166,],[-60,18,-62,-64,-65,-59,-61,-60,-63,29,36,-19,-30,-22,-23,-18,64,65,-20,-21,36,-24,-77,-82,-76,-79,-78,-69,79,-25,-66,-82,-81,-80,-26,-74,-68,-75,-72,-73,-70,-71,-67,36,-27,36,-18,36,-31,36,-39,-32,-35,36,-34,36,-36,-33,-38,36,-37,]),'COMMA':([10,13,16,17,21,26,27,52,53,55,56,57,59,66,73,74,75,76,83,94,97,98,99,100,101,122,],[14,19,-64,-65,14,30,30,-77,-82,-76,-79,-78,-69,-82,30,30,-81,-80,-74,123,-75,-72,-73,-70,-71,-27,]),'PLUS':([52,53,55,56,57,59,61,66,75,76,77,83,89,92,94,97,98,99,100,101,112,120,122,142,154,],[-77,-82,-76,-79,-78,-69,81,-82,-81,-80,81,-74,81,81,81,-75,-72,-73,-70,-71,81,81,-27,81,81,]),'LESSTHANEQ':([52,53,55,56,57,59,66,75,76,83,84,85,87,89,91,97,98,99,100,101,111,112,122,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,149,150,],[-77,-82,-76,-79,-78,-69,-82,-81,-80,-74,-41,109,117,-57,109,-75,-72,-73,-70,-71,109,-57,-27,-48,-47,109,109,-44,109,-43,109,-40,-53,-55,-52,-56,-51,-54,109,-57,-42,-58,]),'$end':([1,2,3,7,8,9,68,],[-2,-1,0,-3,-4,-5,-9,]),'ADDROF':([33,44,54,58,60,62,63,69,70,71,78,80,81,82,86,90,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,123,148,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'DIVIDE':([52,53,55,56,57,59,61,66,75,76,77,83,89,92,94,97,98,99,100,101,112,120,122,142,154,],[-77,-82,-76,-79,-78,-69,78,-82,-81,-80,78,-74,78,78,78,-75,-72,-73,78,78,78,78,-27,78,78,]),'EQUALS':([47,66,67,75,76,],[70,-82,90,-81,-80,]),'TIMES':([6,11,14,18,19,23,28,33,35,36,37,38,39,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,75,76,77,78,79,80,81,82,83,86,89,90,92,94,97,98,99,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,142,143,144,145,148,151,153,154,155,156,157,158,160,161,162,163,164,166,],[11,11,11,-59,11,11,44,58,-19,-30,-22,-23,-18,-20,-21,58,44,-24,11,11,-77,-82,58,-76,-79,-78,58,-69,58,80,58,58,-25,-66,-82,58,58,58,-81,-80,80,58,-26,58,58,58,-74,58,80,58,80,80,-75,-72,-73,80,80,58,58,58,58,58,58,58,58,80,58,58,58,58,58,58,58,80,44,-27,58,44,80,-18,44,-31,58,44,-39,80,-32,-35,44,-34,44,-36,-33,-38,44,-37,]),'ANDOPERATOR':([52,53,55,56,57,59,66,75,76,83,84,85,89,91,97,98,99,100,101,111,122,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,149,150,],[-77,-82,-76,-79,-78,-69,-82,-81,-80,-74,-41,106,-57,106,-75,-72,-73,-70,-71,106,-27,-48,-47,106,-49,-44,-45,-43,-46,-40,-53,-55,-52,-56,-51,-54,106,-42,-58,]),'GREATERTHAN':([52,53,55,56,57,59,66,75,76,83,84,85,87,89,91,97,98,99,100,101,111,112,122,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,149,150,],[-77,-82,-76,-79,-78,-69,-82,-81,-80,-74,-41,103,116,-57,103,-75,-72,-73,-70,-71,103,-57,-27,-48,-47,103,103,-44,103,-43,103,-40,-53,-55,-52,-56,-51,-54,103,-57,-42,-58,]),'LPAREN':([10,33,34,46,47,53,60,62,63,69,70,71,78,80,81,82,86,88,90,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,123,134,148,],[15,60,63,69,71,71,60,60,86,86,60,60,60,60,60,60,86,119,60,86,86,86,86,86,86,86,86,60,60,60,60,60,60,86,60,148,60,]),'ELSE':([18,36,37,38,42,43,49,64,65,79,143,153,156,158,161,163,166,],[-59,-30,-22,-23,-20,-21,-24,-25,-66,-26,151,-39,-35,160,-36,-38,-37,]),'IF':([18,28,35,36,37,38,39,42,43,48,49,64,65,79,121,124,143,144,145,151,153,155,156,157,158,160,161,162,163,164,166,],[-59,46,-19,-30,-22,-23,-18,-20,-21,46,-24,-25,-66,-26,46,46,-18,46,-31,46,-39,-32,-35,46,-34,46,-36,-33,-38,46,-37,]),'LBRACE':([25,102,121,151,160,],[28,124,144,157,164,]),'NAME':([6,11,14,18,19,23,28,33,35,36,37,38,39,42,43,44,48,49,50,51,54,58,60,62,63,64,65,69,70,71,78,79,80,81,82,86,90,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,121,123,124,143,144,145,148,151,153,155,156,157,158,160,161,162,163,164,166,],[10,17,21,-59,21,27,47,53,-19,-30,-22,-23,-18,-20,-21,66,47,-24,21,73,66,66,53,53,53,-25,-66,53,53,53,53,-26,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,47,53,47,-18,47,-31,53,47,-39,-32,-35,47,-34,47,-36,-33,-38,47,-37,]),'FLOAT':([33,60,62,63,69,70,71,78,80,81,82,86,90,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,123,148,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'LESSTHAN':([52,53,55,56,57,59,66,75,76,83,84,85,87,89,91,97,98,99,100,101,111,112,122,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,149,150,],[-77,-82,-76,-79,-78,-69,-82,-81,-80,-74,-41,104,114,-57,104,-75,-72,-73,-70,-71,104,-57,-27,-48,-47,104,104,-44,104,-43,104,-40,-53,-55,-52,-56,-51,-54,104,-57,-42,-58,]),'NOT':([63,69,86,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,],[88,88,88,88,88,88,88,88,88,88,88,134,134,134,134,134,134,88,]),'EQUALCHECK':([52,53,55,56,57,59,66,75,76,83,84,85,87,89,91,97,98,99,100,101,111,112,122,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,149,150,],[-77,-82,-76,-79,-78,-69,-82,-81,-80,-74,-41,110,118,-57,110,-75,-72,-73,-70,-71,110,-57,-27,-48,-47,110,110,-44,-45,-43,-46,-40,-53,-55,-52,-56,-51,-54,110,-57,-42,-58,]),'TYPE':([0,1,4,5,15,18,28,29,30,35,36,37,38,39,42,43,48,49,64,65,68,79,121,124,143,144,145,151,153,155,156,157,158,160,161,162,163,164,166,],[6,6,6,6,23,-59,50,-6,51,-19,-30,-22,-23,-18,-20,-21,50,-24,-25,-66,-9,-26,50,50,-18,50,-31,50,-39,-32,-35,50,-34,50,-36,-33,-38,50,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,1,4,5,],[2,7,8,9,]),'conditionbase':([63,69,86,103,104,105,106,107,108,109,110,119,],[84,84,84,84,84,84,84,84,84,84,84,84,]),'declaration':([0,1,4,5,28,48,121,124,144,151,157,160,164,],[4,4,4,4,43,43,43,43,43,43,43,43,43,]),'unmatchedstatement':([28,48,121,124,144,151,157,160,164,],[35,35,35,35,35,155,35,162,35,]),'whileblock':([28,48,121,124,144,151,157,160,164,],[37,37,37,37,37,37,37,37,37,]),'ifblock':([28,48,121,124,144,151,157,160,164,],[38,38,38,38,38,38,38,38,38,]),'dlist1':([6,14,19,50,],[12,20,24,12,]),'master':([0,],[3,]),'arguments':([71,123,],[93,146,]),'statement':([28,48,121,124,144,151,157,160,164,],[39,39,143,39,39,156,39,163,39,]),'functioncall':([28,33,48,60,62,63,69,70,71,78,80,81,82,86,90,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,121,123,124,144,148,151,157,160,164,],[40,59,40,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,40,59,40,40,59,40,40,40,40,]),'assignment_base':([28,48,121,124,144,151,157,160,164,],[41,41,41,41,41,41,41,41,41,]),'prototype':([0,1,4,5,],[5,5,5,5,]),'function':([0,1,4,5,],[1,1,1,1,]),'conditional':([63,69,86,103,104,105,106,107,108,109,110,119,],[85,91,111,125,126,127,128,129,130,131,132,141,]),'pointervar':([33,44,54,58,60,62,63,69,70,71,78,80,81,82,86,90,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,123,148,],[56,67,75,76,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'assignment':([28,48,121,124,144,151,157,160,164,],[42,42,42,42,42,42,42,42,42,]),'allnumbers':([33,60,62,63,69,70,71,78,80,81,82,86,90,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,123,148,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'paramlist':([15,],[22,]),'fbody':([28,48,124,144,157,164,],[45,72,147,152,159,165,]),'CS':([63,69,86,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,],[87,87,87,87,87,87,87,87,87,87,87,135,136,137,138,139,140,87,]),'returnstatement':([28,48,121,124,144,151,157,160,164,],[49,49,49,49,49,49,49,49,49,]),'paramlist2':([26,27,73,74,],[31,32,95,96,]),'allstatement':([28,48,121,124,144,157,164,],[48,48,145,48,48,48,48,]),'specialvar':([6,11,14,19,23,50,51,],[13,16,13,13,26,13,74,]),'expression':([33,60,62,63,69,70,71,78,80,81,82,86,90,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,123,148,],[61,77,83,89,89,92,94,98,99,100,101,112,120,89,89,89,89,89,89,89,89,89,89,89,89,89,89,142,94,154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> master","S'",1,None,None,None),
  ('master -> program','master',1,'p_masterprogram','Parser.py',328),
  ('program -> function','program',1,'p_program','Parser.py',353),
  ('program -> function program','program',2,'p_program','Parser.py',354),
  ('program -> declaration program','program',2,'p_program','Parser.py',355),
  ('program -> prototype program','program',2,'p_program1','Parser.py',385),
  ('prototype -> TYPE NAME LPAREN paramlist RPAREN SEMICOLON','prototype',6,'p_prototype','Parser.py',406),
  ('allthestars -> TIMES','allthestars',1,'p_function_stars','Parser.py',425),
  ('allthestars -> TIMES allthestars','allthestars',2,'p_function_stars','Parser.py',426),
  ('function -> TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function','Parser.py',445),
  ('paramlist -> <empty>','paramlist',0,'p_paramlist','Parser.py',496),
  ('paramlist -> TYPE NAME paramlist2','paramlist',3,'p_paramlist','Parser.py',497),
  ('paramlist -> TYPE specialvar paramlist2','paramlist',3,'p_paramlist','Parser.py',498),
  ('paramlist2 -> <empty>','paramlist2',0,'p_paramlist2','Parser.py',509),
  ('paramlist2 -> COMMA TYPE NAME paramlist2','paramlist2',4,'p_paramlist2','Parser.py',510),
  ('paramlist2 -> COMMA TYPE specialvar paramlist2','paramlist2',4,'p_paramlist2','Parser.py',511),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','Parser.py',522),
  ('fbody -> <empty>','fbody',0,'p_fbody','Parser.py',523),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','Parser.py',546),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','Parser.py',547),
  ('statement -> assignment','statement',1,'p_statement_expr','Parser.py',553),
  ('statement -> declaration','statement',1,'p_statement_expr','Parser.py',554),
  ('statement -> whileblock','statement',1,'p_statement_expr','Parser.py',555),
  ('statement -> ifblock','statement',1,'p_statement_expr','Parser.py',556),
  ('statement -> returnstatement','statement',1,'p_statement_expr','Parser.py',557),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement_expr','Parser.py',558),
  ('returnstatement -> RETURN expression SEMICOLON','returnstatement',3,'p_return_statement','Parser.py',564),
  ('functioncall -> NAME LPAREN arguments RPAREN','functioncall',4,'p_function_call','Parser.py',570),
  ('arguments -> expression','arguments',1,'p_function_arguments','Parser.py',577),
  ('arguments -> expression COMMA arguments','arguments',3,'p_function_arguments','Parser.py',578),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','Parser.py',588),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','Parser.py',594),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','Parser.py',595),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','Parser.py',596),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','Parser.py',607),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','Parser.py',613),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','Parser.py',614),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','Parser.py',615),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','Parser.py',626),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','Parser.py',631),
  ('conditional -> LPAREN conditional RPAREN','conditional',3,'p_conditional1','Parser.py',637),
  ('conditional -> conditionbase','conditional',1,'p_conditional','Parser.py',643),
  ('conditional -> NOT LPAREN conditional RPAREN','conditional',4,'p_conditional','Parser.py',644),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','Parser.py',645),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','Parser.py',646),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','Parser.py',647),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','Parser.py',648),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','Parser.py',649),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','Parser.py',650),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','Parser.py',651),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','Parser.py',652),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',678),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',679),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','Parser.py',680),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','Parser.py',681),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',682),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',683),
  ('CS -> expression','CS',1,'p_cs','Parser.py',703),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','Parser.py',704),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','Parser.py',712),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','Parser.py',719),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','Parser.py',720),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','Parser.py',736),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','Parser.py',737),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar1','Parser.py',751),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar2','Parser.py',756),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','Parser.py',761),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','Parser.py',770),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','Parser.py',771),
  ('expression -> functioncall','expression',1,'p_expression_fcall','Parser.py',794),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','Parser.py',800),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','Parser.py',801),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','Parser.py',802),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','Parser.py',819),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Parser.py',827),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','Parser.py',834),
  ('expression -> allnumbers','expression',1,'p_expression_base_number','Parser.py',842),
  ('allnumbers -> FLOAT','allnumbers',1,'p_allnumbers_float','Parser.py',850),
  ('allnumbers -> NUMBER','allnumbers',1,'p_allnumbers_int','Parser.py',857),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','Parser.py',864),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','Parser.py',871),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','Parser.py',876),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','Parser.py',882),
]
