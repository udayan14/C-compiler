
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '93B38771D6F1681F3C8108AB5940198E'
    
_lr_action_items = {'UNEQUAL':([59,60,62,63,64,66,73,83,84,91,92,93,95,97,99,105,106,107,108,109,119,120,130,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,157,158,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,116,121,-59,116,-77,-74,-75,-72,-73,116,-59,-29,-50,-49,116,116,-46,-47,-45,-48,-42,-55,-57,-54,-58,-53,-56,116,-59,-44,-60,]),'NUMBER':([39,67,69,70,76,77,78,86,88,89,90,94,98,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,131,156,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'OROPERATOR':([59,60,62,63,64,66,73,83,84,91,92,93,97,99,105,106,107,108,109,119,130,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,157,158,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,113,-59,113,-77,-74,-75,-72,-73,113,-29,-50,-49,-52,-51,-46,-47,-45,-48,-42,-55,-57,-54,-58,-53,-56,113,-44,-60,]),'WHILE':([18,32,37,41,42,43,44,45,48,49,54,55,71,72,87,129,132,151,152,153,159,161,163,164,165,166,168,169,170,171,172,174,],[-61,40,40,-21,-32,-24,-25,-20,-22,-23,40,-26,-27,-68,-28,40,40,-20,40,-33,40,-41,-34,-37,40,-36,40,-38,-35,-40,40,-39,]),'GREATERTHANEQ':([59,60,62,63,64,66,73,83,84,91,92,93,95,97,99,105,106,107,108,109,119,120,130,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,157,158,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,115,123,-59,115,-77,-74,-75,-72,-73,115,-59,-29,-50,-49,115,115,-46,115,-45,115,-42,-55,-57,-54,-58,-53,-56,115,-59,-44,-60,]),'RETURN':([18,32,37,41,42,43,44,45,48,49,54,55,71,72,87,129,132,151,152,153,159,161,163,164,165,166,168,169,170,171,172,174,],[-61,39,39,-21,-32,-24,-25,-20,-22,-23,39,-26,-27,-68,-28,39,39,-20,39,-33,39,-41,-34,-37,39,-36,39,-38,-35,-40,39,-39,]),'MINUS':([39,59,60,62,63,64,66,67,68,69,70,73,76,77,78,83,84,85,86,88,89,90,91,94,97,98,100,102,105,106,107,108,109,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,130,131,150,156,162,],[69,-79,-84,-78,-81,-80,-71,69,90,69,69,-84,69,69,69,-83,-82,90,69,69,69,69,-76,69,90,69,90,90,-77,-74,-75,-72,-73,69,69,69,69,69,69,69,69,90,69,69,69,69,69,69,69,90,-29,69,90,69,90,]),'RBRACE':([18,32,37,41,42,43,44,45,48,49,51,54,55,58,71,72,79,87,132,151,152,153,155,160,161,163,164,165,166,167,169,170,171,172,173,174,],[-61,-19,-19,-21,-32,-24,-25,-20,-22,-23,75,-19,-26,82,-27,-68,-18,-28,-19,-20,-19,-33,161,166,-41,-34,-37,-19,-36,169,-38,-35,-40,-19,174,-39,]),'RPAREN':([15,16,17,19,24,26,29,30,35,36,59,60,62,63,64,66,73,80,81,83,84,85,91,92,93,97,99,101,102,103,104,105,106,107,108,109,119,120,130,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,154,157,158,162,],[-12,-66,-67,-12,28,31,-15,-15,-14,-13,-79,-84,-78,-81,-80,-71,-84,-15,-15,-83,-82,105,-76,-43,110,-59,129,130,-30,-16,-17,-77,-74,-75,-72,-73,141,105,-29,-50,-49,-52,-51,-46,-47,-45,-48,-42,-55,-57,-54,-58,-53,-56,157,158,-31,-44,-60,158,]),'SEMICOLON':([10,12,13,16,17,18,21,22,23,27,28,31,32,37,41,42,43,44,45,46,47,48,49,54,55,59,60,62,63,64,66,68,71,72,73,83,84,87,91,100,105,106,107,108,109,128,129,130,132,151,152,153,159,161,163,164,165,166,168,169,170,171,172,174,],[-62,18,-64,-66,-67,-61,-64,-63,-62,-65,33,38,42,42,-21,-32,-24,-25,-20,71,72,-22,-23,42,-26,-79,-84,-78,-81,-80,-71,87,-27,-68,-84,-83,-82,-28,-76,-70,-77,-74,-75,-72,-73,-69,42,-29,42,-20,42,-33,42,-41,-34,-37,42,-36,42,-38,-35,-40,42,-39,]),'COMMA':([10,13,16,17,21,23,29,30,59,60,62,63,64,66,73,80,81,83,84,91,102,105,106,107,108,109,130,],[14,20,-66,-67,20,14,34,34,-79,-84,-78,-81,-80,-71,-84,34,34,-83,-82,-76,131,-77,-74,-75,-72,-73,-29,]),'PLUS':([59,60,62,63,64,66,68,73,83,84,85,91,97,100,102,105,106,107,108,109,120,128,130,150,162,],[-79,-84,-78,-81,-80,-71,89,-84,-83,-82,89,-76,89,89,89,-77,-74,-75,-72,-73,89,89,-29,89,89,]),'LESSTHANEQ':([59,60,62,63,64,66,73,83,84,91,92,93,95,97,99,105,106,107,108,109,119,120,130,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,157,158,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,117,125,-59,117,-77,-74,-75,-72,-73,117,-59,-29,-50,-49,117,117,-46,117,-45,117,-42,-55,-57,-54,-58,-53,-56,117,-59,-44,-60,]),'$end':([1,2,3,7,8,9,75,82,],[-2,-1,0,-3,-4,-5,-10,-11,]),'ADDROF':([39,50,61,65,67,69,70,76,77,78,86,88,89,90,94,98,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,131,156,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'DIVIDE':([59,60,62,63,64,66,68,73,83,84,85,91,97,100,102,105,106,107,108,109,120,128,130,150,162,],[-79,-84,-78,-81,-80,-71,86,-84,-83,-82,86,-76,86,86,86,-77,-74,-75,86,86,86,86,-29,86,86,]),'EQUALS':([53,73,74,83,84,],[77,-84,98,-83,-82,]),'TIMES':([6,11,14,18,20,25,32,37,39,41,42,43,44,45,48,49,50,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,78,83,84,85,86,87,88,89,90,91,94,97,98,100,102,105,106,107,108,109,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,150,151,152,153,156,159,161,162,163,164,165,166,168,169,170,171,172,174,],[11,11,11,-61,11,11,50,50,65,-21,-32,-24,-25,-20,-22,-23,65,50,-26,11,11,-79,-84,65,-78,-81,-80,65,-71,65,88,65,65,-27,-68,-84,65,65,65,-83,-82,88,65,-28,65,65,65,-76,65,88,65,88,88,-77,-74,-75,88,88,65,65,65,65,65,65,65,65,88,65,65,65,65,65,65,65,88,50,-29,65,50,88,-20,50,-33,65,50,-41,88,-34,-37,50,-36,50,-38,-35,-40,50,-39,]),'ANDOPERATOR':([59,60,62,63,64,66,73,83,84,91,92,93,97,99,105,106,107,108,109,119,130,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,157,158,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,114,-59,114,-77,-74,-75,-72,-73,114,-29,-50,-49,114,-51,-46,-47,-45,-48,-42,-55,-57,-54,-58,-53,-56,114,-44,-60,]),'GREATERTHAN':([59,60,62,63,64,66,73,83,84,91,92,93,95,97,99,105,106,107,108,109,119,120,130,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,157,158,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,111,124,-59,111,-77,-74,-75,-72,-73,111,-59,-29,-50,-49,111,111,-46,111,-45,111,-42,-55,-57,-54,-58,-53,-56,111,-59,-44,-60,]),'LPAREN':([10,13,16,17,39,40,52,53,60,67,69,70,76,77,78,86,88,89,90,94,96,98,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,131,142,156,],[15,19,-66,-67,67,70,76,78,78,67,67,94,94,67,67,67,67,67,67,94,127,67,94,94,94,94,94,94,94,94,67,67,67,67,67,67,94,67,156,67,]),'ELSE':([18,42,43,44,48,49,55,71,72,87,151,161,164,166,169,171,174,],[-61,-32,-24,-25,-22,-23,-26,-27,-68,-28,159,-41,-37,168,-38,-40,-39,]),'IF':([18,32,37,41,42,43,44,45,48,49,54,55,71,72,87,129,132,151,152,153,159,161,163,164,165,166,168,169,170,171,172,174,],[-61,52,52,-21,-32,-24,-25,-20,-22,-23,52,-26,-27,-68,-28,52,52,-20,52,-33,52,-41,-34,-37,52,-36,52,-38,-35,-40,52,-39,]),'LBRACE':([28,31,110,129,159,168,],[32,37,132,152,165,172,]),'NAME':([6,11,14,18,20,25,32,37,39,41,42,43,44,45,48,49,50,54,55,56,57,61,65,67,69,70,71,72,76,77,78,86,87,88,89,90,94,98,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,129,131,132,151,152,153,156,159,161,163,164,165,166,168,169,170,171,172,174,],[10,17,23,-61,23,30,53,53,60,-21,-32,-24,-25,-20,-22,-23,73,53,-26,23,80,73,73,60,60,60,-27,-68,60,60,60,60,-28,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,53,60,53,-20,53,-33,60,53,-41,-34,-37,53,-36,53,-38,-35,-40,53,-39,]),'FLOAT':([39,67,69,70,76,77,78,86,88,89,90,94,98,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,131,156,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'LESSTHAN':([59,60,62,63,64,66,73,83,84,91,92,93,95,97,99,105,106,107,108,109,119,120,130,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,157,158,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,112,122,-59,112,-77,-74,-75,-72,-73,112,-59,-29,-50,-49,112,112,-46,112,-45,112,-42,-55,-57,-54,-58,-53,-56,112,-59,-44,-60,]),'NOT':([70,76,94,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,],[96,96,96,96,96,96,96,96,96,96,96,142,142,142,142,142,142,96,]),'EQUALCHECK':([59,60,62,63,64,66,73,83,84,91,92,93,95,97,99,105,106,107,108,109,119,120,130,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,157,158,],[-79,-84,-78,-81,-80,-71,-84,-83,-82,-76,-43,118,126,-59,118,-77,-74,-75,-72,-73,118,-59,-29,-50,-49,118,118,-46,-47,-45,-48,-42,-55,-57,-54,-58,-53,-56,118,-59,-44,-60,]),'TYPE':([0,1,4,5,15,18,19,32,33,34,37,38,41,42,43,44,45,48,49,54,55,71,72,75,82,87,129,132,151,152,153,159,161,163,164,165,166,168,169,170,171,172,174,],[6,6,6,6,25,-61,25,56,-6,57,56,-7,-21,-32,-24,-25,-20,-22,-23,56,-26,-27,-68,-10,-11,-28,56,56,-20,56,-33,56,-41,-34,-37,56,-36,56,-38,-35,-40,56,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,1,4,5,],[2,7,8,9,]),'conditionbase':([70,76,94,111,112,113,114,115,116,117,118,127,],[92,92,92,92,92,92,92,92,92,92,92,92,]),'declaration':([0,1,4,5,32,37,54,129,132,152,159,165,168,172,],[4,4,4,4,49,49,49,49,49,49,49,49,49,49,]),'unmatchedstatement':([32,37,54,129,132,152,159,165,168,172,],[41,41,41,41,41,41,163,41,170,41,]),'whileblock':([32,37,54,129,132,152,159,165,168,172,],[43,43,43,43,43,43,43,43,43,43,]),'ifblock':([32,37,54,129,132,152,159,165,168,172,],[44,44,44,44,44,44,44,44,44,44,]),'dlist1':([6,14,20,56,],[12,22,27,12,]),'master':([0,],[3,]),'arguments':([78,131,],[101,154,]),'statement':([32,37,54,129,132,152,159,165,168,172,],[45,45,45,151,45,45,164,45,171,45,]),'functioncall':([32,37,39,54,67,69,70,76,77,78,86,88,89,90,94,98,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,129,131,132,152,156,159,165,168,172,],[46,46,66,46,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,46,66,46,46,66,46,46,46,46,]),'assignment_base':([32,37,54,129,132,152,159,165,168,172,],[47,47,47,47,47,47,47,47,47,47,]),'prototype':([0,1,4,5,],[5,5,5,5,]),'function':([0,1,4,5,],[1,1,1,1,]),'conditional':([70,76,94,111,112,113,114,115,116,117,118,127,],[93,99,119,133,134,135,136,137,138,139,140,149,]),'pointervar':([39,50,61,65,67,69,70,76,77,78,86,88,89,90,94,98,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,131,156,],[63,74,83,84,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'assignment':([32,37,54,129,132,152,159,165,168,172,],[48,48,48,48,48,48,48,48,48,48,]),'allnumbers':([39,67,69,70,76,77,78,86,88,89,90,94,98,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,131,156,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'paramlist':([15,19,],[24,26,]),'fbody':([32,37,54,132,152,165,172,],[51,58,79,155,160,167,173,]),'CS':([70,76,94,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,],[95,95,95,95,95,95,95,95,95,95,95,143,144,145,146,147,148,95,]),'returnstatement':([32,37,54,129,132,152,159,165,168,172,],[55,55,55,55,55,55,55,55,55,55,]),'paramlist2':([29,30,80,81,],[35,36,103,104,]),'allstatement':([32,37,54,129,132,152,165,172,],[54,54,54,153,54,54,54,54,]),'specialvar':([6,11,14,20,25,56,57,],[13,16,21,21,29,21,81,]),'expression':([39,67,69,70,76,77,78,86,88,89,90,94,98,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,131,156,],[68,85,91,97,97,100,102,106,107,108,109,120,128,97,97,97,97,97,97,97,97,97,97,97,97,97,97,150,102,162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> master","S'",1,None,None,None),
  ('master -> program','master',1,'p_masterprogram','Parser.py',325),
  ('program -> function','program',1,'p_program','Parser.py',350),
  ('program -> function program','program',2,'p_program','Parser.py',351),
  ('program -> declaration program','program',2,'p_program','Parser.py',352),
  ('program -> prototype program','program',2,'p_program1','Parser.py',382),
  ('prototype -> TYPE NAME LPAREN paramlist RPAREN SEMICOLON','prototype',6,'p_prototype','Parser.py',403),
  ('prototype -> TYPE specialvar LPAREN paramlist RPAREN SEMICOLON','prototype',6,'p_prototype_2','Parser.py',412),
  ('allthestars -> TIMES','allthestars',1,'p_function_stars','Parser.py',431),
  ('allthestars -> TIMES allthestars','allthestars',2,'p_function_stars','Parser.py',432),
  ('function -> TYPE NAME LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function','Parser.py',451),
  ('function -> TYPE specialvar LPAREN paramlist RPAREN LBRACE fbody RBRACE','function',8,'p_function_2','Parser.py',503),
  ('paramlist -> <empty>','paramlist',0,'p_paramlist','Parser.py',509),
  ('paramlist -> TYPE NAME paramlist2','paramlist',3,'p_paramlist','Parser.py',510),
  ('paramlist -> TYPE specialvar paramlist2','paramlist',3,'p_paramlist','Parser.py',511),
  ('paramlist2 -> <empty>','paramlist2',0,'p_paramlist2','Parser.py',522),
  ('paramlist2 -> COMMA TYPE NAME paramlist2','paramlist2',4,'p_paramlist2','Parser.py',523),
  ('paramlist2 -> COMMA TYPE specialvar paramlist2','paramlist2',4,'p_paramlist2','Parser.py',524),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','Parser.py',535),
  ('fbody -> <empty>','fbody',0,'p_fbody','Parser.py',536),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','Parser.py',559),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','Parser.py',560),
  ('statement -> assignment','statement',1,'p_statement_expr','Parser.py',566),
  ('statement -> declaration','statement',1,'p_statement_expr','Parser.py',567),
  ('statement -> whileblock','statement',1,'p_statement_expr','Parser.py',568),
  ('statement -> ifblock','statement',1,'p_statement_expr','Parser.py',569),
  ('statement -> returnstatement','statement',1,'p_statement_expr','Parser.py',570),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement_expr','Parser.py',571),
  ('returnstatement -> RETURN expression SEMICOLON','returnstatement',3,'p_return_statement','Parser.py',577),
  ('functioncall -> NAME LPAREN arguments RPAREN','functioncall',4,'p_function_call','Parser.py',583),
  ('arguments -> expression','arguments',1,'p_function_arguments','Parser.py',592),
  ('arguments -> expression COMMA arguments','arguments',3,'p_function_arguments','Parser.py',593),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','Parser.py',603),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','Parser.py',609),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','Parser.py',610),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','Parser.py',611),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','Parser.py',622),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','Parser.py',628),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','Parser.py',629),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','Parser.py',630),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','Parser.py',641),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','Parser.py',646),
  ('conditional -> LPAREN conditional RPAREN','conditional',3,'p_conditional1','Parser.py',652),
  ('conditional -> conditionbase','conditional',1,'p_conditional','Parser.py',658),
  ('conditional -> NOT LPAREN conditional RPAREN','conditional',4,'p_conditional','Parser.py',659),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','Parser.py',660),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','Parser.py',661),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','Parser.py',662),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','Parser.py',663),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','Parser.py',664),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','Parser.py',665),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','Parser.py',666),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','Parser.py',667),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',693),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','Parser.py',694),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','Parser.py',695),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','Parser.py',696),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',697),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','Parser.py',698),
  ('CS -> expression','CS',1,'p_cs','Parser.py',718),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','Parser.py',719),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','Parser.py',727),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','Parser.py',734),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','Parser.py',735),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','Parser.py',751),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','Parser.py',752),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar1','Parser.py',766),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar2','Parser.py',771),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','Parser.py',776),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','Parser.py',785),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','Parser.py',786),
  ('expression -> functioncall','expression',1,'p_expression_fcall','Parser.py',808),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','Parser.py',814),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','Parser.py',815),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','Parser.py',816),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','Parser.py',833),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Parser.py',841),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','Parser.py',848),
  ('expression -> allnumbers','expression',1,'p_expression_base_number','Parser.py',856),
  ('allnumbers -> FLOAT','allnumbers',1,'p_allnumbers_float','Parser.py',864),
  ('allnumbers -> NUMBER','allnumbers',1,'p_allnumbers_int','Parser.py',871),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','Parser.py',878),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','Parser.py',885),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','Parser.py',890),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','Parser.py',896),
]
