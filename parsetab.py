
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOROPERATORleftANDOPERATORleftEQUALCHECKUNEQUALleftLESSTHANEQLESSTHANGREATERTHANEQGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightVALOFADDROFrightNOTrightUMINUSnonassocBLANKnonassocIFXNUMBER TYPE SEMICOLON EQUALS COMMA LPAREN RPAREN LBRACE RBRACE ANDOPERATOR OROPERATOR ADDROF NAME PLUS MINUS TIMES DIVIDE WHILE IF ELSE EQUALCHECK UNEQUAL LESSTHAN LESSTHANEQ GREATERTHAN GREATERTHANEQ NOT \n\tprogram : function \n\t\t\t\t| function program\n\t\n\tfunction : TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE\n\t\n\tfbody : %prec BLANK\n\t\t\t| allstatement %prec IFX\n\t\t\t| allstatement fbody %prec IFX\n\t\t\t\n\t\n\tallstatement : statement\n\t\t\t\t| unmatchedstatement\n\t\n\tstatement : assignment\n\t\t\t| declaration\n\t\t\t| whileblock\n\t\t\t| ifblock\n\t\n\tstatement : SEMICOLON\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN allstatement\n\t\t\t\t| IF LPAREN conditional RPAREN statement ELSE unmatchedstatement\n\t\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement\n\t\n\tunmatchedstatement : IF LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN statement ELSE statement\n\t\t\t| IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE\n\t\t\t| IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE\n\t\n\tifblock : IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement\n\t\n\twhileblock : WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE\n\t\n\tconditional : conditionbase\n\t\t\t\t| conditional LESSTHANEQ conditional\n\t\t\t\t| conditional GREATERTHANEQ conditional\n\t\t\t\t| conditional UNEQUAL conditional\n\t\t\t\t| conditional EQUALCHECK conditional\n\t\t\t\t| conditional LESSTHAN conditional\n\t\t\t\t| conditional GREATERTHAN conditional\n\t\t\t\t| conditional ANDOPERATOR conditional\n\t\t\t\t| conditional OROPERATOR conditional\n\t\n\tconditionbase : CS LESSTHANEQ CS\n\t\t\t\t| CS GREATERTHANEQ CS\n\t\t\t\t| CS UNEQUAL CS\n\t\t\t\t| CS EQUALCHECK CS\n\t\t\t\t| CS LESSTHAN CS\n\t\t\t\t| CS GREATERTHAN CS\n\t\n\tCS : expression\n\t\t| NOT LPAREN expression RPAREN\n\t\n\t\tdeclaration : TYPE dlist1 SEMICOLON\n\t\n\tdlist1 : NAME  \n\t\t\t| NAME COMMA dlist1\n\t\n\tdlist1 : specialvar\n\t\t\t| specialvar  COMMA dlist1  \n\t\n\tspecialvar : TIMES specialvar %prec VALOF\n\t\t\t\t| TIMES NAME %prec VALOF\n\t\n\tassignment : assignment_base SEMICOLON\n\t \n\tassignment_base : TIMES pointervar EQUALS expression\n\t\t\t| NAME EQUALS expression \n\t \n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\n\texpression : expression TIMES expression\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : NUMBER\n\t\n\texpression : pointervar\n\t\n\tpointervar : TIMES pointervar %prec VALOF\n\t\n\tpointervar : ADDROF pointervar \n\t\n\tpointervar : NAME\n\t'
    
_lr_action_items = {'IF':([8,10,11,13,14,18,20,21,23,37,48,60,86,87,88,106,108,111,112,113,114,115,116,118,119,120,121,123,],[9,-9,-11,-7,9,-10,-12,-8,-13,-47,-40,9,9,-14,-7,9,9,-17,9,-15,-18,-22,9,-21,-16,9,-19,-20,]),'NUMBER':([24,25,32,42,46,56,57,58,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'RBRACE':([8,10,11,13,14,15,18,20,21,23,26,37,48,86,87,88,106,107,110,111,112,113,114,115,117,118,119,120,121,122,123,],[-4,-9,-11,-7,-4,27,-10,-12,-8,-13,-6,-47,-40,-4,-14,-7,-4,111,115,-17,-4,-15,-18,-22,121,-21,-16,-4,-19,123,-20,]),'WHILE':([8,10,11,13,14,18,20,21,23,37,48,60,86,87,88,106,108,111,112,113,114,115,116,118,119,120,121,123,],[12,-9,-11,-7,12,-10,-12,-8,-13,-47,-40,12,12,-14,-7,12,12,-17,12,-15,-18,-22,12,-21,-16,12,-19,-20,]),'LBRACE':([7,60,79,108,116,],[8,86,106,112,120,]),'PLUS':([36,39,41,43,53,54,55,66,78,82,94,95,96,97,98,99,],[-60,-57,-56,67,67,-58,-59,67,-54,67,-55,-50,-53,-51,-52,67,]),'UNEQUAL':([36,38,39,40,41,43,45,47,54,55,78,83,84,85,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,109,],[-60,65,-57,-23,-56,-38,77,65,-58,-59,-54,-24,65,-29,-27,-25,-28,65,-26,-55,-50,-53,-51,-52,-37,-32,-33,-35,-36,-34,-39,]),'LESSTHANEQ':([36,38,39,40,41,43,45,47,54,55,78,83,84,85,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,109,],[-60,57,-57,-23,-56,-38,73,57,-58,-59,-54,-24,57,-29,57,-25,-28,57,57,-55,-50,-53,-51,-52,-37,-32,-33,-35,-36,-34,-39,]),'TYPE':([0,2,8,10,11,13,14,18,20,21,23,27,37,48,60,86,87,88,106,108,111,112,113,114,115,116,118,119,120,121,123,],[1,1,16,-9,-11,-7,16,-10,-12,-8,-13,-3,-47,-40,16,16,-14,-7,16,16,-17,16,-15,-18,-22,16,-21,-16,16,-19,-20,]),'EQUALS':([17,35,36,54,55,],[32,56,-60,-58,-59,]),'DIVIDE':([36,39,41,43,53,54,55,66,78,82,94,95,96,97,98,99,],[-60,-57,-56,70,70,-58,-59,70,-54,70,-55,70,-53,70,-52,70,]),'ANDOPERATOR':([36,38,39,40,41,43,47,54,55,78,83,84,85,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,109,],[-60,58,-57,-23,-56,-38,58,-58,-59,-54,-24,-30,-29,-27,-25,-28,58,-26,-55,-50,-53,-51,-52,-37,-32,-33,-35,-36,-34,-39,]),'LESSTHAN':([36,38,39,40,41,43,45,47,54,55,78,83,84,85,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,109,],[-60,63,-57,-23,-56,-38,76,63,-58,-59,-54,-24,63,-29,63,-25,-28,63,63,-55,-50,-53,-51,-52,-37,-32,-33,-35,-36,-34,-39,]),'OROPERATOR':([36,38,39,40,41,43,47,54,55,78,83,84,85,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,109,],[-60,64,-57,-23,-56,-38,64,-58,-59,-54,-24,-30,-29,-27,-25,-28,-31,-26,-55,-50,-53,-51,-52,-37,-32,-33,-35,-36,-34,-39,]),'LPAREN':([4,9,12,24,25,32,42,44,46,56,57,58,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,],[6,24,25,42,42,42,42,71,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'TIMES':([8,10,11,13,14,16,18,19,20,21,23,24,25,29,32,33,34,36,37,39,41,42,43,46,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,86,87,88,94,95,96,97,98,99,106,108,111,112,113,114,115,116,118,119,120,121,123,],[19,-9,-11,-7,19,29,-10,33,-12,-8,-13,33,33,29,33,33,33,-60,-47,-57,-56,33,68,33,-40,29,29,68,-58,-59,33,33,33,33,19,33,33,33,33,33,68,33,33,33,33,33,33,33,33,33,33,33,-54,68,19,-14,-7,-55,68,-53,68,-52,68,19,19,-17,19,-15,-18,-22,19,-21,-16,19,-19,-20,]),'ADDROF':([19,24,25,32,33,34,42,46,56,57,58,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'NOT':([24,25,57,58,59,61,62,63,64,65,72,73,74,75,76,77,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ELSE':([10,11,18,20,23,37,48,88,111,114,115,118,121,123,],[-9,-11,-10,-12,-13,-47,-40,108,116,-18,-22,-21,-19,-20,]),'GREATERTHAN':([36,38,39,40,41,43,45,47,54,55,78,83,84,85,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,109,],[-60,59,-57,-23,-56,-38,72,59,-58,-59,-54,-24,59,-29,59,-25,-28,59,59,-55,-50,-53,-51,-52,-37,-32,-33,-35,-36,-34,-39,]),'RPAREN':([6,36,38,39,40,41,43,47,54,55,66,78,83,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,],[7,-60,60,-57,-23,-56,-38,79,-58,-59,94,-54,-24,-30,-29,-27,-25,-28,-31,-26,-55,-50,-53,-51,-52,109,-37,-32,-33,-35,-36,-34,-39,]),'EQUALCHECK':([36,38,39,40,41,43,45,47,54,55,78,83,84,85,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,109,],[-60,61,-57,-23,-56,-38,75,61,-58,-59,-54,-24,61,-29,-27,-25,-28,61,-26,-55,-50,-53,-51,-52,-37,-32,-33,-35,-36,-34,-39,]),'GREATERTHANEQ':([36,38,39,40,41,43,45,47,54,55,78,83,84,85,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,109,],[-60,62,-57,-23,-56,-38,74,62,-58,-59,-54,-24,62,-29,62,-25,-28,62,62,-55,-50,-53,-51,-52,-37,-32,-33,-35,-36,-34,-39,]),'NAME':([1,8,10,11,13,14,16,18,19,20,21,23,24,25,29,32,33,34,37,42,46,48,51,52,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,86,87,88,106,108,111,112,113,114,115,116,118,119,120,121,123,],[4,17,-9,-11,-7,17,31,-10,36,-12,-8,-13,36,36,50,36,36,36,-47,36,36,-40,31,31,36,36,36,36,17,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,17,-14,-7,17,17,-17,17,-15,-18,-22,17,-21,-16,17,-19,-20,]),'COMMA':([30,31,49,50,],[51,52,-45,-46,]),'$end':([2,3,5,27,],[-1,0,-2,-3,]),'SEMICOLON':([8,10,11,13,14,18,20,21,22,23,28,30,31,36,37,39,41,48,49,50,53,54,55,60,78,80,81,82,86,87,88,94,95,96,97,98,106,108,111,112,113,114,115,116,118,119,120,121,123,],[23,-9,-11,-7,23,-10,-12,-8,37,-13,48,-43,-41,-60,-47,-57,-56,-40,-45,-46,-49,-58,-59,23,-54,-44,-42,-48,23,-14,-7,-55,-50,-53,-51,-52,23,23,-17,23,-15,-18,-22,23,-21,-16,23,-19,-20,]),'MINUS':([24,25,32,36,39,41,42,43,46,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,94,95,96,97,98,99,],[46,46,46,-60,-57,-56,46,69,46,69,-58,-59,46,46,46,46,46,46,46,46,46,69,46,46,46,46,46,46,46,46,46,46,46,-54,69,-55,-50,-53,-51,-52,69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ifblock':([8,14,60,86,106,108,112,116,120,],[20,20,20,20,20,20,20,20,20,]),'assignment':([8,14,60,86,106,108,112,116,120,],[10,10,10,10,10,10,10,10,10,]),'declaration':([8,14,60,86,106,108,112,116,120,],[18,18,18,18,18,18,18,18,18,]),'function':([0,2,],[2,2,]),'whileblock':([8,14,60,86,106,108,112,116,120,],[11,11,11,11,11,11,11,11,11,]),'dlist1':([16,51,52,],[28,80,81,]),'statement':([8,14,60,86,106,108,112,116,120,],[13,13,88,13,13,114,13,118,13,]),'allstatement':([8,14,60,86,106,112,120,],[14,14,87,14,14,14,14,]),'conditionbase':([24,25,57,58,59,61,62,63,64,65,],[40,40,40,40,40,40,40,40,40,40,]),'pointervar':([19,24,25,32,33,34,42,46,56,57,58,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,],[35,39,39,39,54,55,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'fbody':([8,14,86,106,112,120,],[15,26,107,110,117,122,]),'unmatchedstatement':([8,14,60,86,106,108,112,116,120,],[21,21,21,21,21,113,21,119,21,]),'conditional':([24,25,57,58,59,61,62,63,64,65,],[38,47,83,84,85,89,90,91,92,93,]),'program':([0,2,],[3,5,]),'expression':([24,25,32,42,46,56,57,58,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,],[43,43,53,66,78,82,43,43,43,43,43,43,43,43,95,96,97,98,99,43,43,43,43,43,43,]),'specialvar':([16,29,51,52,],[30,49,30,30,]),'assignment_base':([8,14,60,86,106,108,112,116,120,],[22,22,22,22,22,22,22,22,22,]),'CS':([24,25,57,58,59,61,62,63,64,65,72,73,74,75,76,77,],[45,45,45,45,45,45,45,45,45,45,100,101,102,103,104,105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','better.py',637),
  ('program -> function program','program',2,'p_program','better.py',638),
  ('function -> TYPE NAME LPAREN RPAREN LBRACE fbody RBRACE','function',7,'p_function','better.py',662),
  ('fbody -> <empty>','fbody',0,'p_fbody','better.py',699),
  ('fbody -> allstatement','fbody',1,'p_fbody','better.py',700),
  ('fbody -> allstatement fbody','fbody',2,'p_fbody','better.py',701),
  ('allstatement -> statement','allstatement',1,'p_allstatement_expr','better.py',721),
  ('allstatement -> unmatchedstatement','allstatement',1,'p_allstatement_expr','better.py',722),
  ('statement -> assignment','statement',1,'p_statement_expr','better.py',728),
  ('statement -> declaration','statement',1,'p_statement_expr','better.py',729),
  ('statement -> whileblock','statement',1,'p_statement_expr','better.py',730),
  ('statement -> ifblock','statement',1,'p_statement_expr','better.py',731),
  ('statement -> SEMICOLON','statement',1,'p_empty_statement','better.py',737),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN allstatement','unmatchedstatement',5,'p_unmatchedstatement_expr1','better.py',743),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN statement ELSE unmatchedstatement','unmatchedstatement',7,'p_unmatchedstatement_expr1','better.py',744),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE unmatchedstatement','unmatchedstatement',9,'p_unmatchedstatement_expr1','better.py',745),
  ('unmatchedstatement -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE','unmatchedstatement',7,'p_unmatchedstatement_expr2','better.py',756),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE statement','ifblock',7,'p_ifblock1','better.py',762),
  ('ifblock -> IF LPAREN conditional RPAREN statement ELSE LBRACE fbody RBRACE','ifblock',9,'p_ifblock1','better.py',763),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE LBRACE fbody RBRACE','ifblock',11,'p_ifblock1','better.py',764),
  ('ifblock -> IF LPAREN conditional RPAREN LBRACE fbody RBRACE ELSE statement','ifblock',9,'p_ifblock2','better.py',775),
  ('whileblock -> WHILE LPAREN conditional RPAREN LBRACE fbody RBRACE','whileblock',7,'p_while','better.py',780),
  ('conditional -> conditionbase','conditional',1,'p_conditional','better.py',786),
  ('conditional -> conditional LESSTHANEQ conditional','conditional',3,'p_conditional','better.py',787),
  ('conditional -> conditional GREATERTHANEQ conditional','conditional',3,'p_conditional','better.py',788),
  ('conditional -> conditional UNEQUAL conditional','conditional',3,'p_conditional','better.py',789),
  ('conditional -> conditional EQUALCHECK conditional','conditional',3,'p_conditional','better.py',790),
  ('conditional -> conditional LESSTHAN conditional','conditional',3,'p_conditional','better.py',791),
  ('conditional -> conditional GREATERTHAN conditional','conditional',3,'p_conditional','better.py',792),
  ('conditional -> conditional ANDOPERATOR conditional','conditional',3,'p_conditional','better.py',793),
  ('conditional -> conditional OROPERATOR conditional','conditional',3,'p_conditional','better.py',794),
  ('conditionbase -> CS LESSTHANEQ CS','conditionbase',3,'p_conditionbase','better.py',818),
  ('conditionbase -> CS GREATERTHANEQ CS','conditionbase',3,'p_conditionbase','better.py',819),
  ('conditionbase -> CS UNEQUAL CS','conditionbase',3,'p_conditionbase','better.py',820),
  ('conditionbase -> CS EQUALCHECK CS','conditionbase',3,'p_conditionbase','better.py',821),
  ('conditionbase -> CS LESSTHAN CS','conditionbase',3,'p_conditionbase','better.py',822),
  ('conditionbase -> CS GREATERTHAN CS','conditionbase',3,'p_conditionbase','better.py',823),
  ('CS -> expression','CS',1,'p_cs','better.py',843),
  ('CS -> NOT LPAREN expression RPAREN','CS',4,'p_cs','better.py',844),
  ('declaration -> TYPE dlist1 SEMICOLON','declaration',3,'p_declaration1','better.py',852),
  ('dlist1 -> NAME','dlist1',1,'p_dlistname','better.py',858),
  ('dlist1 -> NAME COMMA dlist1','dlist1',3,'p_dlistname','better.py',859),
  ('dlist1 -> specialvar','dlist1',1,'p_dlistpointer','better.py',866),
  ('dlist1 -> specialvar COMMA dlist1','dlist1',3,'p_dlistpointer','better.py',867),
  ('specialvar -> TIMES specialvar','specialvar',2,'p_specialvar','better.py',874),
  ('specialvar -> TIMES NAME','specialvar',2,'p_specialvar','better.py',875),
  ('assignment -> assignment_base SEMICOLON','assignment',2,'p_assignment','better.py',880),
  ('assignment_base -> TIMES pointervar EQUALS expression','assignment_base',4,'p_assignment_base_pointer','better.py',889),
  ('assignment_base -> NAME EQUALS expression','assignment_base',3,'p_assignment_base_pointer','better.py',890),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','better.py',910),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','better.py',911),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','better.py',912),
  ('expression -> expression TIMES expression','expression',3,'p_expression_mul','better.py',929),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','better.py',937),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','better.py',944),
  ('expression -> NUMBER','expression',1,'p_expression_base_number','better.py',950),
  ('expression -> pointervar','expression',1,'p_expression_base_pointer','better.py',956),
  ('pointervar -> TIMES pointervar','pointervar',2,'p_pointervar1','better.py',963),
  ('pointervar -> ADDROF pointervar','pointervar',2,'p_pointervar2','better.py',969),
  ('pointervar -> NAME','pointervar',1,'p_pointervar3','better.py',976),
]
